<?xml version="1.0"?><ts><start>s0</start><states><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s31"><transition target="s29" action="org.jfree.chart.util.ShapeUtilities.size()" proba="1.0"></transition></state><state id="s30"><transition target="s1" action="org.jfree.chart.util.ShapeUtilities.fromString(java.lang.String)" proba="1.0"></transition></state><state id="s11"><transition target="s11" action="org.jfree.chart.util.ShapeUtilities.equal(java.awt.Shape,java.awt.Shape)" proba="0.5254612546125461"></transition><transition target="s10" action="org.jfree.chart.util.ShapeUtilities.clone(java.lang.Object)" proba="0.0014760147601476014"></transition><transition target="s13" action="org.jfree.chart.util.ShapeUtilities.&lt;init&gt;(java.lang.String)" proba="0.0051660516605166054"></transition><transition target="sX" action="epsilon" proba="0.15719557195571957"></transition><transition target="s1" action="org.jfree.chart.util.ShapeUtilities.fromString(java.lang.String)" proba="0.3107011070110701"></transition></state><state id="s33"><transition target="s34" action="org.jfree.chart.util.ShapeUtilities.indexOf(java.lang.Object)" proba="1.0"></transition></state><state id="s10"><transition target="s11" action="org.jfree.chart.util.ShapeUtilities.equal(java.awt.Shape,java.awt.Shape)" proba="0.41044776119402987"></transition><transition target="s10" action="org.jfree.chart.util.ShapeUtilities.clone(java.lang.Object)" proba="0.19402985074626866"></transition><transition target="s13" action="org.jfree.chart.util.ShapeUtilities.&lt;init&gt;(java.lang.String)" proba="0.1417910447761194"></transition><transition target="sX" action="epsilon" proba="0.2537313432835821"></transition></state><state id="s32"><transition target="s33" action="org.jfree.chart.util.ShapeUtilities.configure()" proba="0.2857142857142857"></transition><transition target="s29" action="org.jfree.chart.util.ShapeUtilities.size()" proba="0.7142857142857143"></transition></state><state id="s13"><transition target="s31" action="org.jfree.chart.util.ShapeUtilities.set(int,java.lang.Object)" proba="0.07142857142857142"></transition><transition target="s10" action="org.jfree.chart.util.ShapeUtilities.clone(java.lang.Object)" proba="0.9285714285714286"></transition></state><state id="s35"><transition target="s35" action="org.jfree.chart.util.ShapeUtilities.intersects(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)" proba="0.8571428571428571"></transition><transition target="sX" action="epsilon" proba="0.14285714285714285"></transition></state><state id="s34"><transition target="s34" action="org.jfree.chart.util.ShapeUtilities.indexOf(java.lang.Object)" proba="0.3333333333333333"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition><transition target="s29" action="org.jfree.chart.util.ShapeUtilities.size()" proba="0.3333333333333333"></transition></state><state id="s12"><transition target="s10" action="org.jfree.chart.util.ShapeUtilities.clone(java.lang.Object)" proba="0.42201834862385323"></transition><transition target="sX" action="epsilon" proba="0.14678899082568808"></transition><transition target="s12" action="org.jfree.chart.util.ShapeUtilities.clone(java.awt.Shape)" proba="0.045871559633027525"></transition><transition target="s8" action="org.jfree.chart.util.ShapeUtilities.&lt;init&gt;()" proba="0.01834862385321101"></transition><transition target="s1" action="org.jfree.chart.util.ShapeUtilities.fromString(java.lang.String)" proba="0.3669724770642202"></transition></state><state id="s15"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s14"><transition target="sX" action="epsilon" proba="0.4375"></transition><transition target="s15" action="org.jfree.chart.util.ShapeUtilities.isPointInRect(double,double,java.awt.geom.Rectangle2D)" proba="0.0625"></transition><transition target="s14" action="org.jfree.chart.util.ShapeUtilities.createTranslatedShape(java.awt.Shape,double,double)" proba="0.46875"></transition><transition target="s1" action="org.jfree.chart.util.ShapeUtilities.fromString(java.lang.String)" proba="0.03125"></transition></state><state id="s17"><transition target="sX" action="epsilon" proba="0.07142857142857142"></transition><transition target="s17" action="org.jfree.chart.util.ShapeUtilities.clipLine(java.awt.geom.Line2D,java.awt.geom.Rectangle2D)" proba="0.8571428571428571"></transition><transition target="s18" action="org.jfree.chart.util.ShapeUtilities.createLineRegion(java.awt.geom.Line2D,float)" proba="0.07142857142857142"></transition></state><state id="s16"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s19"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s18"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s0"><transition target="s8" action="org.jfree.chart.util.ShapeUtilities.&lt;init&gt;()" proba="0.14925373134328357"></transition><transition target="s20" action="org.jfree.chart.util.ShapeUtilities.createTranslatedShape(java.awt.Shape,org.jfree.chart.util.RectangleAnchor,double,double)" proba="0.004975124378109453"></transition><transition target="s11" action="org.jfree.chart.util.ShapeUtilities.equal(java.awt.Shape,java.awt.Shape)" proba="0.0472636815920398"></transition><transition target="s22" action="org.jfree.chart.util.ShapeUtilities.equal(java.awt.geom.Line2D,java.awt.geom.Line2D)" proba="0.007462686567164179"></transition><transition target="s21" action="org.jfree.chart.util.ShapeUtilities.equal(java.awt.geom.Arc2D,java.awt.geom.Arc2D)" proba="0.004975124378109453"></transition><transition target="s13" action="org.jfree.chart.util.ShapeUtilities.&lt;init&gt;(java.lang.String)" proba="0.004975124378109453"></transition><transition target="s35" action="org.jfree.chart.util.ShapeUtilities.intersects(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)" proba="0.0024875621890547263"></transition><transition target="s12" action="org.jfree.chart.util.ShapeUtilities.clone(java.awt.Shape)" proba="0.0472636815920398"></transition><transition target="s23" action="org.jfree.chart.util.ShapeUtilities.&lt;init&gt;(java.awt.Paint,java.awt.Paint,boolean)" proba="0.004975124378109453"></transition><transition target="s14" action="org.jfree.chart.util.ShapeUtilities.createTranslatedShape(java.awt.Shape,double,double)" proba="0.03731343283582089"></transition><transition target="s17" action="org.jfree.chart.util.ShapeUtilities.clipLine(java.awt.geom.Line2D,java.awt.geom.Rectangle2D)" proba="0.004975124378109453"></transition><transition target="s16" action="org.jfree.chart.util.ShapeUtilities.getPointInRectangle(double,double,java.awt.geom.Rectangle2D)" proba="0.007462686567164179"></transition><transition target="s27" action="org.jfree.chart.util.ShapeUtilities.equal(java.awt.geom.GeneralPath,java.awt.geom.GeneralPath)" proba="0.004975124378109453"></transition><transition target="s19" action="org.jfree.chart.util.ShapeUtilities.rotateShape(java.awt.Shape,double,float,float)" proba="0.007462686567164179"></transition><transition target="s1" action="org.jfree.chart.util.ShapeUtilities.fromString(java.lang.String)" proba="0.664179104477612"></transition></state><state id="s1"><transition target="s3" action="org.jfree.chart.util.ShapeUtilities.writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)" proba="0.04948162111215834"></transition><transition target="s4" action="org.jfree.chart.util.ShapeUtilities.writeShape(java.awt.Shape,java.io.ObjectOutputStream)" proba="0.043355325164938736"></transition><transition target="s5" action="org.jfree.chart.util.ShapeUtilities.readPaint(java.io.ObjectInputStream)" proba="0.022148916116870875"></transition><transition target="s11" action="org.jfree.chart.util.ShapeUtilities.equal(java.awt.Shape,java.awt.Shape)" proba="0.2596606974552309"></transition><transition target="s12" action="org.jfree.chart.util.ShapeUtilities.clone(java.awt.Shape)" proba="0.04005655042412818"></transition><transition target="sX" action="epsilon" proba="0.0117813383600377"></transition><transition target="s8" action="org.jfree.chart.util.ShapeUtilities.&lt;init&gt;()" proba="0.001413760603204524"></transition><transition target="s14" action="org.jfree.chart.util.ShapeUtilities.createTranslatedShape(java.awt.Shape,double,double)" proba="9.42507068803016E-4"></transition><transition target="s28" action="org.jfree.chart.util.ShapeUtilities.setPaint(int,java.awt.Paint)" proba="0.001413760603204524"></transition><transition target="s1" action="org.jfree.chart.util.ShapeUtilities.fromString(java.lang.String)" proba="0.32280867106503297"></transition><transition target="s2" action="org.jfree.chart.util.ShapeUtilities.writePaint(java.awt.Paint,java.io.ObjectOutputStream)" proba="0.2469368520263902"></transition></state><state id="s2"><transition target="s3" action="org.jfree.chart.util.ShapeUtilities.writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)" proba="0.0016501650165016502"></transition><transition target="s4" action="org.jfree.chart.util.ShapeUtilities.writeShape(java.awt.Shape,java.io.ObjectOutputStream)" proba="0.0627062706270627"></transition><transition target="sX" action="epsilon" proba="0.03135313531353135"></transition><transition target="s1" action="org.jfree.chart.util.ShapeUtilities.fromString(java.lang.String)" proba="0.8597359735973598"></transition><transition target="s2" action="org.jfree.chart.util.ShapeUtilities.writePaint(java.awt.Paint,java.io.ObjectOutputStream)" proba="0.04455445544554455"></transition></state><state id="s3"><transition target="s1" action="org.jfree.chart.util.ShapeUtilities.fromString(java.lang.String)" proba="0.9905660377358491"></transition><transition target="s2" action="org.jfree.chart.util.ShapeUtilities.writePaint(java.awt.Paint,java.io.ObjectOutputStream)" proba="0.009433962264150943"></transition></state><state id="s4"><transition target="s1" action="org.jfree.chart.util.ShapeUtilities.fromString(java.lang.String)" proba="0.5846153846153846"></transition><transition target="s2" action="org.jfree.chart.util.ShapeUtilities.writePaint(java.awt.Paint,java.io.ObjectOutputStream)" proba="0.4153846153846154"></transition></state><state id="s5"><transition target="s5" action="org.jfree.chart.util.ShapeUtilities.readPaint(java.io.ObjectInputStream)" proba="0.6518518518518519"></transition><transition target="s6" action="org.jfree.chart.util.ShapeUtilities.readStroke(java.io.ObjectInputStream)" proba="0.3111111111111111"></transition><transition target="sX" action="epsilon" proba="0.037037037037037035"></transition></state><state id="s6"><transition target="s6" action="org.jfree.chart.util.ShapeUtilities.readStroke(java.io.ObjectInputStream)" proba="0.4939759036144578"></transition><transition target="s7" action="org.jfree.chart.util.ShapeUtilities.readShape(java.io.ObjectInputStream)" proba="0.4819277108433735"></transition><transition target="sX" action="epsilon" proba="0.024096385542168676"></transition></state><state id="s7"><transition target="s11" action="org.jfree.chart.util.ShapeUtilities.equal(java.awt.Shape,java.awt.Shape)" proba="0.4"></transition><transition target="sX" action="epsilon" proba="0.6"></transition></state><state id="s8"><transition target="s10" action="org.jfree.chart.util.ShapeUtilities.clone(java.lang.Object)" proba="0.12307692307692308"></transition><transition target="sX" action="epsilon" proba="0.03076923076923077"></transition><transition target="s9" action="org.jfree.chart.util.ShapeUtilities.deepClone(java.util.Collection)" proba="0.8"></transition><transition target="s1" action="org.jfree.chart.util.ShapeUtilities.fromString(java.lang.String)" proba="0.046153846153846156"></transition></state><state id="s9"><transition target="s10" action="org.jfree.chart.util.ShapeUtilities.clone(java.lang.Object)" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.5"></transition></state><state id="s20"><transition target="s20" action="org.jfree.chart.util.ShapeUtilities.createTranslatedShape(java.awt.Shape,org.jfree.chart.util.RectangleAnchor,double,double)" proba="0.6"></transition><transition target="sX" action="epsilon" proba="0.4"></transition></state><state id="s22"><transition target="s22" action="org.jfree.chart.util.ShapeUtilities.equal(java.awt.geom.Line2D,java.awt.geom.Line2D)" proba="0.5714285714285714"></transition><transition target="sX" action="epsilon" proba="0.42857142857142855"></transition></state><state id="s21"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s24"><transition target="s25" action="org.jfree.chart.util.ShapeUtilities.equals(java.lang.Object)" proba="1.0"></transition></state><state id="s23"><transition target="s24" action="org.jfree.chart.util.ShapeUtilities.clone()" proba="1.0"></transition></state><state id="s26"><transition target="s11" action="org.jfree.chart.util.ShapeUtilities.equal(java.awt.Shape,java.awt.Shape)" proba="1.0"></transition></state><state id="s25"><transition target="s26" action="org.jfree.chart.util.ShapeUtilities.getLegendLine()" proba="1.0"></transition></state><state id="s28"><transition target="s29" action="org.jfree.chart.util.ShapeUtilities.size()" proba="1.0"></transition></state><state id="s27"><transition target="sX" action="epsilon" proba="0.2857142857142857"></transition><transition target="s27" action="org.jfree.chart.util.ShapeUtilities.equal(java.awt.geom.GeneralPath,java.awt.geom.GeneralPath)" proba="0.7142857142857143"></transition></state><state id="s29"><transition target="s30" action="org.jfree.chart.util.ShapeUtilities.getPaint(int)" proba="0.11538461538461539"></transition><transition target="s32" action="org.jfree.chart.util.ShapeUtilities.get(int)" proba="0.5384615384615384"></transition><transition target="s29" action="org.jfree.chart.util.ShapeUtilities.size()" proba="0.34615384615384615"></transition></state></states></ts>