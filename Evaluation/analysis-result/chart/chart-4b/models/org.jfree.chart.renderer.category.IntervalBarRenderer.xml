<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s5" action="org.jfree.chart.renderer.category.IntervalBarRenderer.hashCode()" proba="0.2857142857142857"></transition><transition target="sX" action="epsilon" proba="0.7142857142857143"></transition></state><state id="s4"><transition target="s3" action="org.jfree.chart.renderer.category.IntervalBarRenderer.equals(java.lang.Object)" proba="1.0"></transition></state><state id="s5"><transition target="s5" action="org.jfree.chart.renderer.category.IntervalBarRenderer.hashCode()" proba="0.25"></transition><transition target="sX" action="epsilon" proba="0.75"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s0"><transition target="s1" action="org.jfree.chart.renderer.category.IntervalBarRenderer.&lt;init&gt;()" proba="1.0"></transition></state><state id="s1"><transition target="s3" action="org.jfree.chart.renderer.category.IntervalBarRenderer.equals(java.lang.Object)" proba="0.3125"></transition><transition target="s5" action="org.jfree.chart.renderer.category.IntervalBarRenderer.hashCode()" proba="0.0625"></transition><transition target="sX" action="epsilon" proba="0.5"></transition><transition target="s2" action="org.jfree.chart.renderer.category.IntervalBarRenderer.clone()" proba="0.125"></transition></state><state id="s2"><transition target="s3" action="org.jfree.chart.renderer.category.IntervalBarRenderer.equals(java.lang.Object)" proba="0.5"></transition><transition target="s4" action="org.jfree.chart.renderer.category.IntervalBarRenderer.getClass()" proba="0.5"></transition></state></states></ts>