<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s4" action="org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.equals(java.lang.Object)" proba="1.0"></transition></state><state id="s4"><transition target="s4" action="org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.equals(java.lang.Object)" proba="0.11538461538461539"></transition><transition target="s11" action="org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.setMedianVisible(boolean)" proba="0.11538461538461539"></transition><transition target="s6" action="org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.getFillBox()" proba="0.11538461538461539"></transition><transition target="s10" action="org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.setMeanVisible(boolean)" proba="0.11538461538461539"></transition><transition target="s13" action="org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.fromString(java.lang.String)" proba="0.07692307692307693"></transition><transition target="sX" action="epsilon" proba="0.15384615384615385"></transition><transition target="s8" action="org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.setItemMargin(double)" proba="0.11538461538461539"></transition><transition target="s12" action="org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.hashCode()" proba="0.07692307692307693"></transition><transition target="s9" action="org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.setMaximumBarWidth(double)" proba="0.11538461538461539"></transition></state><state id="s5"><transition target="s4" action="org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.equals(java.lang.Object)" proba="0.75"></transition><transition target="s6" action="org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.getFillBox()" proba="0.25"></transition></state><state id="s6"><transition target="s7" action="org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.setFillBox(boolean)" proba="1.0"></transition></state><state id="s7"><transition target="s4" action="org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.equals(java.lang.Object)" proba="0.75"></transition><transition target="s8" action="org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.setItemMargin(double)" proba="0.25"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="s4" action="org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.equals(java.lang.Object)" proba="0.75"></transition><transition target="s9" action="org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.setMaximumBarWidth(double)" proba="0.25"></transition></state><state id="s9"><transition target="s4" action="org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.equals(java.lang.Object)" proba="0.75"></transition><transition target="s10" action="org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.setMeanVisible(boolean)" proba="0.25"></transition></state><state id="s11"><transition target="s4" action="org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.equals(java.lang.Object)" proba="0.75"></transition><transition target="sX" action="epsilon" proba="0.25"></transition></state><state id="s10"><transition target="s4" action="org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.equals(java.lang.Object)" proba="0.75"></transition><transition target="s11" action="org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.setMedianVisible(boolean)" proba="0.25"></transition></state><state id="s13"><transition target="s5" action="org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.setArtifactPaint(java.awt.Paint)" proba="1.0"></transition></state><state id="s12"><transition target="sX" action="epsilon" proba="0.75"></transition><transition target="s12" action="org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.hashCode()" proba="0.25"></transition></state><state id="s15"><transition target="sX" action="epsilon" proba="0.6666666666666666"></transition><transition target="s16" action="org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.setSeriesVisibleInLegend(int,java.lang.Boolean)" proba="0.3333333333333333"></transition></state><state id="s14"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s16"><transition target="s15" action="org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.getLegendItem(int,int)" proba="1.0"></transition></state><state id="s0"><transition target="s1" action="org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.&lt;init&gt;()" proba="1.0"></transition></state><state id="s1"><transition target="s4" action="org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.equals(java.lang.Object)" proba="0.17647058823529413"></transition><transition target="s5" action="org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.setArtifactPaint(java.awt.Paint)" proba="0.11764705882352941"></transition><transition target="sX" action="epsilon" proba="0.35294117647058826"></transition><transition target="s12" action="org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.hashCode()" proba="0.058823529411764705"></transition><transition target="s15" action="org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.getLegendItem(int,int)" proba="0.11764705882352941"></transition><transition target="s14" action="org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.setBaseToolTipGenerator(org.jfree.chart.labels.CategoryToolTipGenerator)" proba="0.058823529411764705"></transition><transition target="s2" action="org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.clone()" proba="0.11764705882352941"></transition></state><state id="s2"><transition target="s3" action="org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.getClass()" proba="0.5"></transition><transition target="s4" action="org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.equals(java.lang.Object)" proba="0.5"></transition></state></states></ts>