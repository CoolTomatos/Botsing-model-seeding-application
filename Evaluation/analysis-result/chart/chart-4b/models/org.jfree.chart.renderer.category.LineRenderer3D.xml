<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s4"><transition target="s5" action="org.jfree.chart.renderer.category.LineRenderer3D.setBaseLinesVisible(boolean)" proba="0.5"></transition><transition target="s2" action="org.jfree.chart.renderer.category.LineRenderer3D.equals(java.lang.Object)" proba="0.5"></transition></state><state id="s5"><transition target="s6" action="org.jfree.chart.renderer.category.LineRenderer3D.setSeriesLinesVisible(int,boolean)" proba="0.5"></transition><transition target="s2" action="org.jfree.chart.renderer.category.LineRenderer3D.equals(java.lang.Object)" proba="0.5"></transition></state><state id="s6"><transition target="s8" action="org.jfree.chart.renderer.category.LineRenderer3D.setBaseShapesVisible(boolean)" proba="0.5"></transition><transition target="s2" action="org.jfree.chart.renderer.category.LineRenderer3D.equals(java.lang.Object)" proba="0.5"></transition></state><state id="s7"><transition target="s8" action="org.jfree.chart.renderer.category.LineRenderer3D.setBaseShapesVisible(boolean)" proba="0.5"></transition><transition target="s2" action="org.jfree.chart.renderer.category.LineRenderer3D.equals(java.lang.Object)" proba="0.5"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="s9" action="org.jfree.chart.renderer.category.LineRenderer3D.setSeriesShapesVisible(int,boolean)" proba="0.5"></transition><transition target="s2" action="org.jfree.chart.renderer.category.LineRenderer3D.equals(java.lang.Object)" proba="0.5"></transition></state><state id="s9"><transition target="s10" action="org.jfree.chart.renderer.category.LineRenderer3D.setSeriesShapesFilled(int,boolean)" proba="0.5"></transition><transition target="s2" action="org.jfree.chart.renderer.category.LineRenderer3D.equals(java.lang.Object)" proba="0.5"></transition></state><state id="s11"><transition target="s11" action="org.jfree.chart.renderer.category.LineRenderer3D.setBaseShapesFilled(boolean)" proba="0.3333333333333333"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition><transition target="s2" action="org.jfree.chart.renderer.category.LineRenderer3D.equals(java.lang.Object)" proba="0.3333333333333333"></transition></state><state id="s10"><transition target="s11" action="org.jfree.chart.renderer.category.LineRenderer3D.setBaseShapesFilled(boolean)" proba="0.3333333333333333"></transition><transition target="s10" action="org.jfree.chart.renderer.category.LineRenderer3D.setSeriesShapesFilled(int,boolean)" proba="0.3333333333333333"></transition><transition target="s2" action="org.jfree.chart.renderer.category.LineRenderer3D.equals(java.lang.Object)" proba="0.3333333333333333"></transition></state><state id="s13"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s12"><transition target="s13" action="org.jfree.chart.renderer.category.LineRenderer3D.setBaseURLGenerator(org.jfree.chart.urls.CategoryURLGenerator)" proba="1.0"></transition></state><state id="s15"><transition target="s16" action="org.jfree.chart.renderer.category.LineRenderer3D.setWallPaint(java.awt.Paint)" proba="0.5"></transition><transition target="s2" action="org.jfree.chart.renderer.category.LineRenderer3D.equals(java.lang.Object)" proba="0.5"></transition></state><state id="s14"><transition target="s15" action="org.jfree.chart.renderer.category.LineRenderer3D.setYOffset(double)" proba="0.5"></transition><transition target="s2" action="org.jfree.chart.renderer.category.LineRenderer3D.equals(java.lang.Object)" proba="0.5"></transition></state><state id="s17"><transition target="s18" action="org.jfree.chart.renderer.category.LineRenderer3D.getClass()" proba="1.0"></transition></state><state id="s16"><transition target="sX" action="epsilon" proba="0.5"></transition><transition target="s2" action="org.jfree.chart.renderer.category.LineRenderer3D.equals(java.lang.Object)" proba="0.5"></transition></state><state id="s18"><transition target="s2" action="org.jfree.chart.renderer.category.LineRenderer3D.equals(java.lang.Object)" proba="1.0"></transition></state><state id="s0"><transition target="s5" action="org.jfree.chart.renderer.category.LineRenderer3D.setBaseLinesVisible(boolean)" proba="0.1"></transition><transition target="s1" action="org.jfree.chart.renderer.category.LineRenderer3D.&lt;init&gt;()" proba="0.8"></transition><transition target="s2" action="org.jfree.chart.renderer.category.LineRenderer3D.equals(java.lang.Object)" proba="0.1"></transition></state><state id="s1"><transition target="s3" action="org.jfree.chart.renderer.category.LineRenderer3D.hashCode()" proba="0.125"></transition><transition target="sX" action="epsilon" proba="0.25"></transition><transition target="s12" action="org.jfree.chart.renderer.category.LineRenderer3D.setBaseToolTipGenerator(org.jfree.chart.labels.CategoryToolTipGenerator)" proba="0.125"></transition><transition target="s14" action="org.jfree.chart.renderer.category.LineRenderer3D.setXOffset(double)" proba="0.25"></transition><transition target="s17" action="org.jfree.chart.renderer.category.LineRenderer3D.clone()" proba="0.125"></transition><transition target="s2" action="org.jfree.chart.renderer.category.LineRenderer3D.equals(java.lang.Object)" proba="0.125"></transition></state><state id="s2"><transition target="s3" action="org.jfree.chart.renderer.category.LineRenderer3D.hashCode()" proba="0.047619047619047616"></transition><transition target="s4" action="org.jfree.chart.renderer.category.LineRenderer3D.getBaseLinesVisible()" proba="0.09523809523809523"></transition><transition target="s11" action="org.jfree.chart.renderer.category.LineRenderer3D.setBaseShapesFilled(boolean)" proba="0.047619047619047616"></transition><transition target="s6" action="org.jfree.chart.renderer.category.LineRenderer3D.setSeriesLinesVisible(int,boolean)" proba="0.047619047619047616"></transition><transition target="s10" action="org.jfree.chart.renderer.category.LineRenderer3D.setSeriesShapesFilled(int,boolean)" proba="0.047619047619047616"></transition><transition target="s7" action="org.jfree.chart.renderer.category.LineRenderer3D.getBaseShapesVisible()" proba="0.09523809523809523"></transition><transition target="sX" action="epsilon" proba="0.14285714285714285"></transition><transition target="s9" action="org.jfree.chart.renderer.category.LineRenderer3D.setSeriesShapesVisible(int,boolean)" proba="0.047619047619047616"></transition><transition target="s15" action="org.jfree.chart.renderer.category.LineRenderer3D.setYOffset(double)" proba="0.047619047619047616"></transition><transition target="s16" action="org.jfree.chart.renderer.category.LineRenderer3D.setWallPaint(java.awt.Paint)" proba="0.047619047619047616"></transition><transition target="s2" action="org.jfree.chart.renderer.category.LineRenderer3D.equals(java.lang.Object)" proba="0.3333333333333333"></transition></state></states></ts>