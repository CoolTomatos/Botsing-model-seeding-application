<?xml version="1.0"?><ts><start>s0</start><states><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s11"><transition target="s12" action="org.jfree.chart.util.ShapeUtilities.clone(java.lang.Object)" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.5"></transition></state><state id="s10"><transition target="s11" action="org.jfree.chart.util.ShapeUtilities.deepClone(java.util.Collection)" proba="0.7272727272727273"></transition><transition target="s12" action="org.jfree.chart.util.ShapeUtilities.clone(java.lang.Object)" proba="0.22727272727272727"></transition><transition target="s2" action="org.jfree.chart.util.ShapeUtilities.fromString(java.lang.String)" proba="0.045454545454545456"></transition></state><state id="s13"><transition target="s13" action="org.jfree.chart.util.ShapeUtilities.createTranslatedShape(java.awt.Shape,double,double)" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.5"></transition></state><state id="s12"><transition target="s12" action="org.jfree.chart.util.ShapeUtilities.clone(java.lang.Object)" proba="0.24390243902439024"></transition><transition target="sX" action="epsilon" proba="0.36585365853658536"></transition><transition target="s9" action="org.jfree.chart.util.ShapeUtilities.equal(java.awt.Shape,java.awt.Shape)" proba="0.1951219512195122"></transition><transition target="s14" action="org.jfree.chart.util.ShapeUtilities.&lt;init&gt;(java.lang.String)" proba="0.1951219512195122"></transition></state><state id="s15"><transition target="sX" action="epsilon" proba="0.2857142857142857"></transition><transition target="s15" action="org.jfree.chart.util.ShapeUtilities.equal(java.awt.geom.GeneralPath,java.awt.geom.GeneralPath)" proba="0.7142857142857143"></transition></state><state id="s14"><transition target="s12" action="org.jfree.chart.util.ShapeUtilities.clone(java.lang.Object)" proba="1.0"></transition></state><state id="s17"><transition target="s18" action="org.jfree.chart.util.ShapeUtilities.size()" proba="1.0"></transition></state><state id="s16"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s19"><transition target="s2" action="org.jfree.chart.util.ShapeUtilities.fromString(java.lang.String)" proba="1.0"></transition></state><state id="s18"><transition target="s19" action="org.jfree.chart.util.ShapeUtilities.getPaint(int)" proba="0.5"></transition><transition target="s18" action="org.jfree.chart.util.ShapeUtilities.size()" proba="0.5"></transition></state><state id="s0"><transition target="s9" action="org.jfree.chart.util.ShapeUtilities.equal(java.awt.Shape,java.awt.Shape)" proba="0.12096774193548387"></transition><transition target="s20" action="org.jfree.chart.util.ShapeUtilities.rotateShape(java.awt.Shape,double,float,float)" proba="0.024193548387096774"></transition><transition target="s22" action="org.jfree.chart.util.ShapeUtilities.intersects(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)" proba="0.008064516129032258"></transition><transition target="s10" action="org.jfree.chart.util.ShapeUtilities.&lt;init&gt;()" proba="0.1693548387096774"></transition><transition target="s21" action="org.jfree.chart.util.ShapeUtilities.equal(java.awt.geom.Arc2D,java.awt.geom.Arc2D)" proba="0.016129032258064516"></transition><transition target="s13" action="org.jfree.chart.util.ShapeUtilities.createTranslatedShape(java.awt.Shape,double,double)" proba="0.11290322580645161"></transition><transition target="s24" action="org.jfree.chart.util.ShapeUtilities.clipLine(java.awt.geom.Line2D,java.awt.geom.Rectangle2D)" proba="0.008064516129032258"></transition><transition target="s23" action="org.jfree.chart.util.ShapeUtilities.equal(java.awt.geom.Line2D,java.awt.geom.Line2D)" proba="0.024193548387096774"></transition><transition target="s15" action="org.jfree.chart.util.ShapeUtilities.equal(java.awt.geom.GeneralPath,java.awt.geom.GeneralPath)" proba="0.016129032258064516"></transition><transition target="s14" action="org.jfree.chart.util.ShapeUtilities.&lt;init&gt;(java.lang.String)" proba="0.016129032258064516"></transition><transition target="s25" action="org.jfree.chart.util.ShapeUtilities.createTranslatedShape(java.awt.Shape,org.jfree.chart.util.RectangleAnchor,double,double)" proba="0.008064516129032258"></transition><transition target="s16" action="org.jfree.chart.util.ShapeUtilities.createLineRegion(java.awt.geom.Line2D,float)" proba="0.008064516129032258"></transition><transition target="s1" action="org.jfree.chart.util.ShapeUtilities.clone(java.awt.Shape)" proba="0.08870967741935484"></transition><transition target="s2" action="org.jfree.chart.util.ShapeUtilities.fromString(java.lang.String)" proba="0.3790322580645161"></transition></state><state id="s1"><transition target="sX" action="epsilon" proba="0.5"></transition><transition target="s12" action="org.jfree.chart.util.ShapeUtilities.clone(java.lang.Object)" proba="0.19047619047619047"></transition><transition target="s1" action="org.jfree.chart.util.ShapeUtilities.clone(java.awt.Shape)" proba="0.11904761904761904"></transition><transition target="s2" action="org.jfree.chart.util.ShapeUtilities.fromString(java.lang.String)" proba="0.19047619047619047"></transition></state><state id="s2"><transition target="s3" action="org.jfree.chart.util.ShapeUtilities.writePaint(java.awt.Paint,java.io.ObjectOutputStream)" proba="0.30952380952380953"></transition><transition target="s4" action="org.jfree.chart.util.ShapeUtilities.writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)" proba="0.03741496598639456"></transition><transition target="s5" action="org.jfree.chart.util.ShapeUtilities.writeShape(java.awt.Shape,java.io.ObjectOutputStream)" proba="0.034013605442176874"></transition><transition target="s6" action="org.jfree.chart.util.ShapeUtilities.readPaint(java.io.ObjectInputStream)" proba="0.013605442176870748"></transition><transition target="s10" action="org.jfree.chart.util.ShapeUtilities.&lt;init&gt;()" proba="0.003401360544217687"></transition><transition target="sX" action="epsilon" proba="0.006802721088435374"></transition><transition target="s9" action="org.jfree.chart.util.ShapeUtilities.equal(java.awt.Shape,java.awt.Shape)" proba="0.22108843537414966"></transition><transition target="s17" action="org.jfree.chart.util.ShapeUtilities.setPaint(int,java.awt.Paint)" proba="0.003401360544217687"></transition><transition target="s1" action="org.jfree.chart.util.ShapeUtilities.clone(java.awt.Shape)" proba="0.08843537414965986"></transition><transition target="s2" action="org.jfree.chart.util.ShapeUtilities.fromString(java.lang.String)" proba="0.282312925170068"></transition></state><state id="s3"><transition target="sX" action="epsilon" proba="0.05434782608695652"></transition><transition target="s2" action="org.jfree.chart.util.ShapeUtilities.fromString(java.lang.String)" proba="0.9456521739130435"></transition></state><state id="s4"><transition target="s2" action="org.jfree.chart.util.ShapeUtilities.fromString(java.lang.String)" proba="1.0"></transition></state><state id="s5"><transition target="s3" action="org.jfree.chart.util.ShapeUtilities.writePaint(java.awt.Paint,java.io.ObjectOutputStream)" proba="0.1"></transition><transition target="s2" action="org.jfree.chart.util.ShapeUtilities.fromString(java.lang.String)" proba="0.9"></transition></state><state id="s6"><transition target="s6" action="org.jfree.chart.util.ShapeUtilities.readPaint(java.io.ObjectInputStream)" proba="0.5333333333333333"></transition><transition target="s7" action="org.jfree.chart.util.ShapeUtilities.readStroke(java.io.ObjectInputStream)" proba="0.26666666666666666"></transition><transition target="s8" action="org.jfree.chart.util.ShapeUtilities.readShape(java.io.ObjectInputStream)" proba="0.2"></transition></state><state id="s7"><transition target="s7" action="org.jfree.chart.util.ShapeUtilities.readStroke(java.io.ObjectInputStream)" proba="0.5"></transition><transition target="s8" action="org.jfree.chart.util.ShapeUtilities.readShape(java.io.ObjectInputStream)" proba="0.375"></transition><transition target="sX" action="epsilon" proba="0.125"></transition></state><state id="s8"><transition target="s6" action="org.jfree.chart.util.ShapeUtilities.readPaint(java.io.ObjectInputStream)" proba="0.5"></transition><transition target="s9" action="org.jfree.chart.util.ShapeUtilities.equal(java.awt.Shape,java.awt.Shape)" proba="0.5"></transition></state><state id="s9"><transition target="sX" action="epsilon" proba="0.2972972972972973"></transition><transition target="s9" action="org.jfree.chart.util.ShapeUtilities.equal(java.awt.Shape,java.awt.Shape)" proba="0.38513513513513514"></transition><transition target="s2" action="org.jfree.chart.util.ShapeUtilities.fromString(java.lang.String)" proba="0.31756756756756754"></transition></state><state id="s20"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s22"><transition target="s22" action="org.jfree.chart.util.ShapeUtilities.intersects(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)" proba="0.8571428571428571"></transition><transition target="sX" action="epsilon" proba="0.14285714285714285"></transition></state><state id="s21"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s24"><transition target="s24" action="org.jfree.chart.util.ShapeUtilities.clipLine(java.awt.geom.Line2D,java.awt.geom.Rectangle2D)" proba="0.9230769230769231"></transition><transition target="sX" action="epsilon" proba="0.07692307692307693"></transition></state><state id="s23"><transition target="sX" action="epsilon" proba="0.42857142857142855"></transition><transition target="s23" action="org.jfree.chart.util.ShapeUtilities.equal(java.awt.geom.Line2D,java.awt.geom.Line2D)" proba="0.5714285714285714"></transition></state><state id="s25"><transition target="sX" action="epsilon" proba="0.5"></transition><transition target="s25" action="org.jfree.chart.util.ShapeUtilities.createTranslatedShape(java.awt.Shape,org.jfree.chart.util.RectangleAnchor,double,double)" proba="0.5"></transition></state></states></ts>