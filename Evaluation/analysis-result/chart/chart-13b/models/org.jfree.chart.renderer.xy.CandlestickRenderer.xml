<?xml version="1.0"?><ts><start>s0</start><states><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s11"><transition target="s3" action="org.jfree.chart.renderer.xy.CandlestickRenderer.equals(java.lang.Object)" proba="0.5"></transition><transition target="s12" action="org.jfree.chart.renderer.xy.CandlestickRenderer.setAutoWidthGap(double)" proba="0.5"></transition></state><state id="s10"><transition target="s3" action="org.jfree.chart.renderer.xy.CandlestickRenderer.equals(java.lang.Object)" proba="0.75"></transition><transition target="s11" action="org.jfree.chart.renderer.xy.CandlestickRenderer.setAutoWidthFactor(double)" proba="0.25"></transition></state><state id="s13"><transition target="s3" action="org.jfree.chart.renderer.xy.CandlestickRenderer.equals(java.lang.Object)" proba="0.5"></transition><transition target="s14" action="org.jfree.chart.renderer.xy.CandlestickRenderer.setVolumePaint(java.awt.Paint)" proba="0.5"></transition></state><state id="s12"><transition target="s3" action="org.jfree.chart.renderer.xy.CandlestickRenderer.equals(java.lang.Object)" proba="0.5"></transition><transition target="s13" action="org.jfree.chart.renderer.xy.CandlestickRenderer.setUseOutlinePaint(boolean)" proba="0.5"></transition></state><state id="s15"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s14"><transition target="s3" action="org.jfree.chart.renderer.xy.CandlestickRenderer.equals(java.lang.Object)" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.5"></transition></state><state id="s17"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s16"><transition target="sX" action="epsilon" proba="0.75"></transition><transition target="s16" action="org.jfree.chart.renderer.xy.CandlestickRenderer.hashCode()" proba="0.25"></transition></state><state id="s19"><transition target="s20" action="org.jfree.chart.renderer.xy.CandlestickRenderer.getUseOutlinePaint()" proba="1.0"></transition></state><state id="s18"><transition target="s19" action="org.jfree.chart.renderer.xy.CandlestickRenderer.getDownPaint()" proba="1.0"></transition></state><state id="s0"><transition target="s15" action="org.jfree.chart.renderer.xy.CandlestickRenderer.&lt;init&gt;(long)" proba="0.047619047619047616"></transition><transition target="s26" action="org.jfree.chart.renderer.xy.CandlestickRenderer.&lt;init&gt;(java.lang.Comparable,org.jfree.data.xy.OHLCDataItem[])" proba="0.047619047619047616"></transition><transition target="s17" action="org.jfree.chart.renderer.xy.CandlestickRenderer.&lt;init&gt;(java.util.Date,double,double,double,double,double)" proba="0.047619047619047616"></transition><transition target="s1" action="org.jfree.chart.renderer.xy.CandlestickRenderer.&lt;init&gt;()" proba="0.8571428571428571"></transition></state><state id="s1"><transition target="s3" action="org.jfree.chart.renderer.xy.CandlestickRenderer.equals(java.lang.Object)" proba="0.16666666666666666"></transition><transition target="s5" action="org.jfree.chart.renderer.xy.CandlestickRenderer.setUpPaint(java.awt.Paint)" proba="0.1111111111111111"></transition><transition target="s24" action="org.jfree.chart.renderer.xy.CandlestickRenderer.findRangeBounds(org.jfree.data.xy.XYDataset)" proba="0.05555555555555555"></transition><transition target="sX" action="epsilon" proba="0.3888888888888889"></transition><transition target="s16" action="org.jfree.chart.renderer.xy.CandlestickRenderer.hashCode()" proba="0.05555555555555555"></transition><transition target="s18" action="org.jfree.chart.renderer.xy.CandlestickRenderer.getUpPaint()" proba="0.1111111111111111"></transition><transition target="s2" action="org.jfree.chart.renderer.xy.CandlestickRenderer.clone()" proba="0.1111111111111111"></transition></state><state id="s2"><transition target="sX" action="epsilon" proba="0.5"></transition><transition target="s25" action="org.jfree.chart.renderer.xy.CandlestickRenderer.getClass()" proba="0.5"></transition></state><state id="s3"><transition target="s3" action="org.jfree.chart.renderer.xy.CandlestickRenderer.equals(java.lang.Object)" proba="0.2777777777777778"></transition><transition target="s4" action="org.jfree.chart.renderer.xy.CandlestickRenderer.fromString(java.lang.String)" proba="0.1111111111111111"></transition><transition target="s6" action="org.jfree.chart.renderer.xy.CandlestickRenderer.setDownPaint(java.awt.Paint)" proba="0.027777777777777776"></transition><transition target="s7" action="org.jfree.chart.renderer.xy.CandlestickRenderer.setDrawVolume(boolean)" proba="0.08333333333333333"></transition><transition target="s8" action="org.jfree.chart.renderer.xy.CandlestickRenderer.setCandleWidth(double)" proba="0.08333333333333333"></transition><transition target="sX" action="epsilon" proba="0.08333333333333333"></transition><transition target="s9" action="org.jfree.chart.renderer.xy.CandlestickRenderer.setMaxCandleWidthInMilliseconds(double)" proba="0.08333333333333333"></transition><transition target="s11" action="org.jfree.chart.renderer.xy.CandlestickRenderer.setAutoWidthFactor(double)" proba="0.027777777777777776"></transition><transition target="s10" action="org.jfree.chart.renderer.xy.CandlestickRenderer.setAutoWidthMethod(int)" proba="0.08333333333333333"></transition><transition target="s13" action="org.jfree.chart.renderer.xy.CandlestickRenderer.setUseOutlinePaint(boolean)" proba="0.027777777777777776"></transition><transition target="s12" action="org.jfree.chart.renderer.xy.CandlestickRenderer.setAutoWidthGap(double)" proba="0.027777777777777776"></transition><transition target="s14" action="org.jfree.chart.renderer.xy.CandlestickRenderer.setVolumePaint(java.awt.Paint)" proba="0.027777777777777776"></transition><transition target="s16" action="org.jfree.chart.renderer.xy.CandlestickRenderer.hashCode()" proba="0.05555555555555555"></transition></state><state id="s4"><transition target="s5" action="org.jfree.chart.renderer.xy.CandlestickRenderer.setUpPaint(java.awt.Paint)" proba="0.5"></transition><transition target="s6" action="org.jfree.chart.renderer.xy.CandlestickRenderer.setDownPaint(java.awt.Paint)" proba="0.5"></transition></state><state id="s5"><transition target="s3" action="org.jfree.chart.renderer.xy.CandlestickRenderer.equals(java.lang.Object)" proba="0.75"></transition><transition target="s6" action="org.jfree.chart.renderer.xy.CandlestickRenderer.setDownPaint(java.awt.Paint)" proba="0.25"></transition></state><state id="s6"><transition target="s3" action="org.jfree.chart.renderer.xy.CandlestickRenderer.equals(java.lang.Object)" proba="0.75"></transition><transition target="s7" action="org.jfree.chart.renderer.xy.CandlestickRenderer.setDrawVolume(boolean)" proba="0.25"></transition></state><state id="s7"><transition target="s3" action="org.jfree.chart.renderer.xy.CandlestickRenderer.equals(java.lang.Object)" proba="0.75"></transition><transition target="s8" action="org.jfree.chart.renderer.xy.CandlestickRenderer.setCandleWidth(double)" proba="0.25"></transition></state><state id="s8"><transition target="s3" action="org.jfree.chart.renderer.xy.CandlestickRenderer.equals(java.lang.Object)" proba="0.75"></transition><transition target="s9" action="org.jfree.chart.renderer.xy.CandlestickRenderer.setMaxCandleWidthInMilliseconds(double)" proba="0.25"></transition></state><state id="s9"><transition target="s3" action="org.jfree.chart.renderer.xy.CandlestickRenderer.equals(java.lang.Object)" proba="0.75"></transition><transition target="s10" action="org.jfree.chart.renderer.xy.CandlestickRenderer.setAutoWidthMethod(int)" proba="0.25"></transition></state><state id="s20"><transition target="s21" action="org.jfree.chart.renderer.xy.CandlestickRenderer.getDrawVolume()" proba="1.0"></transition></state><state id="s22"><transition target="s23" action="org.jfree.chart.renderer.xy.CandlestickRenderer.getCandleWidth()" proba="1.0"></transition></state><state id="s21"><transition target="s22" action="org.jfree.chart.renderer.xy.CandlestickRenderer.getVolumePaint()" proba="1.0"></transition></state><state id="s24"><transition target="s24" action="org.jfree.chart.renderer.xy.CandlestickRenderer.findRangeBounds(org.jfree.data.xy.XYDataset)" proba="0.6"></transition><transition target="sX" action="epsilon" proba="0.4"></transition></state><state id="s23"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s26"><transition target="s24" action="org.jfree.chart.renderer.xy.CandlestickRenderer.findRangeBounds(org.jfree.data.xy.XYDataset)" proba="1.0"></transition></state><state id="s25"><transition target="s3" action="org.jfree.chart.renderer.xy.CandlestickRenderer.equals(java.lang.Object)" proba="1.0"></transition></state></states></ts>