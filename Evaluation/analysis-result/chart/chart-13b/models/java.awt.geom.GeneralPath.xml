<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="java.awt.geom.GeneralPath.lineTo(float,float)" proba="0.6296296296296297"></transition><transition target="s4" action="java.awt.geom.GeneralPath.closePath()" proba="0.29218106995884774"></transition><transition target="s11" action="java.awt.geom.GeneralPath.clone()" proba="0.00823045267489712"></transition><transition target="s8" action="java.awt.geom.GeneralPath.curveTo(float,float,float,float,float,float)" proba="0.04526748971193416"></transition><transition target="sX" action="epsilon" proba="0.00411522633744856"></transition><transition target="s2" action="java.awt.geom.GeneralPath.moveTo(float,float)" proba="0.0205761316872428"></transition></state><state id="s4"><transition target="s5" action="java.awt.geom.GeneralPath.createTransformedShape(java.awt.geom.AffineTransform)" proba="0.03571428571428571"></transition><transition target="s10" action="java.awt.geom.GeneralPath.transform(java.awt.geom.AffineTransform)" proba="0.03571428571428571"></transition><transition target="sX" action="epsilon" proba="0.6547619047619048"></transition><transition target="s15" action="java.awt.geom.GeneralPath.getBounds2D()" proba="0.011904761904761904"></transition><transition target="s17" action="java.awt.geom.GeneralPath.intersects(java.awt.geom.Rectangle2D)" proba="0.011904761904761904"></transition><transition target="s1" action="java.awt.geom.GeneralPath.&lt;init&gt;()" proba="0.08333333333333333"></transition><transition target="s2" action="java.awt.geom.GeneralPath.moveTo(float,float)" proba="0.16666666666666666"></transition></state><state id="s5"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s6"><transition target="s7" action="java.awt.geom.GeneralPath.append(java.awt.Shape,boolean)" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.5"></transition></state><state id="s7"><transition target="s4" action="java.awt.geom.GeneralPath.closePath()" proba="0.375"></transition><transition target="s7" action="java.awt.geom.GeneralPath.append(java.awt.Shape,boolean)" proba="0.375"></transition><transition target="sX" action="epsilon" proba="0.25"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="s9" action="java.awt.geom.GeneralPath.quadTo(float,float,float,float)" proba="1.0"></transition></state><state id="s9"><transition target="s3" action="java.awt.geom.GeneralPath.lineTo(float,float)" proba="0.09090909090909091"></transition><transition target="s4" action="java.awt.geom.GeneralPath.closePath()" proba="0.8181818181818182"></transition><transition target="s13" action="java.awt.geom.GeneralPath.setWindingRule(int)" proba="0.09090909090909091"></transition></state><state id="s11"><transition target="s2" action="java.awt.geom.GeneralPath.moveTo(float,float)" proba="1.0"></transition></state><state id="s10"><transition target="s10" action="java.awt.geom.GeneralPath.transform(java.awt.geom.AffineTransform)" proba="0.375"></transition><transition target="sX" action="epsilon" proba="0.625"></transition></state><state id="s13"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s12"><transition target="s4" action="java.awt.geom.GeneralPath.closePath()" proba="0.5"></transition><transition target="s12" action="java.awt.geom.GeneralPath.append(java.awt.geom.PathIterator,boolean)" proba="0.5"></transition></state><state id="s15"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s14"><transition target="sX" action="epsilon" proba="0.5"></transition><transition target="s16" action="java.awt.geom.GeneralPath.getPathIterator(java.awt.geom.AffineTransform)" proba="0.5"></transition></state><state id="s17"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s16"><transition target="sX" action="epsilon" proba="0.5"></transition><transition target="s16" action="java.awt.geom.GeneralPath.getPathIterator(java.awt.geom.AffineTransform)" proba="0.5"></transition></state><state id="s18"><transition target="s3" action="java.awt.geom.GeneralPath.lineTo(float,float)" proba="0.3333333333333333"></transition><transition target="sX" action="epsilon" proba="0.6666666666666666"></transition></state><state id="s0"><transition target="s3" action="java.awt.geom.GeneralPath.lineTo(float,float)" proba="0.012987012987012988"></transition><transition target="s6" action="java.awt.geom.GeneralPath.&lt;init&gt;(java.awt.Shape)" proba="0.05194805194805195"></transition><transition target="s10" action="java.awt.geom.GeneralPath.transform(java.awt.geom.AffineTransform)" proba="0.025974025974025976"></transition><transition target="s14" action="java.awt.geom.GeneralPath.getWindingRule()" proba="0.025974025974025976"></transition><transition target="s18" action="java.awt.geom.GeneralPath.reset()" proba="0.03896103896103896"></transition><transition target="s1" action="java.awt.geom.GeneralPath.&lt;init&gt;()" proba="0.8311688311688312"></transition><transition target="s2" action="java.awt.geom.GeneralPath.moveTo(float,float)" proba="0.012987012987012988"></transition></state><state id="s1"><transition target="s7" action="java.awt.geom.GeneralPath.append(java.awt.Shape,boolean)" proba="0.014084507042253521"></transition><transition target="s2" action="java.awt.geom.GeneralPath.moveTo(float,float)" proba="0.9859154929577465"></transition></state><state id="s2"><transition target="s3" action="java.awt.geom.GeneralPath.lineTo(float,float)" proba="0.9354838709677419"></transition><transition target="s7" action="java.awt.geom.GeneralPath.append(java.awt.Shape,boolean)" proba="0.021505376344086023"></transition><transition target="s12" action="java.awt.geom.GeneralPath.append(java.awt.geom.PathIterator,boolean)" proba="0.010752688172043012"></transition><transition target="sX" action="epsilon" proba="0.021505376344086023"></transition><transition target="s2" action="java.awt.geom.GeneralPath.moveTo(float,float)" proba="0.010752688172043012"></transition></state></states></ts>