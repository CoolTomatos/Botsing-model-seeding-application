<?xml version="1.0"?><ts><start>s0</start><states><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s11"><transition target="s12" action="org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.setDrawOutlines(boolean)" proba="0.6666666666666666"></transition><transition target="s2" action="org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.equals(java.lang.Object)" proba="0.3333333333333333"></transition></state><state id="s10"><transition target="s12" action="org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.setDrawOutlines(boolean)" proba="0.16666666666666666"></transition><transition target="s19" action="org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.setDateFormatOverride(java.text.DateFormat)" proba="0.3333333333333333"></transition><transition target="s2" action="org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.equals(java.lang.Object)" proba="0.5"></transition></state><state id="s13"><transition target="s14" action="org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.setUseFillPaint(boolean)" proba="0.5"></transition><transition target="s2" action="org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.equals(java.lang.Object)" proba="0.5"></transition></state><state id="s12"><transition target="s13" action="org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.setUseOutlinePaint(boolean)" proba="0.3333333333333333"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition><transition target="s2" action="org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.equals(java.lang.Object)" proba="0.3333333333333333"></transition></state><state id="s15"><transition target="sX" action="epsilon" proba="0.5"></transition><transition target="s2" action="org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.equals(java.lang.Object)" proba="0.5"></transition></state><state id="s14"><transition target="s15" action="org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.setDrawSeriesLineAsPath(boolean)" proba="0.5"></transition><transition target="s2" action="org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.equals(java.lang.Object)" proba="0.5"></transition></state><state id="s17"><transition target="s18" action="org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.setBaseToolTipGenerator(org.jfree.chart.labels.XYToolTipGenerator)" proba="1.0"></transition></state><state id="s16"><transition target="sX" action="epsilon" proba="0.5714285714285714"></transition><transition target="s2" action="org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.equals(java.lang.Object)" proba="0.42857142857142855"></transition></state><state id="s19"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s18"><transition target="s16" action="org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.setBaseURLGenerator(org.jfree.chart.urls.XYURLGenerator)" proba="1.0"></transition></state><state id="s0"><transition target="s8" action="org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.setBaseShapesVisible(boolean)" proba="0.06666666666666667"></transition><transition target="s17" action="org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.&lt;init&gt;(boolean,boolean)" proba="0.1"></transition><transition target="s1" action="org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.&lt;init&gt;()" proba="0.8333333333333334"></transition></state><state id="s1"><transition target="s3" action="org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.setSeriesLinesVisible(int,boolean)" proba="0.08"></transition><transition target="s20" action="org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.getLegendItem(int,int)" proba="0.04"></transition><transition target="s22" action="org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.hashCode()" proba="0.04"></transition><transition target="s5" action="org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.fromString(java.lang.String)" proba="0.04"></transition><transition target="s21" action="org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.setSeriesPaint(int,java.awt.Paint)" proba="0.04"></transition><transition target="s6" action="org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.setLegendLine(java.awt.Shape)" proba="0.04"></transition><transition target="sX" action="epsilon" proba="0.4"></transition><transition target="s16" action="org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.setBaseURLGenerator(org.jfree.chart.urls.XYURLGenerator)" proba="0.16"></transition><transition target="s2" action="org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.equals(java.lang.Object)" proba="0.16"></transition></state><state id="s2"><transition target="s3" action="org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.setSeriesLinesVisible(int,boolean)" proba="0.078125"></transition><transition target="s4" action="org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.setBaseLinesVisible(boolean)" proba="0.046875"></transition><transition target="s5" action="org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.fromString(java.lang.String)" proba="0.046875"></transition><transition target="s6" action="org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.setLegendLine(java.awt.Shape)" proba="0.015625"></transition><transition target="s7" action="org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.setSeriesShapesVisible(int,boolean)" proba="0.09375"></transition><transition target="s8" action="org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.setBaseShapesVisible(boolean)" proba="0.046875"></transition><transition target="sX" action="epsilon" proba="0.109375"></transition><transition target="s9" action="org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.setSeriesShapesFilled(int,boolean)" proba="0.09375"></transition><transition target="s11" action="org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.getDrawOutlines()" proba="0.046875"></transition><transition target="s22" action="org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.hashCode()" proba="0.03125"></transition><transition target="s10" action="org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.setBaseShapesFilled(boolean)" proba="0.046875"></transition><transition target="s13" action="org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.setUseOutlinePaint(boolean)" proba="0.015625"></transition><transition target="s15" action="org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.setDrawSeriesLineAsPath(boolean)" proba="0.015625"></transition><transition target="s14" action="org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.setUseFillPaint(boolean)" proba="0.015625"></transition><transition target="s2" action="org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.equals(java.lang.Object)" proba="0.296875"></transition></state><state id="s3"><transition target="s4" action="org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.setBaseLinesVisible(boolean)" proba="0.14285714285714285"></transition><transition target="s2" action="org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.equals(java.lang.Object)" proba="0.8571428571428571"></transition></state><state id="s4"><transition target="s6" action="org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.setLegendLine(java.awt.Shape)" proba="0.25"></transition><transition target="s2" action="org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.equals(java.lang.Object)" proba="0.75"></transition></state><state id="s5"><transition target="s6" action="org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.setLegendLine(java.awt.Shape)" proba="1.0"></transition></state><state id="s6"><transition target="s7" action="org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.setSeriesShapesVisible(int,boolean)" proba="0.14285714285714285"></transition><transition target="s23" action="org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.clone()" proba="0.2857142857142857"></transition><transition target="s2" action="org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.equals(java.lang.Object)" proba="0.5714285714285714"></transition></state><state id="s7"><transition target="s8" action="org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.setBaseShapesVisible(boolean)" proba="0.14285714285714285"></transition><transition target="s2" action="org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.equals(java.lang.Object)" proba="0.8571428571428571"></transition></state><state id="s8"><transition target="s10" action="org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.setBaseShapesFilled(boolean)" proba="0.3333333333333333"></transition><transition target="s9" action="org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.setSeriesShapesFilled(int,boolean)" proba="0.16666666666666666"></transition><transition target="s2" action="org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.equals(java.lang.Object)" proba="0.5"></transition></state><state id="s9"><transition target="s10" action="org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.setBaseShapesFilled(boolean)" proba="0.14285714285714285"></transition><transition target="s2" action="org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.equals(java.lang.Object)" proba="0.8571428571428571"></transition></state><state id="s20"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s22"><transition target="s22" action="org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.hashCode()" proba="0.25"></transition><transition target="sX" action="epsilon" proba="0.75"></transition></state><state id="s21"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s24"><transition target="s2" action="org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.equals(java.lang.Object)" proba="1.0"></transition></state><state id="s23"><transition target="s24" action="org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.getClass()" proba="0.5"></transition><transition target="s2" action="org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.equals(java.lang.Object)" proba="0.5"></transition></state></states></ts>