<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="java.util.Deque.peek()" proba="0.05405405405405406"/><transition target="s4" action="java.util.Deque.push(java.lang.Object)" proba="0.10810810810810811"/><transition target="sX" action="epsilon" proba="0.6486486486486487"/><transition target="s1" action="java.util.Deque.pop()" proba="0.1891891891891892"/></state><state id="s4"><transition target="s4" action="java.util.Deque.push(java.lang.Object)" proba="0.06779661016949153"/><transition target="sX" action="epsilon" proba="0.7966101694915254"/><transition target="s1" action="java.util.Deque.pop()" proba="0.13559322033898305"/></state><state id="s5"><transition target="sX" action="epsilon" proba="0.8"/><transition target="s8" action="java.util.Deque.toArray()" proba="0.1"/><transition target="s9" action="java.util.Deque.toArray(java.lang.Object[])" proba="0.1"/></state><state id="s6"><transition target="s4" action="java.util.Deque.push(java.lang.Object)" proba="1.0"/></state><state id="s7"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s8"><transition target="s5" action="java.util.Deque.size()" proba="1.0"/></state><state id="s9"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s11"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s10"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s13"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s12"><transition target="s13" action="java.util.Deque.iterator()" proba="1.0"/></state><state id="s15"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s14"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s16"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s0"><transition target="s3" action="java.util.Deque.peek()" proba="0.18796992481203006"/><transition target="s4" action="java.util.Deque.push(java.lang.Object)" proba="0.3458646616541353"/><transition target="s5" action="java.util.Deque.size()" proba="0.06015037593984962"/><transition target="s6" action="java.util.Deque.contains(java.lang.Object)" proba="0.007518796992481203"/><transition target="s7" action="java.util.Deque.add(java.lang.Object)" proba="0.007518796992481203"/><transition target="s11" action="java.util.Deque.descendingIterator()" proba="0.007518796992481203"/><transition target="s10" action="java.util.Deque.getFirst()" proba="0.007518796992481203"/><transition target="s13" action="java.util.Deque.iterator()" proba="0.015037593984962405"/><transition target="s12" action="java.util.Deque.removeLast()" proba="0.007518796992481203"/><transition target="s15" action="java.util.Deque.getLast()" proba="0.007518796992481203"/><transition target="s14" action="java.util.Deque.offerFirst(java.lang.Object)" proba="0.007518796992481203"/><transition target="s16" action="java.util.Deque.addAll(java.util.Collection)" proba="0.007518796992481203"/><transition target="s1" action="java.util.Deque.pop()" proba="0.22556390977443608"/><transition target="s2" action="java.util.Deque.isEmpty()" proba="0.10526315789473684"/></state><state id="s1"><transition target="s3" action="java.util.Deque.peek()" proba="0.02127659574468085"/><transition target="s4" action="java.util.Deque.push(java.lang.Object)" proba="0.0851063829787234"/><transition target="s13" action="java.util.Deque.iterator()" proba="0.02127659574468085"/><transition target="sX" action="epsilon" proba="0.851063829787234"/><transition target="s2" action="java.util.Deque.isEmpty()" proba="0.02127659574468085"/></state><state id="s2"><transition target="s3" action="java.util.Deque.peek()" proba="0.6"/><transition target="s5" action="java.util.Deque.size()" proba="0.06666666666666667"/><transition target="s11" action="java.util.Deque.descendingIterator()" proba="0.06666666666666667"/><transition target="s13" action="java.util.Deque.iterator()" proba="0.06666666666666667"/><transition target="sX" action="epsilon" proba="0.06666666666666667"/><transition target="s1" action="java.util.Deque.pop()" proba="0.13333333333333333"/></state></states></ts>