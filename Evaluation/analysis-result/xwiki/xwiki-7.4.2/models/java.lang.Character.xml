<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s4"><transition target="s3" action="java.lang.Character.isLetterOrDigit(char)" proba="0.25"/><transition target="s11" action="java.lang.Character.forDigit(int,int)" proba="0.125"/><transition target="sX" action="epsilon" proba="0.5"/><transition target="s12" action="java.lang.Character.isDigit(char)" proba="0.125"/></state><state id="s5"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s6"><transition target="s6" action="java.lang.Character.isWhitespace(char)" proba="0.1111111111111111"/><transition target="sX" action="epsilon" proba="0.8333333333333334"/><transition target="s8" action="java.lang.Character.isSpaceChar(char)" proba="0.05555555555555555"/></state><state id="s7"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s8"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s9"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s11"><transition target="s4" action="java.lang.Character.isLetter(char)" proba="1.0"/></state><state id="s10"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s13"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s12"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s14"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s0"><transition target="s3" action="java.lang.Character.isLetterOrDigit(char)" proba="0.031746031746031744"/><transition target="s4" action="java.lang.Character.isLetter(char)" proba="0.09523809523809523"/><transition target="s5" action="java.lang.Character.toLowerCase(char)" proba="0.047619047619047616"/><transition target="s6" action="java.lang.Character.isWhitespace(char)" proba="0.25396825396825395"/><transition target="s7" action="java.lang.Character.toUpperCase(char)" proba="0.031746031746031744"/><transition target="s8" action="java.lang.Character.isSpaceChar(char)" proba="0.031746031746031744"/><transition target="s9" action="java.lang.Character.digit(char,int)" proba="0.015873015873015872"/><transition target="s11" action="java.lang.Character.forDigit(int,int)" proba="0.015873015873015872"/><transition target="s10" action="java.lang.Character.isUpperCase(char)" proba="0.015873015873015872"/><transition target="s13" action="java.lang.Character.toChars(int)" proba="0.015873015873015872"/><transition target="s12" action="java.lang.Character.isDigit(char)" proba="0.015873015873015872"/><transition target="s14" action="java.lang.Character.isJavaIdentifierPart(int)" proba="0.015873015873015872"/><transition target="s1" action="java.lang.Character.valueOf(char)" proba="0.36507936507936506"/><transition target="s2" action="java.lang.Character.charValue()" proba="0.047619047619047616"/></state><state id="s1"><transition target="sX" action="epsilon" proba="0.30666666666666664"/><transition target="s1" action="java.lang.Character.valueOf(char)" proba="0.6933333333333334"/></state><state id="s2"><transition target="sX" action="epsilon" proba="0.75"/><transition target="s2" action="java.lang.Character.charValue()" proba="0.25"/></state></states></ts>