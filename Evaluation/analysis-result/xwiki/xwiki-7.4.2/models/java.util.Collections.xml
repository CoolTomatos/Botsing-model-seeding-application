<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="s10" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="0.0625"/><transition target="s7" action="java.util.Collections.unmodifiableList(java.util.List)" proba="0.125"/><transition target="sX" action="epsilon" proba="0.8125"/></state><state id="s4"><transition target="s20" action="java.util.Collections.emptySet()" proba="0.09090909090909091"/><transition target="sX" action="epsilon" proba="0.9090909090909091"/></state><state id="s5"><transition target="sX" action="epsilon" proba="0.8333333333333334"/><transition target="s1" action="java.util.Collections.emptyList()" proba="0.16666666666666666"/></state><state id="s6"><transition target="sX" action="epsilon" proba="0.8823529411764706"/><transition target="s8" action="java.util.Collections.emptyMap()" proba="0.11764705882352941"/></state><state id="s7"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s8"><transition target="s6" action="java.util.Collections.unmodifiableMap(java.util.Map)" proba="0.02564102564102564"/><transition target="sX" action="epsilon" proba="0.8333333333333334"/><transition target="s8" action="java.util.Collections.emptyMap()" proba="0.11538461538461539"/><transition target="s9" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.01282051282051282"/><transition target="s1" action="java.util.Collections.emptyList()" proba="0.01282051282051282"/></state><state id="s9"><transition target="s11" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.02040816326530612"/><transition target="sX" action="epsilon" proba="0.7755102040816326"/><transition target="s9" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.12244897959183673"/><transition target="s1" action="java.util.Collections.emptyList()" proba="0.08163265306122448"/></state><state id="s20"><transition target="s20" action="java.util.Collections.emptySet()" proba="0.058823529411764705"/><transition target="sX" action="epsilon" proba="0.9411764705882353"/></state><state id="s11"><transition target="s11" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.32558139534883723"/><transition target="s22" action="java.util.Collections.emptyIterator()" proba="0.023255813953488372"/><transition target="sX" action="epsilon" proba="0.627906976744186"/><transition target="s9" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.023255813953488372"/></state><state id="s22"><transition target="s22" action="java.util.Collections.emptyIterator()" proba="0.25"/><transition target="s11" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.25"/><transition target="sX" action="epsilon" proba="0.5"/></state><state id="s10"><transition target="s10" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="0.1"/><transition target="sX" action="epsilon" proba="0.9"/></state><state id="s21"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s13"><transition target="sX" action="epsilon" proba="0.7333333333333333"/><transition target="s1" action="java.util.Collections.emptyList()" proba="0.26666666666666666"/></state><state id="s12"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s15"><transition target="sX" action="epsilon" proba="0.8333333333333334"/><transition target="s15" action="java.util.Collections.singleton(java.lang.Object)" proba="0.16666666666666666"/></state><state id="s14"><transition target="sX" action="epsilon" proba="0.6"/><transition target="s16" action="java.util.Collections.synchronizedList(java.util.List)" proba="0.2"/><transition target="s1" action="java.util.Collections.emptyList()" proba="0.2"/></state><state id="s17"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s16"><transition target="sX" action="epsilon" proba="0.5"/><transition target="s14" action="java.util.Collections.synchronizedMap(java.util.Map)" proba="0.5"/></state><state id="s19"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s18"><transition target="s10" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="1.0"/></state><state id="s0"><transition target="s3" action="java.util.Collections.sort(java.util.List)" proba="0.03076923076923077"/><transition target="s4" action="java.util.Collections.unmodifiableSet(java.util.Set)" proba="0.024175824175824177"/><transition target="s5" action="java.util.Collections.unmodifiableCollection(java.util.Collection)" proba="0.026373626373626374"/><transition target="s6" action="java.util.Collections.unmodifiableMap(java.util.Map)" proba="0.03296703296703297"/><transition target="s7" action="java.util.Collections.unmodifiableList(java.util.List)" proba="0.03076923076923077"/><transition target="s8" action="java.util.Collections.emptyMap()" proba="0.14285714285714285"/><transition target="s9" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.08351648351648351"/><transition target="s20" action="java.util.Collections.emptySet()" proba="0.03076923076923077"/><transition target="s11" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.05934065934065934"/><transition target="s22" action="java.util.Collections.emptyIterator()" proba="0.004395604395604396"/><transition target="s10" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="0.05274725274725275"/><transition target="s21" action="java.util.Collections.newSetFromMap(java.util.Map)" proba="0.002197802197802198"/><transition target="s13" action="java.util.Collections.reverse(java.util.List)" proba="0.03296703296703297"/><transition target="s15" action="java.util.Collections.singleton(java.lang.Object)" proba="0.01098901098901099"/><transition target="s14" action="java.util.Collections.synchronizedMap(java.util.Map)" proba="0.008791208791208791"/><transition target="s17" action="java.util.Collections.min(java.util.Collection)" proba="0.002197802197802198"/><transition target="s16" action="java.util.Collections.synchronizedList(java.util.List)" proba="0.002197802197802198"/><transition target="s19" action="java.util.Collections.enumeration(java.util.Collection)" proba="0.006593406593406593"/><transition target="s1" action="java.util.Collections.emptyList()" proba="0.4065934065934066"/><transition target="s2" action="java.util.Collections.addAll(java.util.Collection,java.lang.Object[])" proba="0.008791208791208791"/></state><state id="s1"><transition target="s20" action="java.util.Collections.emptySet()" proba="0.004608294930875576"/><transition target="s3" action="java.util.Collections.sort(java.util.List)" proba="0.009216589861751152"/><transition target="s10" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="0.004608294930875576"/><transition target="s7" action="java.util.Collections.unmodifiableList(java.util.List)" proba="0.013824884792626729"/><transition target="sX" action="epsilon" proba="0.8341013824884793"/><transition target="s12" action="java.util.Collections.iterator()" proba="0.013824884792626729"/><transition target="s8" action="java.util.Collections.emptyMap()" proba="0.009216589861751152"/><transition target="s9" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.013824884792626729"/><transition target="s18" action="java.util.Collections.reverseOrder()" proba="0.004608294930875576"/><transition target="s1" action="java.util.Collections.emptyList()" proba="0.09216589861751152"/></state><state id="s2"><transition target="sX" action="epsilon" proba="1.0"/></state></states></ts>