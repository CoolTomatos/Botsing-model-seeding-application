<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s4"><transition target="s3" action="java.util.Deque.iterator()" proba="0.02564102564102564"/><transition target="s6" action="java.util.Deque.isEmpty()" proba="0.02564102564102564"/><transition target="s10" action="java.util.Deque.contains(java.lang.Object)" proba="0.02564102564102564"/><transition target="s7" action="java.util.Deque.size()" proba="0.02564102564102564"/><transition target="sX" action="epsilon" proba="0.7948717948717948"/><transition target="s1" action="java.util.Deque.peek()" proba="0.02564102564102564"/><transition target="s2" action="java.util.Deque.push(java.lang.Object)" proba="0.07692307692307693"/></state><state id="s5"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s6"><transition target="s3" action="java.util.Deque.iterator()" proba="0.047619047619047616"/><transition target="s4" action="java.util.Deque.pop()" proba="0.09523809523809523"/><transition target="s7" action="java.util.Deque.size()" proba="0.09523809523809523"/><transition target="s8" action="java.util.Deque.descendingIterator()" proba="0.047619047619047616"/><transition target="s1" action="java.util.Deque.peek()" proba="0.7142857142857143"/></state><state id="s7"><transition target="s3" action="java.util.Deque.iterator()" proba="0.0625"/><transition target="s4" action="java.util.Deque.pop()" proba="0.0625"/><transition target="s6" action="java.util.Deque.isEmpty()" proba="0.0625"/><transition target="sX" action="epsilon" proba="0.625"/><transition target="s12" action="java.util.Deque.toArray(java.lang.Object[])" proba="0.0625"/><transition target="s14" action="java.util.Deque.toArray()" proba="0.0625"/><transition target="s2" action="java.util.Deque.push(java.lang.Object)" proba="0.0625"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s8"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s9"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s11"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s10"><transition target="sX" action="epsilon" proba="0.3333333333333333"/><transition target="s2" action="java.util.Deque.push(java.lang.Object)" proba="0.6666666666666666"/></state><state id="s13"><transition target="s3" action="java.util.Deque.iterator()" proba="1.0"/></state><state id="s12"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s15"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s14"><transition target="s7" action="java.util.Deque.size()" proba="1.0"/></state><state id="s16"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s0"><transition target="s3" action="java.util.Deque.iterator()" proba="0.016129032258064516"/><transition target="s4" action="java.util.Deque.pop()" proba="0.23387096774193547"/><transition target="s5" action="java.util.Deque.addAll(java.util.Collection)" proba="0.008064516129032258"/><transition target="s6" action="java.util.Deque.isEmpty()" proba="0.1532258064516129"/><transition target="s7" action="java.util.Deque.size()" proba="0.08064516129032258"/><transition target="s8" action="java.util.Deque.descendingIterator()" proba="0.008064516129032258"/><transition target="s9" action="java.util.Deque.getFirst()" proba="0.008064516129032258"/><transition target="s11" action="java.util.Deque.offerFirst(java.lang.Object)" proba="0.008064516129032258"/><transition target="s10" action="java.util.Deque.contains(java.lang.Object)" proba="0.016129032258064516"/><transition target="s13" action="java.util.Deque.removeLast()" proba="0.008064516129032258"/><transition target="s15" action="java.util.Deque.add(java.lang.Object)" proba="0.008064516129032258"/><transition target="s16" action="java.util.Deque.getLast()" proba="0.008064516129032258"/><transition target="s1" action="java.util.Deque.peek()" proba="0.16129032258064516"/><transition target="s2" action="java.util.Deque.push(java.lang.Object)" proba="0.28225806451612906"/></state><state id="s1"><transition target="s4" action="java.util.Deque.pop()" proba="0.15384615384615385"/><transition target="s7" action="java.util.Deque.size()" proba="0.02564102564102564"/><transition target="sX" action="epsilon" proba="0.6410256410256411"/><transition target="s1" action="java.util.Deque.peek()" proba="0.07692307692307693"/><transition target="s2" action="java.util.Deque.push(java.lang.Object)" proba="0.10256410256410256"/></state><state id="s2"><transition target="s4" action="java.util.Deque.pop()" proba="0.02040816326530612"/><transition target="s7" action="java.util.Deque.size()" proba="0.02040816326530612"/><transition target="sX" action="epsilon" proba="0.8775510204081632"/><transition target="s2" action="java.util.Deque.push(java.lang.Object)" proba="0.08163265306122448"/></state></states></ts>