<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="s7" action="java.util.Collection.isEmpty()" proba="0.25"/><transition target="sX" action="epsilon" proba="0.75"/></state><state id="s4"><transition target="s3" action="java.util.Collection.remove(java.lang.Object)" proba="0.02631578947368421"/><transition target="s4" action="java.util.Collection.contains(java.lang.Object)" proba="0.34210526315789475"/><transition target="sX" action="epsilon" proba="0.5"/><transition target="s8" action="java.util.Collection.toArray()" proba="0.05263157894736842"/><transition target="s1" action="java.util.Collection.iterator()" proba="0.02631578947368421"/><transition target="s2" action="java.util.Collection.size()" proba="0.05263157894736842"/></state><state id="s5"><transition target="s6" action="java.util.Collection.add(java.lang.Object)" proba="0.09090909090909091"/><transition target="sX" action="epsilon" proba="0.7727272727272727"/><transition target="s1" action="java.util.Collection.iterator()" proba="0.13636363636363635"/></state><state id="s6"><transition target="s6" action="java.util.Collection.add(java.lang.Object)" proba="0.041666666666666664"/><transition target="s7" action="java.util.Collection.isEmpty()" proba="0.041666666666666664"/><transition target="sX" action="epsilon" proba="0.875"/><transition target="s2" action="java.util.Collection.size()" proba="0.041666666666666664"/></state><state id="s7"><transition target="s4" action="java.util.Collection.contains(java.lang.Object)" proba="0.016666666666666666"/><transition target="sX" action="epsilon" proba="0.38333333333333336"/><transition target="s1" action="java.util.Collection.iterator()" proba="0.36666666666666664"/><transition target="s2" action="java.util.Collection.size()" proba="0.23333333333333334"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s8"><transition target="sX" action="epsilon" proba="0.75"/><transition target="s2" action="java.util.Collection.size()" proba="0.25"/></state><state id="s9"><transition target="sX" action="epsilon" proba="0.5"/><transition target="s9" action="java.util.Collection.toString()" proba="0.5"/></state><state id="s11"><transition target="s10" action="java.util.Collection.addAll(java.util.Collection)" proba="1.0"/></state><state id="s10"><transition target="s10" action="java.util.Collection.addAll(java.util.Collection)" proba="0.09090909090909091"/><transition target="sX" action="epsilon" proba="0.9090909090909091"/></state><state id="s13"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s12"><transition target="s13" action="java.util.Collection.getId()" proba="1.0"/></state><state id="s15"><transition target="sX" action="epsilon" proba="0.5"/><transition target="s15" action="java.util.Collection.containsAll(java.util.Collection)" proba="0.5"/></state><state id="s14"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s0"><transition target="s3" action="java.util.Collection.remove(java.lang.Object)" proba="0.009554140127388535"/><transition target="s4" action="java.util.Collection.contains(java.lang.Object)" proba="0.054140127388535034"/><transition target="s11" action="java.util.Collection.clear()" proba="0.0031847133757961785"/><transition target="s10" action="java.util.Collection.addAll(java.util.Collection)" proba="0.028662420382165606"/><transition target="s6" action="java.util.Collection.add(java.lang.Object)" proba="0.06687898089171974"/><transition target="s7" action="java.util.Collection.isEmpty()" proba="0.18471337579617833"/><transition target="s8" action="java.util.Collection.toArray()" proba="0.006369426751592357"/><transition target="s1" action="java.util.Collection.iterator()" proba="0.3885350318471338"/><transition target="s2" action="java.util.Collection.size()" proba="0.25796178343949044"/></state><state id="s1"><transition target="s4" action="java.util.Collection.contains(java.lang.Object)" proba="0.0045662100456621"/><transition target="s5" action="java.util.Collection.next()" proba="0.1004566210045662"/><transition target="sX" action="epsilon" proba="0.8721461187214612"/><transition target="s12" action="java.util.Collection.isValid(java.lang.String)" proba="0.0091324200913242"/><transition target="s9" action="java.util.Collection.toString()" proba="0.0045662100456621"/><transition target="s14" action="java.util.Collection.createInputFilterStream(java.util.Map)" proba="0.0045662100456621"/><transition target="s2" action="java.util.Collection.size()" proba="0.0045662100456621"/></state><state id="s2"><transition target="s4" action="java.util.Collection.contains(java.lang.Object)" proba="0.056074766355140186"/><transition target="sX" action="epsilon" proba="0.19626168224299065"/><transition target="s15" action="java.util.Collection.containsAll(java.util.Collection)" proba="0.018691588785046728"/><transition target="s1" action="java.util.Collection.iterator()" proba="0.6635514018691588"/><transition target="s2" action="java.util.Collection.size()" proba="0.06542056074766354"/></state></states></ts>