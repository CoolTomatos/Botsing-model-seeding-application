<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="java.util.Collections.emptyList()" proba="0.20823244552058112"/><transition target="s20" action="java.util.Collections.reverseOrder()" proba="0.002421307506053269"/><transition target="s4" action="java.util.Collections.emptyMap()" proba="0.021791767554479417"/><transition target="s13" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="0.002421307506053269"/><transition target="sX" action="epsilon" proba="0.7191283292978208"/><transition target="s12" action="java.util.Collections.sort(java.util.List)" proba="0.004842615012106538"/><transition target="s8" action="java.util.Collections.emptySet()" proba="0.004842615012106538"/><transition target="s15" action="java.util.Collections.unmodifiableList(java.util.List)" proba="0.007263922518159807"/><transition target="s16" action="java.util.Collections.iterator()" proba="0.007263922518159807"/><transition target="s1" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.002421307506053269"/><transition target="s2" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.01937046004842615"/></state><state id="s4"><transition target="s3" action="java.util.Collections.emptyList()" proba="0.045454545454545456"/><transition target="s4" action="java.util.Collections.emptyMap()" proba="0.17272727272727273"/><transition target="s6" action="java.util.Collections.unmodifiableMap(java.util.Map)" proba="0.00909090909090909"/><transition target="sX" action="epsilon" proba="0.740909090909091"/><transition target="s1" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.013636363636363636"/><transition target="s2" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.01818181818181818"/></state><state id="s5"><transition target="s3" action="java.util.Collections.emptyList()" proba="0.18181818181818182"/><transition target="sX" action="epsilon" proba="0.8181818181818182"/></state><state id="s6"><transition target="s4" action="java.util.Collections.emptyMap()" proba="0.10526315789473684"/><transition target="sX" action="epsilon" proba="0.8421052631578947"/><transition target="s14" action="java.util.Collections.unmodifiableSet(java.util.Set)" proba="0.05263157894736842"/></state><state id="s7"><transition target="s3" action="java.util.Collections.emptyList()" proba="0.25"/><transition target="s10" action="java.util.Collections.synchronizedList(java.util.List)" proba="0.25"/><transition target="sX" action="epsilon" proba="0.5"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s8"><transition target="sX" action="epsilon" proba="0.8461538461538461"/><transition target="s8" action="java.util.Collections.emptySet()" proba="0.11538461538461539"/><transition target="s9" action="java.util.Collections.singleton(java.lang.Object)" proba="0.038461538461538464"/></state><state id="s9"><transition target="sX" action="epsilon" proba="0.4444444444444444"/><transition target="s9" action="java.util.Collections.singleton(java.lang.Object)" proba="0.3888888888888889"/><transition target="s2" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.16666666666666666"/></state><state id="s20"><transition target="s13" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="1.0"/></state><state id="s11"><transition target="s3" action="java.util.Collections.emptyList()" proba="0.2222222222222222"/><transition target="sX" action="epsilon" proba="0.7777777777777778"/></state><state id="s22"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s10"><transition target="s10" action="java.util.Collections.synchronizedList(java.util.List)" proba="0.25"/><transition target="s7" action="java.util.Collections.synchronizedMap(java.util.Map)" proba="0.25"/><transition target="sX" action="epsilon" proba="0.5"/></state><state id="s21"><transition target="s21" action="java.util.Collections.emptyIterator()" proba="0.25"/><transition target="sX" action="epsilon" proba="0.5"/><transition target="s1" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.25"/></state><state id="s13"><transition target="s13" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="0.12121212121212122"/><transition target="sX" action="epsilon" proba="0.8787878787878788"/></state><state id="s12"><transition target="s3" action="java.util.Collections.emptyList()" proba="0.05"/><transition target="s13" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="0.05"/><transition target="sX" action="epsilon" proba="0.8"/><transition target="s15" action="java.util.Collections.unmodifiableList(java.util.List)" proba="0.1"/></state><state id="s15"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s14"><transition target="sX" action="epsilon" proba="0.8666666666666667"/><transition target="s8" action="java.util.Collections.emptySet()" proba="0.13333333333333333"/></state><state id="s17"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s16"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s19"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s18"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s0"><transition target="s3" action="java.util.Collections.emptyList()" proba="0.37405541561712846"/><transition target="s4" action="java.util.Collections.emptyMap()" proba="0.2128463476070529"/><transition target="s5" action="java.util.Collections.unmodifiableCollection(java.util.Collection)" proba="0.013853904282115869"/><transition target="s6" action="java.util.Collections.unmodifiableMap(java.util.Map)" proba="0.021410579345088162"/><transition target="s7" action="java.util.Collections.synchronizedMap(java.util.Map)" proba="0.003778337531486146"/><transition target="s8" action="java.util.Collections.emptySet()" proba="0.02392947103274559"/><transition target="s9" action="java.util.Collections.singleton(java.lang.Object)" proba="0.011335012594458438"/><transition target="s20" action="java.util.Collections.reverseOrder()" proba="0.0012594458438287153"/><transition target="s11" action="java.util.Collections.reverse(java.util.List)" proba="0.022670025188916875"/><transition target="s22" action="java.util.Collections.min(java.util.Collection)" proba="0.0012594458438287153"/><transition target="s10" action="java.util.Collections.synchronizedList(java.util.List)" proba="0.0025188916876574307"/><transition target="s21" action="java.util.Collections.emptyIterator()" proba="0.0025188916876574307"/><transition target="s13" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="0.031486146095717885"/><transition target="s12" action="java.util.Collections.sort(java.util.List)" proba="0.022670025188916875"/><transition target="s15" action="java.util.Collections.unmodifiableList(java.util.List)" proba="0.02392947103274559"/><transition target="s14" action="java.util.Collections.unmodifiableSet(java.util.Set)" proba="0.017632241813602016"/><transition target="s17" action="java.util.Collections.addAll(java.util.Collection,java.lang.Object[])" proba="0.005037783375314861"/><transition target="s19" action="java.util.Collections.enumeration(java.util.Collection)" proba="0.005037783375314861"/><transition target="s18" action="java.util.Collections.newSetFromMap(java.util.Map)" proba="0.0012594458438287153"/><transition target="s1" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.10075566750629723"/><transition target="s2" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.10075566750629723"/></state><state id="s1"><transition target="s3" action="java.util.Collections.emptyList()" proba="0.008547008547008548"/><transition target="s4" action="java.util.Collections.emptyMap()" proba="0.008547008547008548"/><transition target="s21" action="java.util.Collections.emptyIterator()" proba="0.008547008547008548"/><transition target="sX" action="epsilon" proba="0.7264957264957265"/><transition target="s1" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.21367521367521367"/><transition target="s2" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.03418803418803419"/></state><state id="s2"><transition target="s3" action="java.util.Collections.emptyList()" proba="0.09482758620689655"/><transition target="s4" action="java.util.Collections.emptyMap()" proba="0.008620689655172414"/><transition target="sX" action="epsilon" proba="0.6810344827586207"/><transition target="s9" action="java.util.Collections.singleton(java.lang.Object)" proba="0.008620689655172414"/><transition target="s1" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.0603448275862069"/><transition target="s2" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.14655172413793102"/></state></states></ts>