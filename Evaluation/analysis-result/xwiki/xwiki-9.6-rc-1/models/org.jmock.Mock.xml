<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="s5" action="org.jmock.Mock.proxy()" proba="0.375"/><transition target="sX" action="epsilon" proba="0.125"/><transition target="s1" action="org.jmock.Mock.stubs()" proba="0.5"/></state><state id="s4"><transition target="s2" action="org.jmock.Mock.method(java.lang.String)" proba="1.0"/></state><state id="s5"><transition target="s5" action="org.jmock.Mock.proxy()" proba="0.034482758620689655"/><transition target="sX" action="epsilon" proba="0.7241379310344828"/><transition target="s1" action="org.jmock.Mock.stubs()" proba="0.2413793103448276"/></state><state id="s6"><transition target="s5" action="org.jmock.Mock.proxy()" proba="0.5"/><transition target="s1" action="org.jmock.Mock.stubs()" proba="0.5"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s0"><transition target="s4" action="org.jmock.Mock.expects(org.jmock.core.InvocationMatcher)" proba="0.13513513513513514"/><transition target="s5" action="org.jmock.Mock.proxy()" proba="0.1891891891891892"/><transition target="s1" action="org.jmock.Mock.stubs()" proba="0.6756756756756757"/></state><state id="s1"><transition target="s2" action="org.jmock.Mock.method(java.lang.String)" proba="1.0"/></state><state id="s2"><transition target="s3" action="org.jmock.Mock.will(org.jmock.core.Stub)" proba="0.11267605633802817"/><transition target="s5" action="org.jmock.Mock.proxy()" proba="0.23943661971830985"/><transition target="s6" action="org.jmock.Mock.with(org.jmock.core.Constraint,org.jmock.core.Constraint)" proba="0.028169014084507043"/><transition target="sX" action="epsilon" proba="0.2112676056338028"/><transition target="s1" action="org.jmock.Mock.stubs()" proba="0.4084507042253521"/></state></states></ts>