<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="java.util.Collection.contains(java.lang.Object)" proba="0.09523809523809523"/><transition target="s4" action="java.util.Collection.add(java.lang.Object)" proba="0.047619047619047616"/><transition target="s6" action="java.util.Collection.toLowerCase()" proba="0.047619047619047616"/><transition target="sX" action="epsilon" proba="0.7619047619047619"/><transition target="s1" action="java.util.Collection.iterator()" proba="0.047619047619047616"/></state><state id="s4"><transition target="s4" action="java.util.Collection.add(java.lang.Object)" proba="0.13043478260869565"/><transition target="sX" action="epsilon" proba="0.8260869565217391"/><transition target="s8" action="java.util.Collection.addAll(java.util.Collection)" proba="0.043478260869565216"/></state><state id="s5"><transition target="s5" action="java.util.Collection.size()" proba="0.06349206349206349"/><transition target="sX" action="epsilon" proba="0.19047619047619047"/><transition target="s15" action="java.util.Collection.hasNext()" proba="0.015873015873015872"/><transition target="s1" action="java.util.Collection.iterator()" proba="0.7301587301587301"/></state><state id="s6"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s7"><transition target="s4" action="java.util.Collection.add(java.lang.Object)" proba="0.14285714285714285"/><transition target="sX" action="epsilon" proba="0.8571428571428571"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s8"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s9"><transition target="s5" action="java.util.Collection.size()" proba="0.5"/><transition target="sX" action="epsilon" proba="0.5"/></state><state id="s11"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s10"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s13"><transition target="s14" action="java.util.Collection.getId()" proba="1.0"/></state><state id="s12"><transition target="s8" action="java.util.Collection.addAll(java.util.Collection)" proba="1.0"/></state><state id="s15"><transition target="s7" action="java.util.Collection.next()" proba="1.0"/></state><state id="s14"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s0"><transition target="s3" action="java.util.Collection.contains(java.lang.Object)" proba="0.07692307692307693"/><transition target="s4" action="java.util.Collection.add(java.lang.Object)" proba="0.08144796380090498"/><transition target="s5" action="java.util.Collection.size()" proba="0.22624434389140272"/><transition target="s10" action="java.util.Collection.remove(java.lang.Object)" proba="0.013574660633484163"/><transition target="s8" action="java.util.Collection.addAll(java.util.Collection)" proba="0.027149321266968326"/><transition target="s12" action="java.util.Collection.clear()" proba="0.004524886877828055"/><transition target="s9" action="java.util.Collection.toArray()" proba="0.00904977375565611"/><transition target="s1" action="java.util.Collection.iterator()" proba="0.4117647058823529"/><transition target="s2" action="java.util.Collection.isEmpty()" proba="0.1493212669683258"/></state><state id="s1"><transition target="s3" action="java.util.Collection.contains(java.lang.Object)" proba="0.013513513513513514"/><transition target="s11" action="java.util.Collection.createInputFilterStream(java.util.Map)" proba="0.006756756756756757"/><transition target="s5" action="java.util.Collection.size()" proba="0.006756756756756757"/><transition target="s7" action="java.util.Collection.next()" proba="0.04054054054054054"/><transition target="s13" action="java.util.Collection.isValid(java.lang.String)" proba="0.006756756756756757"/><transition target="sX" action="epsilon" proba="0.9256756756756757"/></state><state id="s2"><transition target="s5" action="java.util.Collection.size()" proba="0.21212121212121213"/><transition target="sX" action="epsilon" proba="0.48484848484848486"/><transition target="s1" action="java.util.Collection.iterator()" proba="0.30303030303030304"/></state></states></ts>