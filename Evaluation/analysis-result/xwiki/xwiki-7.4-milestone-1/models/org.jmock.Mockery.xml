<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="s1" action="org.jmock.Mockery.mock(java.lang.Class)" proba="1.0"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s0"><transition target="s3" action="org.jmock.Mockery.&lt;init>()" proba="0.16666666666666666"/><transition target="s1" action="org.jmock.Mockery.mock(java.lang.Class)" proba="0.8333333333333334"/></state><state id="s1"><transition target="s1" action="org.jmock.Mockery.mock(java.lang.Class)" proba="0.14285714285714285"/><transition target="s2" action="org.jmock.Mockery.checking(org.jmock.internal.ExpectationBuilder)" proba="0.8571428571428571"/></state><state id="s2"><transition target="sX" action="epsilon" proba="0.8571428571428571"/><transition target="s2" action="org.jmock.Mockery.checking(org.jmock.internal.ExpectationBuilder)" proba="0.14285714285714285"/></state></states></ts>