<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="s4" action="org.jmock.integration.junit4.JUnit4Mockery.setImposteriser(org.jmock.api.Imposteriser)" proba="1.0"/></state><state id="s4"><transition target="s5" action="org.jmock.integration.junit4.JUnit4Mockery.mock(java.lang.Class)" proba="1.0"/></state><state id="s5"><transition target="s2" action="org.jmock.integration.junit4.JUnit4Mockery.checking(org.jmock.internal.ExpectationBuilder)" proba="1.0"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s0"><transition target="s1" action="org.jmock.integration.junit4.JUnit4Mockery.&lt;init>()" proba="1.0"/></state><state id="s1"><transition target="s3" action="org.jmock.integration.junit4.JUnit4Mockery.setThreadingPolicy(org.jmock.api.ThreadingPolicy)" proba="0.08333333333333333"/><transition target="s5" action="org.jmock.integration.junit4.JUnit4Mockery.mock(java.lang.Class)" proba="0.08333333333333333"/><transition target="s2" action="org.jmock.integration.junit4.JUnit4Mockery.checking(org.jmock.internal.ExpectationBuilder)" proba="0.8333333333333334"/></state><state id="s2"><transition target="sX" action="epsilon" proba="0.6666666666666666"/><transition target="s2" action="org.jmock.integration.junit4.JUnit4Mockery.checking(org.jmock.internal.ExpectationBuilder)" proba="0.3333333333333333"/></state></states></ts>