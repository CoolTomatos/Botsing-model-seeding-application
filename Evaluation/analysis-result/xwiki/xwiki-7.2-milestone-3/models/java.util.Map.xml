<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="s4" action="java.util.Map.remove(java.lang.Object)" proba="0.03409090909090909"/><transition target="s10" action="java.util.Map.values()" proba="0.011363636363636364"/><transition target="s21" action="java.util.Map.containsValue(java.lang.Object)" proba="0.045454545454545456"/><transition target="s7" action="java.util.Map.isEmpty()" proba="0.011363636363636364"/><transition target="sX" action="epsilon" proba="0.23863636363636365"/><transition target="s1" action="java.util.Map.put(java.lang.Object,java.lang.Object)" proba="0.22727272727272727"/><transition target="s2" action="java.util.Map.get(java.lang.Object)" proba="0.4318181818181818"/></state><state id="s4"><transition target="s4" action="java.util.Map.remove(java.lang.Object)" proba="0.14432989690721648"/><transition target="s10" action="java.util.Map.values()" proba="0.010309278350515464"/><transition target="s7" action="java.util.Map.isEmpty()" proba="0.010309278350515464"/><transition target="sX" action="epsilon" proba="0.7010309278350515"/><transition target="s12" action="java.util.Map.size()" proba="0.020618556701030927"/><transition target="s8" action="java.util.Map.keySet()" proba="0.010309278350515464"/><transition target="s1" action="java.util.Map.put(java.lang.Object,java.lang.Object)" proba="0.09278350515463918"/><transition target="s2" action="java.util.Map.get(java.lang.Object)" proba="0.010309278350515464"/></state><state id="s5"><transition target="s6" action="java.util.Map.iterator()" proba="0.9915966386554622"/><transition target="sX" action="epsilon" proba="0.008403361344537815"/></state><state id="s6"><transition target="s3" action="java.util.Map.containsKey(java.lang.Object)" proba="0.0136986301369863"/><transition target="s4" action="java.util.Map.remove(java.lang.Object)" proba="0.0182648401826484"/><transition target="s5" action="java.util.Map.entrySet()" proba="0.0091324200913242"/><transition target="s10" action="java.util.Map.values()" proba="0.0045662100456621"/><transition target="sX" action="epsilon" proba="0.7214611872146118"/><transition target="s12" action="java.util.Map.size()" proba="0.0045662100456621"/><transition target="s9" action="java.util.Map.clear()" proba="0.0593607305936073"/><transition target="s15" action="java.util.Map.next()" proba="0.0228310502283105"/><transition target="s19" action="java.util.Map.hasNext()" proba="0.0045662100456621"/><transition target="s1" action="java.util.Map.put(java.lang.Object,java.lang.Object)" proba="0.0136986301369863"/><transition target="s2" action="java.util.Map.get(java.lang.Object)" proba="0.1278538812785388"/></state><state id="s7"><transition target="s3" action="java.util.Map.containsKey(java.lang.Object)" proba="0.027777777777777776"/><transition target="s5" action="java.util.Map.entrySet()" proba="0.1111111111111111"/><transition target="s10" action="java.util.Map.values()" proba="0.027777777777777776"/><transition target="s7" action="java.util.Map.isEmpty()" proba="0.027777777777777776"/><transition target="sX" action="epsilon" proba="0.6111111111111112"/><transition target="s12" action="java.util.Map.size()" proba="0.05555555555555555"/><transition target="s8" action="java.util.Map.keySet()" proba="0.08333333333333333"/><transition target="s1" action="java.util.Map.put(java.lang.Object,java.lang.Object)" proba="0.05555555555555555"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s8"><transition target="s20" action="java.util.Map.toArray(java.lang.Object[])" proba="0.010416666666666666"/><transition target="s6" action="java.util.Map.iterator()" proba="0.65625"/><transition target="s10" action="java.util.Map.values()" proba="0.010416666666666666"/><transition target="sX" action="epsilon" proba="0.20833333333333334"/><transition target="s12" action="java.util.Map.size()" proba="0.010416666666666666"/><transition target="s17" action="java.util.Map.retainAll(java.util.Collection)" proba="0.020833333333333332"/><transition target="s16" action="java.util.Map.containsAll(java.util.Collection)" proba="0.020833333333333332"/><transition target="s19" action="java.util.Map.hasNext()" proba="0.010416666666666666"/><transition target="s18" action="java.util.Map.toString()" proba="0.010416666666666666"/><transition target="s2" action="java.util.Map.get(java.lang.Object)" proba="0.041666666666666664"/></state><state id="s9"><transition target="s4" action="java.util.Map.remove(java.lang.Object)" proba="0.02040816326530612"/><transition target="sX" action="epsilon" proba="0.8163265306122449"/><transition target="s8" action="java.util.Map.keySet()" proba="0.02040816326530612"/><transition target="s14" action="java.util.Map.putAll(java.util.Map)" proba="0.061224489795918366"/><transition target="s1" action="java.util.Map.put(java.lang.Object,java.lang.Object)" proba="0.08163265306122448"/></state><state id="s20"><transition target="s2" action="java.util.Map.get(java.lang.Object)" proba="1.0"/></state><state id="s11"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s22"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s10"><transition target="s22" action="java.util.Map.contains(java.lang.Object)" proba="0.014705882352941176"/><transition target="s6" action="java.util.Map.iterator()" proba="0.5588235294117647"/><transition target="sX" action="epsilon" proba="0.4117647058823529"/><transition target="s12" action="java.util.Map.size()" proba="0.014705882352941176"/></state><state id="s21"><transition target="s3" action="java.util.Map.containsKey(java.lang.Object)" proba="0.25"/><transition target="sX" action="epsilon" proba="0.25"/><transition target="s1" action="java.util.Map.put(java.lang.Object,java.lang.Object)" proba="0.5"/></state><state id="s13"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s12"><transition target="s3" action="java.util.Map.containsKey(java.lang.Object)" proba="0.029411764705882353"/><transition target="s5" action="java.util.Map.entrySet()" proba="0.11764705882352941"/><transition target="s10" action="java.util.Map.values()" proba="0.08823529411764706"/><transition target="s7" action="java.util.Map.isEmpty()" proba="0.014705882352941176"/><transition target="sX" action="epsilon" proba="0.45588235294117646"/><transition target="s8" action="java.util.Map.keySet()" proba="0.10294117647058823"/><transition target="s12" action="java.util.Map.size()" proba="0.07352941176470588"/><transition target="s18" action="java.util.Map.toString()" proba="0.014705882352941176"/><transition target="s1" action="java.util.Map.put(java.lang.Object,java.lang.Object)" proba="0.014705882352941176"/><transition target="s2" action="java.util.Map.get(java.lang.Object)" proba="0.08823529411764706"/></state><state id="s15"><transition target="sX" action="epsilon" proba="0.7142857142857143"/><transition target="s12" action="java.util.Map.size()" proba="0.14285714285714285"/><transition target="s2" action="java.util.Map.get(java.lang.Object)" proba="0.14285714285714285"/></state><state id="s14"><transition target="s5" action="java.util.Map.entrySet()" proba="0.047619047619047616"/><transition target="sX" action="epsilon" proba="0.8095238095238095"/><transition target="s14" action="java.util.Map.putAll(java.util.Map)" proba="0.14285714285714285"/></state><state id="s17"><transition target="s2" action="java.util.Map.get(java.lang.Object)" proba="1.0"/></state><state id="s16"><transition target="s8" action="java.util.Map.keySet()" proba="1.0"/></state><state id="s19"><transition target="s15" action="java.util.Map.next()" proba="1.0"/></state><state id="s18"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s0"><transition target="s3" action="java.util.Map.containsKey(java.lang.Object)" proba="0.05694227769110764"/><transition target="s4" action="java.util.Map.remove(java.lang.Object)" proba="0.0358814352574103"/><transition target="s5" action="java.util.Map.entrySet()" proba="0.07722308892355695"/><transition target="s7" action="java.util.Map.isEmpty()" proba="0.0249609984399376"/><transition target="s8" action="java.util.Map.keySet()" proba="0.060842433697347896"/><transition target="s9" action="java.util.Map.clear()" proba="0.0265210608424337"/><transition target="s11" action="java.util.Map.hashCode()" proba="0.0039001560062402497"/><transition target="s10" action="java.util.Map.values()" proba="0.0421216848673947"/><transition target="s13" action="java.util.Map.equals(java.lang.Object)" proba="0.00546021840873635"/><transition target="s12" action="java.util.Map.size()" proba="0.038221528861154444"/><transition target="s14" action="java.util.Map.putAll(java.util.Map)" proba="0.01170046801872075"/><transition target="s1" action="java.util.Map.put(java.lang.Object,java.lang.Object)" proba="0.18018720748829953"/><transition target="s2" action="java.util.Map.get(java.lang.Object)" proba="0.4360374414976599"/></state><state id="s1"><transition target="s4" action="java.util.Map.remove(java.lang.Object)" proba="0.017513134851138354"/><transition target="s5" action="java.util.Map.entrySet()" proba="0.005253940455341506"/><transition target="s10" action="java.util.Map.values()" proba="0.0035026269702276708"/><transition target="sX" action="epsilon" proba="0.6112084063047285"/><transition target="s12" action="java.util.Map.size()" proba="0.008756567425569177"/><transition target="s8" action="java.util.Map.keySet()" proba="0.0017513134851138354"/><transition target="s9" action="java.util.Map.clear()" proba="0.0035026269702276708"/><transition target="s1" action="java.util.Map.put(java.lang.Object,java.lang.Object)" proba="0.3239929947460595"/><transition target="s2" action="java.util.Map.get(java.lang.Object)" proba="0.024518388791593695"/></state><state id="s2"><transition target="s3" action="java.util.Map.containsKey(java.lang.Object)" proba="0.010113780025284451"/><transition target="s4" action="java.util.Map.remove(java.lang.Object)" proba="0.02402022756005057"/><transition target="s5" action="java.util.Map.entrySet()" proba="0.0025284450063211127"/><transition target="s10" action="java.util.Map.values()" proba="0.0012642225031605564"/><transition target="sX" action="epsilon" proba="0.638432364096081"/><transition target="s8" action="java.util.Map.keySet()" proba="0.0037926675094816687"/><transition target="s12" action="java.util.Map.size()" proba="0.0012642225031605564"/><transition target="s18" action="java.util.Map.toString()" proba="0.0012642225031605564"/><transition target="s1" action="java.util.Map.put(java.lang.Object,java.lang.Object)" proba="0.14412136536030343"/><transition target="s2" action="java.util.Map.get(java.lang.Object)" proba="0.1731984829329962"/></state></states></ts>