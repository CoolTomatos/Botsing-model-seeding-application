<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="java.util.Collections.emptyMap()" proba="0.1751412429378531"/><transition target="s5" action="java.util.Collections.unmodifiableMap(java.util.Map)" proba="0.011299435028248588"/><transition target="s7" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.01694915254237288"/><transition target="sX" action="epsilon" proba="0.7344632768361582"/><transition target="s1" action="java.util.Collections.emptyList()" proba="0.03389830508474576"/><transition target="s2" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.02824858757062147"/></state><state id="s4"><transition target="s4" action="java.util.Collections.singleton(java.lang.Object)" proba="0.2857142857142857"/><transition target="sX" action="epsilon" proba="0.5238095238095238"/><transition target="s1" action="java.util.Collections.emptyList()" proba="0.047619047619047616"/><transition target="s2" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.14285714285714285"/></state><state id="s5"><transition target="s3" action="java.util.Collections.emptyMap()" proba="0.125"/><transition target="sX" action="epsilon" proba="0.875"/></state><state id="s6"><transition target="s4" action="java.util.Collections.singleton(java.lang.Object)" proba="0.037037037037037035"/><transition target="s6" action="java.util.Collections.emptySet()" proba="0.14814814814814814"/><transition target="sX" action="epsilon" proba="0.8148148148148148"/></state><state id="s7"><transition target="s7" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.22935779816513763"/><transition target="sX" action="epsilon" proba="0.7247706422018348"/><transition target="s18" action="java.util.Collections.emptyIterator()" proba="0.009174311926605505"/><transition target="s2" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.03669724770642202"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s8"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s9"><transition target="sX" action="epsilon" proba="0.9090909090909091"/><transition target="s1" action="java.util.Collections.emptyList()" proba="0.09090909090909091"/></state><state id="s20"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s11"><transition target="s10" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="0.05263157894736842"/><transition target="sX" action="epsilon" proba="0.8421052631578947"/><transition target="s17" action="java.util.Collections.unmodifiableList(java.util.List)" proba="0.10526315789473684"/></state><state id="s22"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s10"><transition target="s10" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="0.0967741935483871"/><transition target="sX" action="epsilon" proba="0.9032258064516129"/></state><state id="s21"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s13"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s12"><transition target="sX" action="epsilon" proba="0.7647058823529411"/><transition target="s1" action="java.util.Collections.emptyList()" proba="0.23529411764705882"/></state><state id="s15"><transition target="sX" action="epsilon" proba="0.6"/><transition target="s14" action="java.util.Collections.synchronizedList(java.util.List)" proba="0.2"/><transition target="s1" action="java.util.Collections.emptyList()" proba="0.2"/></state><state id="s14"><transition target="sX" action="epsilon" proba="0.5"/><transition target="s15" action="java.util.Collections.synchronizedMap(java.util.Map)" proba="0.25"/><transition target="s14" action="java.util.Collections.synchronizedList(java.util.List)" proba="0.25"/></state><state id="s17"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s16"><transition target="s6" action="java.util.Collections.emptySet()" proba="0.07692307692307693"/><transition target="sX" action="epsilon" proba="0.9230769230769231"/></state><state id="s19"><transition target="s10" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="1.0"/></state><state id="s18"><transition target="s7" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.25"/><transition target="sX" action="epsilon" proba="0.5"/><transition target="s18" action="java.util.Collections.emptyIterator()" proba="0.25"/></state><state id="s0"><transition target="s3" action="java.util.Collections.emptyMap()" proba="0.19540229885057472"/><transition target="s4" action="java.util.Collections.singleton(java.lang.Object)" proba="0.01867816091954023"/><transition target="s5" action="java.util.Collections.unmodifiableMap(java.util.Map)" proba="0.020114942528735632"/><transition target="s6" action="java.util.Collections.emptySet()" proba="0.027298850574712645"/><transition target="s7" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.10632183908045977"/><transition target="s9" action="java.util.Collections.unmodifiableCollection(java.util.Collection)" proba="0.015804597701149427"/><transition target="s20" action="java.util.Collections.enumeration(java.util.Collection)" proba="0.0028735632183908046"/><transition target="s11" action="java.util.Collections.sort(java.util.List)" proba="0.02442528735632184"/><transition target="s22" action="java.util.Collections.newSetFromMap(java.util.Map)" proba="0.0014367816091954023"/><transition target="s10" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="0.035919540229885055"/><transition target="s21" action="java.util.Collections.min(java.util.Collection)" proba="0.0014367816091954023"/><transition target="s13" action="java.util.Collections.addAll(java.util.Collection,java.lang.Object[])" proba="0.005747126436781609"/><transition target="s12" action="java.util.Collections.reverse(java.util.List)" proba="0.02442528735632184"/><transition target="s15" action="java.util.Collections.synchronizedMap(java.util.Map)" proba="0.005747126436781609"/><transition target="s14" action="java.util.Collections.synchronizedList(java.util.List)" proba="0.0028735632183908046"/><transition target="s17" action="java.util.Collections.unmodifiableList(java.util.List)" proba="0.014367816091954023"/><transition target="s16" action="java.util.Collections.unmodifiableSet(java.util.Set)" proba="0.01867816091954023"/><transition target="s18" action="java.util.Collections.emptyIterator()" proba="0.0028735632183908046"/><transition target="s1" action="java.util.Collections.emptyList()" proba="0.3620689655172414"/><transition target="s2" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.11350574712643678"/></state><state id="s1"><transition target="s3" action="java.util.Collections.emptyMap()" proba="0.019886363636363636"/><transition target="s11" action="java.util.Collections.sort(java.util.List)" proba="0.005681818181818182"/><transition target="s6" action="java.util.Collections.emptySet()" proba="0.008522727272727272"/><transition target="s10" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="0.002840909090909091"/><transition target="sX" action="epsilon" proba="0.7017045454545454"/><transition target="s8" action="java.util.Collections.iterator()" proba="0.005681818181818182"/><transition target="s17" action="java.util.Collections.unmodifiableList(java.util.List)" proba="0.008522727272727272"/><transition target="s19" action="java.util.Collections.reverseOrder()" proba="0.002840909090909091"/><transition target="s1" action="java.util.Collections.emptyList()" proba="0.23011363636363635"/><transition target="s2" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.014204545454545454"/></state><state id="s2"><transition target="s3" action="java.util.Collections.emptyMap()" proba="0.008620689655172414"/><transition target="s4" action="java.util.Collections.singleton(java.lang.Object)" proba="0.008620689655172414"/><transition target="s7" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.05172413793103448"/><transition target="sX" action="epsilon" proba="0.7068965517241379"/><transition target="s1" action="java.util.Collections.emptyList()" proba="0.05172413793103448"/><transition target="s2" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.1724137931034483"/></state></states></ts>