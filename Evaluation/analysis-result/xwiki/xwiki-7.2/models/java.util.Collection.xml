<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="s5" action="java.util.Collection.contains(java.lang.Object)" proba="0.02127659574468085"/><transition target="sX" action="epsilon" proba="0.44680851063829785"/><transition target="s1" action="java.util.Collection.iterator()" proba="0.23404255319148937"/><transition target="s2" action="java.util.Collection.size()" proba="0.2978723404255319"/></state><state id="s4"><transition target="s4" action="java.util.Collection.add(java.lang.Object)" proba="0.11538461538461539"/><transition target="sX" action="epsilon" proba="0.8076923076923077"/><transition target="s9" action="java.util.Collection.addAll(java.util.Collection)" proba="0.038461538461538464"/><transition target="s2" action="java.util.Collection.size()" proba="0.038461538461538464"/></state><state id="s5"><transition target="s4" action="java.util.Collection.add(java.lang.Object)" proba="0.02564102564102564"/><transition target="s5" action="java.util.Collection.contains(java.lang.Object)" proba="0.3333333333333333"/><transition target="s6" action="java.util.Collection.remove(java.lang.Object)" proba="0.02564102564102564"/><transition target="sX" action="epsilon" proba="0.5128205128205128"/><transition target="s16" action="java.util.Collection.toLowerCase()" proba="0.02564102564102564"/><transition target="s1" action="java.util.Collection.iterator()" proba="0.02564102564102564"/><transition target="s2" action="java.util.Collection.size()" proba="0.05128205128205128"/></state><state id="s6"><transition target="s3" action="java.util.Collection.isEmpty()" proba="0.25"/><transition target="sX" action="epsilon" proba="0.75"/></state><state id="s7"><transition target="s8" action="java.util.Collection.next()" proba="1.0"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s8"><transition target="s4" action="java.util.Collection.add(java.lang.Object)" proba="0.18181818181818182"/><transition target="sX" action="epsilon" proba="0.8181818181818182"/></state><state id="s9"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s11"><transition target="sX" action="epsilon" proba="0.6666666666666666"/><transition target="s2" action="java.util.Collection.size()" proba="0.3333333333333333"/></state><state id="s10"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s13"><transition target="s13" action="java.util.Collection.containsAll(java.util.Collection)" proba="0.5"/><transition target="sX" action="epsilon" proba="0.5"/></state><state id="s12"><transition target="s9" action="java.util.Collection.addAll(java.util.Collection)" proba="1.0"/></state><state id="s15"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s14"><transition target="s15" action="java.util.Collection.getId()" proba="1.0"/></state><state id="s17"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s16"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s0"><transition target="s3" action="java.util.Collection.isEmpty()" proba="0.16666666666666666"/><transition target="s4" action="java.util.Collection.add(java.lang.Object)" proba="0.07246376811594203"/><transition target="s5" action="java.util.Collection.contains(java.lang.Object)" proba="0.06521739130434782"/><transition target="s11" action="java.util.Collection.toArray()" proba="0.007246376811594203"/><transition target="s6" action="java.util.Collection.remove(java.lang.Object)" proba="0.010869565217391304"/><transition target="s12" action="java.util.Collection.clear()" proba="0.0036231884057971015"/><transition target="s9" action="java.util.Collection.addAll(java.util.Collection)" proba="0.021739130434782608"/><transition target="s1" action="java.util.Collection.iterator()" proba="0.4057971014492754"/><transition target="s2" action="java.util.Collection.size()" proba="0.2463768115942029"/></state><state id="s1"><transition target="s5" action="java.util.Collection.contains(java.lang.Object)" proba="0.0111731843575419"/><transition target="s10" action="java.util.Collection.createInputFilterStream(java.util.Map)" proba="0.00558659217877095"/><transition target="sX" action="epsilon" proba="0.9162011173184358"/><transition target="s8" action="java.util.Collection.next()" proba="0.055865921787709494"/><transition target="s14" action="java.util.Collection.isValid(java.lang.String)" proba="0.00558659217877095"/><transition target="s2" action="java.util.Collection.size()" proba="0.00558659217877095"/></state><state id="s2"><transition target="s5" action="java.util.Collection.contains(java.lang.Object)" proba="0.05434782608695652"/><transition target="s11" action="java.util.Collection.toArray()" proba="0.010869565217391304"/><transition target="s7" action="java.util.Collection.hasNext()" proba="0.010869565217391304"/><transition target="s13" action="java.util.Collection.containsAll(java.util.Collection)" proba="0.021739130434782608"/><transition target="sX" action="epsilon" proba="0.2391304347826087"/><transition target="s17" action="java.util.Collection.toArray(java.lang.Object[])" proba="0.010869565217391304"/><transition target="s1" action="java.util.Collection.iterator()" proba="0.5978260869565217"/><transition target="s2" action="java.util.Collection.size()" proba="0.05434782608695652"/></state></states></ts>