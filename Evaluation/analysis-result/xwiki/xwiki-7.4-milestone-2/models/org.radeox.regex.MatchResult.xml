<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="s4" action="org.radeox.regex.MatchResult.endOffset(int)" proba="1.0"/></state><state id="s4"><transition target="s1" action="org.radeox.regex.MatchResult.group(int)" proba="1.0"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s0"><transition target="s1" action="org.radeox.regex.MatchResult.group(int)" proba="1.0"/></state><state id="s1"><transition target="s3" action="org.radeox.regex.MatchResult.beginOffset(int)" proba="0.13793103448275862"/><transition target="sX" action="epsilon" proba="0.3448275862068966"/><transition target="s1" action="org.radeox.regex.MatchResult.group(int)" proba="0.4482758620689655"/><transition target="s2" action="org.radeox.regex.MatchResult.groups()" proba="0.06896551724137931"/></state><state id="s2"><transition target="s1" action="org.radeox.regex.MatchResult.group(int)" proba="1.0"/></state></states></ts>