<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="java.util.regex.Matcher.group(int)" proba="0.40186915887850466"/><transition target="s4" action="java.util.regex.Matcher.matches()" proba="0.009345794392523364"/><transition target="s5" action="java.util.regex.Matcher.end()" proba="0.1588785046728972"/><transition target="s7" action="java.util.regex.Matcher.groupCount()" proba="0.009345794392523364"/><transition target="sX" action="epsilon" proba="0.2897196261682243"/><transition target="s20" action="java.util.regex.Matcher.reset(java.lang.CharSequence)" proba="0.009345794392523364"/><transition target="s11" action="java.util.regex.Matcher.group()" proba="0.009345794392523364"/><transition target="s10" action="java.util.regex.Matcher.start()" proba="0.009345794392523364"/><transition target="s12" action="java.util.regex.Matcher.appendReplacement(java.lang.StringBuffer,java.lang.String)" proba="0.018691588785046728"/><transition target="s15" action="java.util.regex.Matcher.split(java.lang.String)" proba="0.009345794392523364"/><transition target="s17" action="java.util.regex.Matcher.charAt(int)" proba="0.009345794392523364"/><transition target="s16" action="java.util.regex.Matcher.length()" proba="0.037383177570093455"/><transition target="s19" action="java.util.regex.Matcher.lastIndexOf(java.lang.String)" proba="0.009345794392523364"/><transition target="s18" action="java.util.regex.Matcher.trim()" proba="0.018691588785046728"/></state><state id="s4"><transition target="s3" action="java.util.regex.Matcher.group(int)" proba="0.8"/><transition target="sX" action="epsilon" proba="0.2"/></state><state id="s5"><transition target="s3" action="java.util.regex.Matcher.group(int)" proba="0.17857142857142858"/><transition target="s11" action="java.util.regex.Matcher.group()" proba="0.03571428571428571"/><transition target="s10" action="java.util.regex.Matcher.start()" proba="0.14285714285714285"/><transition target="sX" action="epsilon" proba="0.6428571428571429"/></state><state id="s6"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s7"><transition target="s3" action="java.util.regex.Matcher.group(int)" proba="0.3333333333333333"/><transition target="s8" action="java.util.regex.Matcher.start(int)" proba="0.6666666666666666"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s8"><transition target="s3" action="java.util.regex.Matcher.group(int)" proba="0.25"/><transition target="s8" action="java.util.regex.Matcher.start(int)" proba="0.25"/><transition target="s9" action="java.util.regex.Matcher.end(int)" proba="0.5"/></state><state id="s9"><transition target="s3" action="java.util.regex.Matcher.group(int)" proba="1.0"/></state><state id="s20"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s11"><transition target="s5" action="java.util.regex.Matcher.end()" proba="0.25"/><transition target="s10" action="java.util.regex.Matcher.start()" proba="0.25"/><transition target="s17" action="java.util.regex.Matcher.charAt(int)" proba="0.5"/></state><state id="s10"><transition target="s3" action="java.util.regex.Matcher.group(int)" proba="0.4827586206896552"/><transition target="s5" action="java.util.regex.Matcher.end()" proba="0.20689655172413793"/><transition target="s10" action="java.util.regex.Matcher.start()" proba="0.06896551724137931"/><transition target="sX" action="epsilon" proba="0.20689655172413793"/><transition target="s2" action="java.util.regex.Matcher.find()" proba="0.034482758620689655"/></state><state id="s13"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s12"><transition target="s13" action="java.util.regex.Matcher.appendTail(java.lang.StringBuffer)" proba="0.6666666666666666"/><transition target="s12" action="java.util.regex.Matcher.appendReplacement(java.lang.StringBuffer,java.lang.String)" proba="0.3333333333333333"/></state><state id="s15"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s14"><transition target="s5" action="java.util.regex.Matcher.end()" proba="0.25"/><transition target="sX" action="epsilon" proba="0.5"/><transition target="s8" action="java.util.regex.Matcher.start(int)" proba="0.25"/></state><state id="s17"><transition target="s11" action="java.util.regex.Matcher.group()" proba="0.3333333333333333"/><transition target="sX" action="epsilon" proba="0.6666666666666666"/></state><state id="s16"><transition target="s3" action="java.util.regex.Matcher.group(int)" proba="0.25"/><transition target="s5" action="java.util.regex.Matcher.end()" proba="0.25"/><transition target="sX" action="epsilon" proba="0.25"/><transition target="s9" action="java.util.regex.Matcher.end(int)" proba="0.25"/></state><state id="s19"><transition target="s3" action="java.util.regex.Matcher.group(int)" proba="1.0"/></state><state id="s18"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s0"><transition target="s4" action="java.util.regex.Matcher.matches()" proba="0.175"/><transition target="s14" action="java.util.regex.Matcher.lookingAt()" proba="0.05"/><transition target="s1" action="java.util.regex.Matcher.replaceAll(java.lang.String)" proba="0.05"/><transition target="s2" action="java.util.regex.Matcher.find()" proba="0.725"/></state><state id="s1"><transition target="sX" action="epsilon" proba="0.75"/><transition target="s2" action="java.util.regex.Matcher.find()" proba="0.25"/></state><state id="s2"><transition target="s3" action="java.util.regex.Matcher.group(int)" proba="0.4262295081967213"/><transition target="s5" action="java.util.regex.Matcher.end()" proba="0.03278688524590164"/><transition target="s11" action="java.util.regex.Matcher.group()" proba="0.01639344262295082"/><transition target="s6" action="java.util.regex.Matcher.replaceFirst(java.lang.String)" proba="0.08196721311475409"/><transition target="s10" action="java.util.regex.Matcher.start()" proba="0.3442622950819672"/><transition target="s7" action="java.util.regex.Matcher.groupCount()" proba="0.03278688524590164"/><transition target="s1" action="java.util.regex.Matcher.replaceAll(java.lang.String)" proba="0.06557377049180328"/></state></states></ts>