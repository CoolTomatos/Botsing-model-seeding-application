<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="s4" action="java.lang.reflect.Method.newSAXParser()" proba="0.07142857142857142"/><transition target="s5" action="java.lang.reflect.Method.getDeclaringClass()" proba="0.07142857142857142"/><transition target="s7" action="java.lang.reflect.Method.set(java.lang.Object,java.lang.Object)" proba="0.07142857142857142"/><transition target="sX" action="epsilon" proba="0.7142857142857143"/><transition target="s1" action="java.lang.reflect.Method.getName()" proba="0.07142857142857142"/></state><state id="s4"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s5"><transition target="s3" action="java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object[])" proba="0.09090909090909091"/><transition target="s5" action="java.lang.reflect.Method.getDeclaringClass()" proba="0.09090909090909091"/><transition target="s13" action="java.lang.reflect.Method.getInterfaces()" proba="0.09090909090909091"/><transition target="s14" action="java.lang.reflect.Method.getSuperclass()" proba="0.09090909090909091"/><transition target="s16" action="java.lang.reflect.Method.isAnnotationPresent(java.lang.Class)" proba="0.2727272727272727"/><transition target="s19" action="java.lang.reflect.Method.isInstance(java.lang.Object)" proba="0.09090909090909091"/><transition target="s1" action="java.lang.reflect.Method.getName()" proba="0.2727272727272727"/></state><state id="s6"><transition target="s3" action="java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object[])" proba="1.0"/></state><state id="s7"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s8"><transition target="s3" action="java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object[])" proba="0.3333333333333333"/><transition target="s5" action="java.lang.reflect.Method.getDeclaringClass()" proba="0.3333333333333333"/><transition target="s8" action="java.lang.reflect.Method.getGenericReturnType()" proba="0.3333333333333333"/></state><state id="s9"><transition target="s11" action="java.lang.reflect.Method.getParameterTypes()" proba="0.25"/><transition target="sX" action="epsilon" proba="0.25"/><transition target="s9" action="java.lang.reflect.Method.equals(java.lang.Object)" proba="0.5"/></state><state id="s11"><transition target="s3" action="java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object[])" proba="0.14285714285714285"/><transition target="s11" action="java.lang.reflect.Method.getParameterTypes()" proba="0.14285714285714285"/><transition target="s5" action="java.lang.reflect.Method.getDeclaringClass()" proba="0.14285714285714285"/><transition target="sX" action="epsilon" proba="0.5714285714285714"/></state><state id="s10"><transition target="s11" action="java.lang.reflect.Method.getParameterTypes()" proba="1.0"/></state><state id="s13"><transition target="s1" action="java.lang.reflect.Method.getName()" proba="1.0"/></state><state id="s12"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s15"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s14"><transition target="s1" action="java.lang.reflect.Method.getName()" proba="1.0"/></state><state id="s17"><transition target="s1" action="java.lang.reflect.Method.getName()" proba="1.0"/></state><state id="s16"><transition target="s5" action="java.lang.reflect.Method.getDeclaringClass()" proba="0.5"/><transition target="sX" action="epsilon" proba="0.5"/></state><state id="s19"><transition target="s3" action="java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object[])" proba="1.0"/></state><state id="s18"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s0"><transition target="s3" action="java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object[])" proba="0.2222222222222222"/><transition target="s11" action="java.lang.reflect.Method.getParameterTypes()" proba="0.05555555555555555"/><transition target="s5" action="java.lang.reflect.Method.getDeclaringClass()" proba="0.08333333333333333"/><transition target="s6" action="java.lang.reflect.Method.setAccessible(boolean)" proba="0.05555555555555555"/><transition target="s8" action="java.lang.reflect.Method.getGenericReturnType()" proba="0.05555555555555555"/><transition target="s12" action="java.lang.reflect.Method.getParameterAnnotations()" proba="0.027777777777777776"/><transition target="s9" action="java.lang.reflect.Method.equals(java.lang.Object)" proba="0.027777777777777776"/><transition target="s15" action="java.lang.reflect.Method.getAnnotation(java.lang.Class)" proba="0.05555555555555555"/><transition target="s16" action="java.lang.reflect.Method.isAnnotationPresent(java.lang.Class)" proba="0.08333333333333333"/><transition target="s1" action="java.lang.reflect.Method.getName()" proba="0.2777777777777778"/><transition target="s2" action="java.lang.reflect.Method.getGenericParameterTypes()" proba="0.05555555555555555"/></state><state id="s1"><transition target="s5" action="java.lang.reflect.Method.getDeclaringClass()" proba="0.043478260869565216"/><transition target="s11" action="java.lang.reflect.Method.getParameterTypes()" proba="0.08695652173913043"/><transition target="s10" action="java.lang.reflect.Method.equalsIgnoreCase(java.lang.String)" proba="0.043478260869565216"/><transition target="sX" action="epsilon" proba="0.34782608695652173"/><transition target="s9" action="java.lang.reflect.Method.equals(java.lang.Object)" proba="0.043478260869565216"/><transition target="s17" action="java.lang.reflect.Method.startsWith(java.lang.String)" proba="0.13043478260869565"/><transition target="s18" action="java.lang.reflect.Method.toGenericString()" proba="0.043478260869565216"/><transition target="s1" action="java.lang.reflect.Method.getName()" proba="0.17391304347826086"/><transition target="s2" action="java.lang.reflect.Method.getGenericParameterTypes()" proba="0.08695652173913043"/></state><state id="s2"><transition target="sX" action="epsilon" proba="0.8"/><transition target="s2" action="java.lang.reflect.Method.getGenericParameterTypes()" proba="0.2"/></state></states></ts>