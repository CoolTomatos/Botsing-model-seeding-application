<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="sX" action="epsilon" proba="0.9411764705882353"/><transition target="s2" action="java.util.regex.Pattern.matcher(java.lang.CharSequence)" proba="0.058823529411764705"/></state><state id="s4"><transition target="sX" action="epsilon" proba="0.9375"/><transition target="s9" action="java.util.regex.Pattern.toCharArray()" proba="0.0625"/></state><state id="s5"><transition target="s5" action="java.util.regex.Pattern.quote(java.lang.String)" proba="0.125"/><transition target="sX" action="epsilon" proba="0.5"/><transition target="s1" action="java.util.regex.Pattern.compile(java.lang.String)" proba="0.375"/></state><state id="s6"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s7"><transition target="sX" action="epsilon" proba="0.6"/><transition target="s2" action="java.util.regex.Pattern.matcher(java.lang.CharSequence)" proba="0.4"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s8"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s9"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s11"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s10"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s0"><transition target="s5" action="java.util.regex.Pattern.quote(java.lang.String)" proba="0.07"/><transition target="s10" action="java.util.regex.Pattern.pattern()" proba="0.02"/><transition target="s7" action="java.util.regex.Pattern.compile(java.lang.String,int)" proba="0.05"/><transition target="s1" action="java.util.regex.Pattern.compile(java.lang.String)" proba="0.09"/><transition target="s2" action="java.util.regex.Pattern.matcher(java.lang.CharSequence)" proba="0.77"/></state><state id="s1"><transition target="sX" action="epsilon" proba="0.9230769230769231"/><transition target="s1" action="java.util.regex.Pattern.compile(java.lang.String)" proba="0.07692307692307693"/></state><state id="s2"><transition target="s3" action="java.util.regex.Pattern.matches()" proba="0.2"/><transition target="s4" action="java.util.regex.Pattern.replaceAll(java.lang.String)" proba="0.18823529411764706"/><transition target="s11" action="java.util.regex.Pattern.toString()" proba="0.011764705882352941"/><transition target="s6" action="java.util.regex.Pattern.find()" proba="0.011764705882352941"/><transition target="sX" action="epsilon" proba="0.5176470588235295"/><transition target="s8" action="java.util.regex.Pattern.replaceFirst(java.lang.String)" proba="0.011764705882352941"/><transition target="s2" action="java.util.regex.Pattern.matcher(java.lang.CharSequence)" proba="0.058823529411764705"/></state></states></ts>