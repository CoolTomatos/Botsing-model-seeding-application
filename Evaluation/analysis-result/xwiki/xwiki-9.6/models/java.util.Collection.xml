<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="java.util.Collection.size()" proba="0.0641025641025641"/><transition target="s4" action="java.util.Collection.contains(java.lang.Object)" proba="0.02564102564102564"/><transition target="s11" action="java.util.Collection.containsAll(java.util.Collection)" proba="0.02564102564102564"/><transition target="sX" action="epsilon" proba="0.15384615384615385"/><transition target="s1" action="java.util.Collection.iterator()" proba="0.7307692307692307"/></state><state id="s4"><transition target="s4" action="java.util.Collection.contains(java.lang.Object)" proba="0.35714285714285715"/><transition target="sX" action="epsilon" proba="0.6071428571428571"/><transition target="s1" action="java.util.Collection.iterator()" proba="0.03571428571428571"/></state><state id="s5"><transition target="s5" action="java.util.Collection.addAll(java.util.Collection)" proba="0.09090909090909091"/><transition target="sX" action="epsilon" proba="0.9090909090909091"/></state><state id="s6"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s7"><transition target="s3" action="java.util.Collection.size()" proba="0.045454545454545456"/><transition target="s7" action="java.util.Collection.add(java.lang.Object)" proba="0.045454545454545456"/><transition target="sX" action="epsilon" proba="0.8636363636363636"/><transition target="s2" action="java.util.Collection.isEmpty()" proba="0.045454545454545456"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s8"><transition target="s8" action="java.util.Collection.toString()" proba="0.5"/><transition target="sX" action="epsilon" proba="0.5"/></state><state id="s9"><transition target="s7" action="java.util.Collection.add(java.lang.Object)" proba="0.16666666666666666"/><transition target="sX" action="epsilon" proba="0.8333333333333334"/></state><state id="s11"><transition target="s11" action="java.util.Collection.containsAll(java.util.Collection)" proba="0.5"/><transition target="sX" action="epsilon" proba="0.5"/></state><state id="s10"><transition target="s5" action="java.util.Collection.addAll(java.util.Collection)" proba="1.0"/></state><state id="s13"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s12"><transition target="s13" action="java.util.Collection.getId()" proba="1.0"/></state><state id="s15"><transition target="s3" action="java.util.Collection.size()" proba="0.5"/><transition target="sX" action="epsilon" proba="0.5"/></state><state id="s14"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s0"><transition target="s3" action="java.util.Collection.size()" proba="0.22134387351778656"/><transition target="s4" action="java.util.Collection.contains(java.lang.Object)" proba="0.05928853754940711"/><transition target="s5" action="java.util.Collection.addAll(java.util.Collection)" proba="0.03557312252964427"/><transition target="s10" action="java.util.Collection.clear()" proba="0.003952569169960474"/><transition target="s7" action="java.util.Collection.add(java.lang.Object)" proba="0.07509881422924901"/><transition target="s15" action="java.util.Collection.toArray()" proba="0.007905138339920948"/><transition target="s14" action="java.util.Collection.remove(java.lang.Object)" proba="0.011857707509881422"/><transition target="s1" action="java.util.Collection.iterator()" proba="0.38735177865612647"/><transition target="s2" action="java.util.Collection.isEmpty()" proba="0.1976284584980237"/></state><state id="s1"><transition target="s3" action="java.util.Collection.size()" proba="0.005681818181818182"/><transition target="s4" action="java.util.Collection.contains(java.lang.Object)" proba="0.005681818181818182"/><transition target="s6" action="java.util.Collection.createInputFilterStream(java.util.Map)" proba="0.005681818181818182"/><transition target="sX" action="epsilon" proba="0.8977272727272727"/><transition target="s8" action="java.util.Collection.toString()" proba="0.005681818181818182"/><transition target="s12" action="java.util.Collection.isValid(java.lang.String)" proba="0.011363636363636364"/><transition target="s9" action="java.util.Collection.next()" proba="0.06818181818181818"/></state><state id="s2"><transition target="s3" action="java.util.Collection.size()" proba="0.27450980392156865"/><transition target="sX" action="epsilon" proba="0.3333333333333333"/><transition target="s1" action="java.util.Collection.iterator()" proba="0.39215686274509803"/></state></states></ts>