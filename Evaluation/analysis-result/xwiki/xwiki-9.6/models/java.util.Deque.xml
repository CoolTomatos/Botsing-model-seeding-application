<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="java.util.Deque.push(java.lang.Object)" proba="0.09302325581395349"/><transition target="s4" action="java.util.Deque.pop()" proba="0.023255813953488372"/><transition target="sX" action="epsilon" proba="0.8837209302325582"/></state><state id="s4"><transition target="s3" action="java.util.Deque.push(java.lang.Object)" proba="0.06060606060606061"/><transition target="s5" action="java.util.Deque.peek()" proba="0.030303030303030304"/><transition target="s11" action="java.util.Deque.contains(java.lang.Object)" proba="0.030303030303030304"/><transition target="sX" action="epsilon" proba="0.8484848484848485"/><transition target="s9" action="java.util.Deque.iterator()" proba="0.030303030303030304"/></state><state id="s5"><transition target="s3" action="java.util.Deque.push(java.lang.Object)" proba="0.08823529411764706"/><transition target="s4" action="java.util.Deque.pop()" proba="0.17647058823529413"/><transition target="s5" action="java.util.Deque.peek()" proba="0.08823529411764706"/><transition target="sX" action="epsilon" proba="0.6470588235294118"/></state><state id="s6"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s7"><transition target="s4" action="java.util.Deque.pop()" proba="0.1111111111111111"/><transition target="s5" action="java.util.Deque.peek()" proba="0.7222222222222222"/><transition target="s6" action="java.util.Deque.descendingIterator()" proba="0.05555555555555555"/><transition target="s9" action="java.util.Deque.iterator()" proba="0.05555555555555555"/><transition target="s1" action="java.util.Deque.size()" proba="0.05555555555555555"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s8"><transition target="s9" action="java.util.Deque.iterator()" proba="1.0"/></state><state id="s9"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s11"><transition target="s3" action="java.util.Deque.push(java.lang.Object)" proba="0.6666666666666666"/><transition target="sX" action="epsilon" proba="0.3333333333333333"/></state><state id="s10"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s13"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s12"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s15"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s14"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s16"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s0"><transition target="s3" action="java.util.Deque.push(java.lang.Object)" proba="0.2909090909090909"/><transition target="s4" action="java.util.Deque.pop()" proba="0.21818181818181817"/><transition target="s5" action="java.util.Deque.peek()" proba="0.15454545454545454"/><transition target="s6" action="java.util.Deque.descendingIterator()" proba="0.00909090909090909"/><transition target="s7" action="java.util.Deque.isEmpty()" proba="0.16363636363636364"/><transition target="s8" action="java.util.Deque.removeLast()" proba="0.00909090909090909"/><transition target="s9" action="java.util.Deque.iterator()" proba="0.01818181818181818"/><transition target="s11" action="java.util.Deque.contains(java.lang.Object)" proba="0.01818181818181818"/><transition target="s10" action="java.util.Deque.add(java.lang.Object)" proba="0.00909090909090909"/><transition target="s12" action="java.util.Deque.getFirst()" proba="0.00909090909090909"/><transition target="s15" action="java.util.Deque.getLast()" proba="0.00909090909090909"/><transition target="s14" action="java.util.Deque.addAll(java.util.Collection)" proba="0.00909090909090909"/><transition target="s16" action="java.util.Deque.offerFirst(java.lang.Object)" proba="0.00909090909090909"/><transition target="s1" action="java.util.Deque.size()" proba="0.07272727272727272"/></state><state id="s1"><transition target="s13" action="java.util.Deque.toArray(java.lang.Object[])" proba="0.1"/><transition target="sX" action="epsilon" proba="0.8"/><transition target="s2" action="java.util.Deque.toArray()" proba="0.1"/></state><state id="s2"><transition target="s1" action="java.util.Deque.size()" proba="1.0"/></state></states></ts>