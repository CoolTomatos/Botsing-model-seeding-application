<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="s6" action="java.util.Collections.emptyMap()" proba="0.1111111111111111"/><transition target="sX" action="epsilon" proba="0.8333333333333334"/><transition target="s15" action="java.util.Collections.unmodifiableSet(java.util.Set)" proba="0.05555555555555555"/></state><state id="s4"><transition target="sX" action="epsilon" proba="0.75"/><transition target="s1" action="java.util.Collections.emptyList()" proba="0.25"/></state><state id="s5"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s6"><transition target="s3" action="java.util.Collections.unmodifiableMap(java.util.Map)" proba="0.02"/><transition target="s6" action="java.util.Collections.emptyMap()" proba="0.16"/><transition target="s10" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.01"/><transition target="sX" action="epsilon" proba="0.78"/><transition target="s8" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.01"/><transition target="s1" action="java.util.Collections.emptyList()" proba="0.02"/></state><state id="s7"><transition target="s2" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="1.0"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s8"><transition target="s10" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.023809523809523808"/><transition target="sX" action="epsilon" proba="0.6428571428571429"/><transition target="s8" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.30952380952380953"/><transition target="s18" action="java.util.Collections.emptyIterator()" proba="0.023809523809523808"/></state><state id="s9"><transition target="s10" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.2727272727272727"/><transition target="sX" action="epsilon" proba="0.5454545454545454"/><transition target="s9" action="java.util.Collections.singleton(java.lang.Object)" proba="0.18181818181818182"/></state><state id="s20"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s11"><transition target="s5" action="java.util.Collections.unmodifiableList(java.util.List)" proba="0.1111111111111111"/><transition target="sX" action="epsilon" proba="0.7777777777777778"/><transition target="s1" action="java.util.Collections.emptyList()" proba="0.05555555555555555"/><transition target="s2" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="0.05555555555555555"/></state><state id="s22"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s10"><transition target="s10" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.1016949152542373"/><transition target="sX" action="epsilon" proba="0.711864406779661"/><transition target="s8" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.01694915254237288"/><transition target="s9" action="java.util.Collections.singleton(java.lang.Object)" proba="0.01694915254237288"/><transition target="s1" action="java.util.Collections.emptyList()" proba="0.15254237288135594"/></state><state id="s21"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s13"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s12"><transition target="sX" action="epsilon" proba="0.8181818181818182"/><transition target="s1" action="java.util.Collections.emptyList()" proba="0.18181818181818182"/></state><state id="s15"><transition target="sX" action="epsilon" proba="0.8461538461538461"/><transition target="s14" action="java.util.Collections.emptySet()" proba="0.15384615384615385"/></state><state id="s14"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s17"><transition target="sX" action="epsilon" proba="0.5"/><transition target="s16" action="java.util.Collections.synchronizedList(java.util.List)" proba="0.25"/><transition target="s1" action="java.util.Collections.emptyList()" proba="0.25"/></state><state id="s16"><transition target="sX" action="epsilon" proba="0.5"/><transition target="s17" action="java.util.Collections.synchronizedMap(java.util.Map)" proba="0.5"/></state><state id="s19"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s18"><transition target="s8" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.25"/><transition target="sX" action="epsilon" proba="0.5"/><transition target="s18" action="java.util.Collections.emptyIterator()" proba="0.25"/></state><state id="s0"><transition target="s3" action="java.util.Collections.unmodifiableMap(java.util.Map)" proba="0.030418250950570342"/><transition target="s4" action="java.util.Collections.reverse(java.util.List)" proba="0.030418250950570342"/><transition target="s5" action="java.util.Collections.unmodifiableList(java.util.List)" proba="0.03612167300380228"/><transition target="s6" action="java.util.Collections.emptyMap()" proba="0.15019011406844107"/><transition target="s7" action="java.util.Collections.reverseOrder()" proba="0.0019011406844106464"/><transition target="s8" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.049429657794676805"/><transition target="s9" action="java.util.Collections.singleton(java.lang.Object)" proba="0.015209125475285171"/><transition target="s20" action="java.util.Collections.addAll(java.util.Collection,java.lang.Object[])" proba="0.0076045627376425855"/><transition target="s11" action="java.util.Collections.sort(java.util.List)" proba="0.030418250950570342"/><transition target="s22" action="java.util.Collections.newSetFromMap(java.util.Map)" proba="0.0019011406844106464"/><transition target="s10" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.08365019011406843"/><transition target="s21" action="java.util.Collections.min(java.util.Collection)" proba="0.0019011406844106464"/><transition target="s12" action="java.util.Collections.unmodifiableCollection(java.util.Collection)" proba="0.02091254752851711"/><transition target="s15" action="java.util.Collections.unmodifiableSet(java.util.Set)" proba="0.022813688212927757"/><transition target="s14" action="java.util.Collections.emptySet()" proba="0.024714828897338403"/><transition target="s17" action="java.util.Collections.synchronizedMap(java.util.Map)" proba="0.005703422053231939"/><transition target="s16" action="java.util.Collections.synchronizedList(java.util.List)" proba="0.0019011406844106464"/><transition target="s19" action="java.util.Collections.enumeration(java.util.Collection)" proba="0.0076045627376425855"/><transition target="s18" action="java.util.Collections.emptyIterator()" proba="0.0038022813688212928"/><transition target="s1" action="java.util.Collections.emptyList()" proba="0.42775665399239543"/><transition target="s2" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="0.045627376425855515"/></state><state id="s1"><transition target="s5" action="java.util.Collections.unmodifiableList(java.util.List)" proba="0.011320754716981131"/><transition target="s11" action="java.util.Collections.sort(java.util.List)" proba="0.007547169811320755"/><transition target="s10" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.01509433962264151"/><transition target="s6" action="java.util.Collections.emptyMap()" proba="0.011320754716981131"/><transition target="s13" action="java.util.Collections.iterator()" proba="0.011320754716981131"/><transition target="s7" action="java.util.Collections.reverseOrder()" proba="0.0037735849056603774"/><transition target="sX" action="epsilon" proba="0.8490566037735849"/><transition target="s14" action="java.util.Collections.emptySet()" proba="0.007547169811320755"/><transition target="s1" action="java.util.Collections.emptyList()" proba="0.07924528301886792"/><transition target="s2" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="0.0037735849056603774"/></state><state id="s2"><transition target="sX" action="epsilon" proba="0.875"/><transition target="s2" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="0.125"/></state></states></ts>