<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="org.junit.Assert.assertEquals(java.lang.Object,java.lang.Object)" proba="0.43582089552238806"/><transition target="s4" action="org.junit.Assert.assertTrue(boolean)" proba="0.03880597014925373"/><transition target="s5" action="org.junit.Assert.assertNotNull(java.lang.Object)" proba="0.005970149253731343"/><transition target="s6" action="org.junit.Assert.assertNull(java.lang.Object)" proba="0.04477611940298507"/><transition target="sX" action="epsilon" proba="0.3611940298507463"/><transition target="s8" action="org.junit.Assert.assertFalse(boolean)" proba="0.04776119402985075"/><transition target="s15" action="org.junit.Assert.assertNull(java.lang.String,java.lang.Object)" proba="0.0029850746268656717"/><transition target="s14" action="org.junit.Assert.assertSame(java.lang.Object,java.lang.Object)" proba="0.011940298507462687"/><transition target="s16" action="org.junit.Assert.assertNotSame(java.lang.Object,java.lang.Object)" proba="0.005970149253731343"/><transition target="s1" action="org.junit.Assert.assertEquals(long,long)" proba="0.041791044776119404"/><transition target="s2" action="org.junit.Assert.assertEquals(double,double,double)" proba="0.0029850746268656717"/></state><state id="s4"><transition target="s3" action="org.junit.Assert.assertEquals(java.lang.Object,java.lang.Object)" proba="0.17647058823529413"/><transition target="s4" action="org.junit.Assert.assertTrue(boolean)" proba="0.4117647058823529"/><transition target="sX" action="epsilon" proba="0.22058823529411764"/><transition target="s8" action="org.junit.Assert.assertFalse(boolean)" proba="0.14705882352941177"/><transition target="s1" action="org.junit.Assert.assertEquals(long,long)" proba="0.04411764705882353"/></state><state id="s5"><transition target="s3" action="org.junit.Assert.assertEquals(java.lang.Object,java.lang.Object)" proba="0.35135135135135137"/><transition target="s4" action="org.junit.Assert.assertTrue(boolean)" proba="0.013513513513513514"/><transition target="s5" action="org.junit.Assert.assertNotNull(java.lang.Object)" proba="0.1891891891891892"/><transition target="s6" action="org.junit.Assert.assertNull(java.lang.Object)" proba="0.22972972972972974"/><transition target="s7" action="org.junit.Assert.fail(java.lang.String)" proba="0.013513513513513514"/><transition target="sX" action="epsilon" proba="0.05405405405405406"/><transition target="s8" action="org.junit.Assert.assertFalse(boolean)" proba="0.04054054054054054"/><transition target="s14" action="org.junit.Assert.assertSame(java.lang.Object,java.lang.Object)" proba="0.05405405405405406"/><transition target="s16" action="org.junit.Assert.assertNotSame(java.lang.Object,java.lang.Object)" proba="0.013513513513513514"/><transition target="s1" action="org.junit.Assert.assertEquals(long,long)" proba="0.02702702702702703"/><transition target="s2" action="org.junit.Assert.assertEquals(double,double,double)" proba="0.013513513513513514"/></state><state id="s6"><transition target="s3" action="org.junit.Assert.assertEquals(java.lang.Object,java.lang.Object)" proba="0.10975609756097561"/><transition target="s5" action="org.junit.Assert.assertNotNull(java.lang.Object)" proba="0.036585365853658534"/><transition target="s6" action="org.junit.Assert.assertNull(java.lang.Object)" proba="0.1951219512195122"/><transition target="s7" action="org.junit.Assert.fail(java.lang.String)" proba="0.012195121951219513"/><transition target="s13" action="org.junit.Assert.assertTrue(java.lang.String,boolean)" proba="0.012195121951219513"/><transition target="sX" action="epsilon" proba="0.5365853658536586"/><transition target="s14" action="org.junit.Assert.assertSame(java.lang.Object,java.lang.Object)" proba="0.036585365853658534"/><transition target="s1" action="org.junit.Assert.assertEquals(long,long)" proba="0.06097560975609756"/></state><state id="s7"><transition target="s3" action="org.junit.Assert.assertEquals(java.lang.Object,java.lang.Object)" proba="0.5"/><transition target="s7" action="org.junit.Assert.fail(java.lang.String)" proba="0.14285714285714285"/><transition target="sX" action="epsilon" proba="0.35714285714285715"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s8"><transition target="s3" action="org.junit.Assert.assertEquals(java.lang.Object,java.lang.Object)" proba="0.3333333333333333"/><transition target="s4" action="org.junit.Assert.assertTrue(boolean)" proba="0.16666666666666666"/><transition target="s5" action="org.junit.Assert.assertNotNull(java.lang.Object)" proba="0.023809523809523808"/><transition target="s6" action="org.junit.Assert.assertNull(java.lang.Object)" proba="0.023809523809523808"/><transition target="s7" action="org.junit.Assert.fail(java.lang.String)" proba="0.023809523809523808"/><transition target="sX" action="epsilon" proba="0.23809523809523808"/><transition target="s8" action="org.junit.Assert.assertFalse(boolean)" proba="0.14285714285714285"/><transition target="s17" action="org.junit.Assert.assertNotEquals(java.lang.Object,java.lang.Object)" proba="0.023809523809523808"/><transition target="s1" action="org.junit.Assert.assertEquals(long,long)" proba="0.023809523809523808"/></state><state id="s9"><transition target="s10" action="org.junit.Assert.assertFalse(java.lang.String,boolean)" proba="0.45454545454545453"/><transition target="s13" action="org.junit.Assert.assertTrue(java.lang.String,boolean)" proba="0.5454545454545454"/></state><state id="s11"><transition target="s11" action="org.junit.Assert.assertEquals(java.lang.String,long,long)" proba="0.2"/><transition target="s13" action="org.junit.Assert.assertTrue(java.lang.String,boolean)" proba="0.45"/><transition target="s12" action="org.junit.Assert.assertEquals(java.lang.String,java.lang.Object,java.lang.Object)" proba="0.15"/><transition target="sX" action="epsilon" proba="0.2"/></state><state id="s10"><transition target="s11" action="org.junit.Assert.assertEquals(java.lang.String,long,long)" proba="0.3333333333333333"/><transition target="s10" action="org.junit.Assert.assertFalse(java.lang.String,boolean)" proba="0.2"/><transition target="s6" action="org.junit.Assert.assertNull(java.lang.Object)" proba="0.03333333333333333"/><transition target="s13" action="org.junit.Assert.assertTrue(java.lang.String,boolean)" proba="0.13333333333333333"/><transition target="sX" action="epsilon" proba="0.2"/><transition target="s12" action="org.junit.Assert.assertEquals(java.lang.String,java.lang.Object,java.lang.Object)" proba="0.1"/></state><state id="s13"><transition target="s11" action="org.junit.Assert.assertEquals(java.lang.String,long,long)" proba="0.09615384615384616"/><transition target="s10" action="org.junit.Assert.assertFalse(java.lang.String,boolean)" proba="0.1346153846153846"/><transition target="s6" action="org.junit.Assert.assertNull(java.lang.Object)" proba="0.019230769230769232"/><transition target="s13" action="org.junit.Assert.assertTrue(java.lang.String,boolean)" proba="0.4230769230769231"/><transition target="sX" action="epsilon" proba="0.2692307692307692"/><transition target="s12" action="org.junit.Assert.assertEquals(java.lang.String,java.lang.Object,java.lang.Object)" proba="0.057692307692307696"/></state><state id="s12"><transition target="s10" action="org.junit.Assert.assertFalse(java.lang.String,boolean)" proba="0.23809523809523808"/><transition target="s13" action="org.junit.Assert.assertTrue(java.lang.String,boolean)" proba="0.047619047619047616"/><transition target="s12" action="org.junit.Assert.assertEquals(java.lang.String,java.lang.Object,java.lang.Object)" proba="0.38095238095238093"/><transition target="sX" action="epsilon" proba="0.3333333333333333"/></state><state id="s15"><transition target="sX" action="epsilon" proba="0.75"/><transition target="s1" action="org.junit.Assert.assertEquals(long,long)" proba="0.25"/></state><state id="s14"><transition target="s3" action="org.junit.Assert.assertEquals(java.lang.Object,java.lang.Object)" proba="0.024691358024691357"/><transition target="s6" action="org.junit.Assert.assertNull(java.lang.Object)" proba="0.1728395061728395"/><transition target="sX" action="epsilon" proba="0.24691358024691357"/><transition target="s14" action="org.junit.Assert.assertSame(java.lang.Object,java.lang.Object)" proba="0.5308641975308642"/><transition target="s1" action="org.junit.Assert.assertEquals(long,long)" proba="0.024691358024691357"/></state><state id="s17"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s16"><transition target="s3" action="org.junit.Assert.assertEquals(java.lang.Object,java.lang.Object)" proba="0.16666666666666666"/><transition target="s5" action="org.junit.Assert.assertNotNull(java.lang.Object)" proba="0.08333333333333333"/><transition target="s8" action="org.junit.Assert.assertFalse(boolean)" proba="0.08333333333333333"/><transition target="sX" action="epsilon" proba="0.16666666666666666"/><transition target="s16" action="org.junit.Assert.assertNotSame(java.lang.Object,java.lang.Object)" proba="0.5"/></state><state id="s18"><transition target="sX" action="epsilon" proba="0.3333333333333333"/><transition target="s18" action="org.junit.Assert.assertArrayEquals(java.lang.Object[],java.lang.Object[])" proba="0.6666666666666666"/></state><state id="s0"><transition target="s3" action="org.junit.Assert.assertEquals(java.lang.Object,java.lang.Object)" proba="0.34615384615384615"/><transition target="s4" action="org.junit.Assert.assertTrue(boolean)" proba="0.05244755244755245"/><transition target="s5" action="org.junit.Assert.assertNotNull(java.lang.Object)" proba="0.18181818181818182"/><transition target="s6" action="org.junit.Assert.assertNull(java.lang.Object)" proba="0.05244755244755245"/><transition target="s7" action="org.junit.Assert.fail(java.lang.String)" proba="0.03146853146853147"/><transition target="s8" action="org.junit.Assert.assertFalse(boolean)" proba="0.02097902097902098"/><transition target="s9" action="org.junit.Assert.assertNotNull(java.lang.String,java.lang.Object)" proba="0.07692307692307693"/><transition target="s11" action="org.junit.Assert.assertEquals(java.lang.String,long,long)" proba="0.0034965034965034965"/><transition target="s10" action="org.junit.Assert.assertFalse(java.lang.String,boolean)" proba="0.006993006993006993"/><transition target="s13" action="org.junit.Assert.assertTrue(java.lang.String,boolean)" proba="0.01048951048951049"/><transition target="s12" action="org.junit.Assert.assertEquals(java.lang.String,java.lang.Object,java.lang.Object)" proba="0.013986013986013986"/><transition target="s15" action="org.junit.Assert.assertNull(java.lang.String,java.lang.Object)" proba="0.01048951048951049"/><transition target="s14" action="org.junit.Assert.assertSame(java.lang.Object,java.lang.Object)" proba="0.07342657342657342"/><transition target="s16" action="org.junit.Assert.assertNotSame(java.lang.Object,java.lang.Object)" proba="0.01048951048951049"/><transition target="s18" action="org.junit.Assert.assertArrayEquals(java.lang.Object[],java.lang.Object[])" proba="0.0034965034965034965"/><transition target="s1" action="org.junit.Assert.assertEquals(long,long)" proba="0.08041958041958042"/><transition target="s2" action="org.junit.Assert.assertEquals(double,double,double)" proba="0.024475524475524476"/></state><state id="s1"><transition target="s3" action="org.junit.Assert.assertEquals(java.lang.Object,java.lang.Object)" proba="0.19767441860465115"/><transition target="s4" action="org.junit.Assert.assertTrue(boolean)" proba="0.046511627906976744"/><transition target="s5" action="org.junit.Assert.assertNotNull(java.lang.Object)" proba="0.011627906976744186"/><transition target="s6" action="org.junit.Assert.assertNull(java.lang.Object)" proba="0.023255813953488372"/><transition target="sX" action="epsilon" proba="0.2441860465116279"/><transition target="s14" action="org.junit.Assert.assertSame(java.lang.Object,java.lang.Object)" proba="0.06976744186046512"/><transition target="s1" action="org.junit.Assert.assertEquals(long,long)" proba="0.313953488372093"/><transition target="s2" action="org.junit.Assert.assertEquals(double,double,double)" proba="0.09302325581395349"/></state><state id="s2"><transition target="s3" action="org.junit.Assert.assertEquals(java.lang.Object,java.lang.Object)" proba="0.014492753623188406"/><transition target="sX" action="epsilon" proba="0.11594202898550725"/><transition target="s1" action="org.junit.Assert.assertEquals(long,long)" proba="0.11594202898550725"/><transition target="s2" action="org.junit.Assert.assertEquals(double,double,double)" proba="0.7536231884057971"/></state></states></ts>