<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s4"><transition target="s3" action="java.util.Deque.iterator()" proba="0.08333333333333333"/><transition target="s5" action="java.util.Deque.peek()" proba="0.5833333333333334"/><transition target="s6" action="java.util.Deque.pop()" proba="0.16666666666666666"/><transition target="s10" action="java.util.Deque.descendingIterator()" proba="0.08333333333333333"/><transition target="s7" action="java.util.Deque.size()" proba="0.08333333333333333"/></state><state id="s5"><transition target="s6" action="java.util.Deque.pop()" proba="0.17857142857142858"/><transition target="sX" action="epsilon" proba="0.7142857142857143"/><transition target="s1" action="java.util.Deque.push(java.lang.Object)" proba="0.10714285714285714"/></state><state id="s6"><transition target="s3" action="java.util.Deque.iterator()" proba="0.02702702702702703"/><transition target="s4" action="java.util.Deque.isEmpty()" proba="0.02702702702702703"/><transition target="s5" action="java.util.Deque.peek()" proba="0.02702702702702703"/><transition target="sX" action="epsilon" proba="0.8108108108108109"/><transition target="s8" action="java.util.Deque.contains(java.lang.Object)" proba="0.02702702702702703"/><transition target="s1" action="java.util.Deque.push(java.lang.Object)" proba="0.08108108108108109"/></state><state id="s7"><transition target="sX" action="epsilon" proba="0.8"/><transition target="s9" action="java.util.Deque.toArray()" proba="0.1"/><transition target="s15" action="java.util.Deque.toArray(java.lang.Object[])" proba="0.1"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s8"><transition target="sX" action="epsilon" proba="0.3333333333333333"/><transition target="s1" action="java.util.Deque.push(java.lang.Object)" proba="0.6666666666666666"/></state><state id="s9"><transition target="s7" action="java.util.Deque.size()" proba="1.0"/></state><state id="s11"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s10"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s13"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s12"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s15"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s14"><transition target="s3" action="java.util.Deque.iterator()" proba="1.0"/></state><state id="s16"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s0"><transition target="s3" action="java.util.Deque.iterator()" proba="0.017543859649122806"/><transition target="s4" action="java.util.Deque.isEmpty()" proba="0.09649122807017543"/><transition target="s5" action="java.util.Deque.peek()" proba="0.17543859649122806"/><transition target="s6" action="java.util.Deque.pop()" proba="0.2543859649122807"/><transition target="s7" action="java.util.Deque.size()" proba="0.07017543859649122"/><transition target="s8" action="java.util.Deque.contains(java.lang.Object)" proba="0.017543859649122806"/><transition target="s11" action="java.util.Deque.addAll(java.util.Collection)" proba="0.008771929824561403"/><transition target="s10" action="java.util.Deque.descendingIterator()" proba="0.008771929824561403"/><transition target="s13" action="java.util.Deque.getLast()" proba="0.008771929824561403"/><transition target="s12" action="java.util.Deque.offerFirst(java.lang.Object)" proba="0.008771929824561403"/><transition target="s14" action="java.util.Deque.removeLast()" proba="0.008771929824561403"/><transition target="s16" action="java.util.Deque.add(java.lang.Object)" proba="0.008771929824561403"/><transition target="s1" action="java.util.Deque.push(java.lang.Object)" proba="0.30701754385964913"/><transition target="s2" action="java.util.Deque.getFirst()" proba="0.008771929824561403"/></state><state id="s1"><transition target="s6" action="java.util.Deque.pop()" proba="0.02127659574468085"/><transition target="sX" action="epsilon" proba="0.8936170212765957"/><transition target="s1" action="java.util.Deque.push(java.lang.Object)" proba="0.0851063829787234"/></state><state id="s2"><transition target="sX" action="epsilon" proba="1.0"/></state></states></ts>