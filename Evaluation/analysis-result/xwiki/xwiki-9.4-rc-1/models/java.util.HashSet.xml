<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="java.util.HashSet.add(java.lang.Object)" proba="0.14814814814814814"/><transition target="s4" action="java.util.HashSet.size()" proba="0.018518518518518517"/><transition target="s5" action="java.util.HashSet.iterator()" proba="0.05555555555555555"/><transition target="s6" action="java.util.HashSet.addAll(java.util.Collection)" proba="0.07407407407407407"/><transition target="sX" action="epsilon" proba="0.6296296296296297"/><transition target="s2" action="java.util.HashSet.contains(java.lang.Object)" proba="0.07407407407407407"/></state><state id="s4"><transition target="s5" action="java.util.HashSet.iterator()" proba="1.0"/></state><state id="s5"><transition target="sX" action="epsilon" proba="0.8333333333333334"/><transition target="s1" action="java.util.HashSet.&lt;init>()" proba="0.16666666666666666"/></state><state id="s6"><transition target="s5" action="java.util.HashSet.iterator()" proba="0.05"/><transition target="s6" action="java.util.HashSet.addAll(java.util.Collection)" proba="0.25"/><transition target="s13" action="java.util.HashSet.toArray(java.lang.Object[])" proba="0.05"/><transition target="sX" action="epsilon" proba="0.45"/><transition target="s12" action="java.util.HashSet.remove(java.lang.Object)" proba="0.05"/><transition target="s9" action="java.util.HashSet.isEmpty()" proba="0.15"/></state><state id="s7"><transition target="s3" action="java.util.HashSet.add(java.lang.Object)" proba="0.25"/><transition target="s8" action="java.util.HashSet.removeAll(java.util.Collection)" proba="0.125"/><transition target="s12" action="java.util.HashSet.remove(java.lang.Object)" proba="0.375"/><transition target="s2" action="java.util.HashSet.contains(java.lang.Object)" proba="0.25"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s8"><transition target="sX" action="epsilon" proba="0.5"/><transition target="s9" action="java.util.HashSet.isEmpty()" proba="0.5"/></state><state id="s9"><transition target="s10" action="java.util.HashSet.toString()" proba="0.2"/><transition target="s8" action="java.util.HashSet.removeAll(java.util.Collection)" proba="0.2"/><transition target="sX" action="epsilon" proba="0.4"/><transition target="s12" action="java.util.HashSet.remove(java.lang.Object)" proba="0.2"/></state><state id="s11"><transition target="s3" action="java.util.HashSet.add(java.lang.Object)" proba="1.0"/></state><state id="s10"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s13"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s12"><transition target="sX" action="epsilon" proba="0.6666666666666666"/><transition target="s12" action="java.util.HashSet.remove(java.lang.Object)" proba="0.16666666666666666"/><transition target="s9" action="java.util.HashSet.isEmpty()" proba="0.16666666666666666"/></state><state id="s0"><transition target="s11" action="java.util.HashSet.&lt;init>(int)" proba="0.08450704225352113"/><transition target="s7" action="java.util.HashSet.&lt;init>(java.util.Collection)" proba="0.11267605633802817"/><transition target="s1" action="java.util.HashSet.&lt;init>()" proba="0.8028169014084507"/></state><state id="s1"><transition target="s3" action="java.util.HashSet.add(java.lang.Object)" proba="0.5"/><transition target="s5" action="java.util.HashSet.iterator()" proba="0.017241379310344827"/><transition target="s6" action="java.util.HashSet.addAll(java.util.Collection)" proba="0.1896551724137931"/><transition target="sX" action="epsilon" proba="0.15517241379310345"/><transition target="s2" action="java.util.HashSet.contains(java.lang.Object)" proba="0.13793103448275862"/></state><state id="s2"><transition target="s3" action="java.util.HashSet.add(java.lang.Object)" proba="0.6"/><transition target="sX" action="epsilon" proba="0.3333333333333333"/><transition target="s2" action="java.util.HashSet.contains(java.lang.Object)" proba="0.06666666666666667"/></state></states></ts>