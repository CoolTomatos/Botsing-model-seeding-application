<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="org.mockito.Matchers.any(java.lang.Class)" proba="0.5555555555555556"/><transition target="s4" action="org.mockito.Matchers.anyBoolean()" proba="0.1111111111111111"/><transition target="sX" action="epsilon" proba="0.3333333333333333"/></state><state id="s4"><transition target="s3" action="org.mockito.Matchers.any(java.lang.Class)" proba="1.0"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s0"><transition target="s3" action="org.mockito.Matchers.any(java.lang.Class)" proba="0.4"/><transition target="s1" action="org.mockito.Matchers.argThat(org.hamcrest.Matcher)" proba="0.4"/><transition target="s2" action="org.mockito.Matchers.anyString()" proba="0.2"/></state><state id="s1"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s2"><transition target="s3" action="org.mockito.Matchers.any(java.lang.Class)" proba="1.0"/></state></states></ts>