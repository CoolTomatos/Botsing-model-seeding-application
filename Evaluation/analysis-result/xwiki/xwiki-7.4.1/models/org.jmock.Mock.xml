<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="sX" action="epsilon" proba="0.75"/><transition target="s1" action="org.jmock.Mock.stubs()" proba="0.25"/></state><state id="s4"><transition target="s3" action="org.jmock.Mock.proxy()" proba="0.3333333333333333"/><transition target="sX" action="epsilon" proba="0.3333333333333333"/><transition target="s1" action="org.jmock.Mock.stubs()" proba="0.3333333333333333"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s0"><transition target="s3" action="org.jmock.Mock.proxy()" proba="0.25"/><transition target="s1" action="org.jmock.Mock.stubs()" proba="0.75"/></state><state id="s1"><transition target="s2" action="org.jmock.Mock.method(java.lang.String)" proba="1.0"/></state><state id="s2"><transition target="s3" action="org.jmock.Mock.proxy()" proba="0.09090909090909091"/><transition target="s4" action="org.jmock.Mock.will(org.jmock.core.Stub)" proba="0.2727272727272727"/><transition target="sX" action="epsilon" proba="0.36363636363636365"/><transition target="s1" action="org.jmock.Mock.stubs()" proba="0.2727272727272727"/></state></states></ts>