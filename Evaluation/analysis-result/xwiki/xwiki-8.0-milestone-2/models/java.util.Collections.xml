<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s4"><transition target="s4" action="java.util.Collections.emptyMap()" proba="0.11538461538461539"/><transition target="s5" action="java.util.Collections.unmodifiableMap(java.util.Map)" proba="0.02564102564102564"/><transition target="s6" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.01282051282051282"/><transition target="sX" action="epsilon" proba="0.8333333333333334"/><transition target="s1" action="java.util.Collections.emptyList()" proba="0.01282051282051282"/></state><state id="s5"><transition target="s4" action="java.util.Collections.emptyMap()" proba="0.1111111111111111"/><transition target="s11" action="java.util.Collections.unmodifiableSet(java.util.Set)" proba="0.05555555555555555"/><transition target="sX" action="epsilon" proba="0.8333333333333334"/></state><state id="s6"><transition target="s6" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.12244897959183673"/><transition target="sX" action="epsilon" proba="0.7755102040816326"/><transition target="s8" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.02040816326530612"/><transition target="s1" action="java.util.Collections.emptyList()" proba="0.08163265306122448"/></state><state id="s7"><transition target="s7" action="java.util.Collections.emptySet()" proba="0.0625"/><transition target="sX" action="epsilon" proba="0.9375"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s8"><transition target="s20" action="java.util.Collections.emptyIterator()" proba="0.024390243902439025"/><transition target="s6" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.024390243902439025"/><transition target="sX" action="epsilon" proba="0.6097560975609756"/><transition target="s8" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.34146341463414637"/></state><state id="s9"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s20"><transition target="s20" action="java.util.Collections.emptyIterator()" proba="0.25"/><transition target="s8" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.25"/><transition target="sX" action="epsilon" proba="0.5"/></state><state id="s11"><transition target="s7" action="java.util.Collections.emptySet()" proba="0.08333333333333333"/><transition target="sX" action="epsilon" proba="0.9166666666666666"/></state><state id="s22"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s10"><transition target="sX" action="epsilon" proba="0.8333333333333334"/><transition target="s1" action="java.util.Collections.emptyList()" proba="0.16666666666666666"/></state><state id="s21"><transition target="s2" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="1.0"/></state><state id="s13"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s12"><transition target="sX" action="epsilon" proba="0.8"/><transition target="s9" action="java.util.Collections.unmodifiableList(java.util.List)" proba="0.13333333333333333"/><transition target="s2" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="0.06666666666666667"/></state><state id="s15"><transition target="sX" action="epsilon" proba="0.7333333333333333"/><transition target="s1" action="java.util.Collections.emptyList()" proba="0.26666666666666666"/></state><state id="s14"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s17"><transition target="sX" action="epsilon" proba="0.6"/><transition target="s16" action="java.util.Collections.synchronizedList(java.util.List)" proba="0.2"/><transition target="s1" action="java.util.Collections.emptyList()" proba="0.2"/></state><state id="s16"><transition target="sX" action="epsilon" proba="0.5"/><transition target="s17" action="java.util.Collections.synchronizedMap(java.util.Map)" proba="0.5"/></state><state id="s19"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s18"><transition target="sX" action="epsilon" proba="0.8333333333333334"/><transition target="s18" action="java.util.Collections.singleton(java.lang.Object)" proba="0.16666666666666666"/></state><state id="s0"><transition target="s3" action="java.util.Collections.enumeration(java.util.Collection)" proba="0.006696428571428571"/><transition target="s4" action="java.util.Collections.emptyMap()" proba="0.14508928571428573"/><transition target="s5" action="java.util.Collections.unmodifiableMap(java.util.Map)" proba="0.03571428571428571"/><transition target="s6" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.08482142857142858"/><transition target="s7" action="java.util.Collections.emptySet()" proba="0.03125"/><transition target="s8" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.05580357142857143"/><transition target="s9" action="java.util.Collections.unmodifiableList(java.util.List)" proba="0.03125"/><transition target="s20" action="java.util.Collections.emptyIterator()" proba="0.004464285714285714"/><transition target="s11" action="java.util.Collections.unmodifiableSet(java.util.Set)" proba="0.024553571428571428"/><transition target="s22" action="java.util.Collections.min(java.util.Collection)" proba="0.002232142857142857"/><transition target="s10" action="java.util.Collections.unmodifiableCollection(java.util.Collection)" proba="0.026785714285714284"/><transition target="s13" action="java.util.Collections.addAll(java.util.Collection,java.lang.Object[])" proba="0.008928571428571428"/><transition target="s12" action="java.util.Collections.sort(java.util.List)" proba="0.029017857142857144"/><transition target="s15" action="java.util.Collections.reverse(java.util.List)" proba="0.033482142857142856"/><transition target="s14" action="java.util.Collections.newSetFromMap(java.util.Map)" proba="0.002232142857142857"/><transition target="s17" action="java.util.Collections.synchronizedMap(java.util.Map)" proba="0.008928571428571428"/><transition target="s16" action="java.util.Collections.synchronizedList(java.util.List)" proba="0.002232142857142857"/><transition target="s18" action="java.util.Collections.singleton(java.lang.Object)" proba="0.011160714285714286"/><transition target="s1" action="java.util.Collections.emptyList()" proba="0.40401785714285715"/><transition target="s2" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="0.05133928571428571"/></state><state id="s1"><transition target="s4" action="java.util.Collections.emptyMap()" proba="0.009389671361502348"/><transition target="s6" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.014084507042253521"/><transition target="s21" action="java.util.Collections.reverseOrder()" proba="0.004694835680751174"/><transition target="sX" action="epsilon" proba="0.8356807511737089"/><transition target="s12" action="java.util.Collections.sort(java.util.List)" proba="0.009389671361502348"/><transition target="s9" action="java.util.Collections.unmodifiableList(java.util.List)" proba="0.014084507042253521"/><transition target="s19" action="java.util.Collections.iterator()" proba="0.014084507042253521"/><transition target="s1" action="java.util.Collections.emptyList()" proba="0.09389671361502347"/><transition target="s2" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="0.004694835680751174"/></state><state id="s2"><transition target="sX" action="epsilon" proba="0.896551724137931"/><transition target="s2" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="0.10344827586206896"/></state></states></ts>