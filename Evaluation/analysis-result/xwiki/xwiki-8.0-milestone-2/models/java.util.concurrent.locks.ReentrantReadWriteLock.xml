<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="s4" action="java.util.concurrent.locks.ReentrantReadWriteLock.writeLock()" proba="0.5357142857142857"/><transition target="sX" action="epsilon" proba="0.39285714285714285"/><transition target="s1" action="java.util.concurrent.locks.ReentrantReadWriteLock.readLock()" proba="0.07142857142857142"/></state><state id="s4"><transition target="s3" action="java.util.concurrent.locks.ReentrantReadWriteLock.unlock()" proba="0.7272727272727273"/><transition target="s2" action="java.util.concurrent.locks.ReentrantReadWriteLock.lock()" proba="0.2727272727272727"/></state><state id="s5"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s0"><transition target="s4" action="java.util.concurrent.locks.ReentrantReadWriteLock.writeLock()" proba="0.75"/><transition target="s5" action="java.util.concurrent.locks.ReentrantReadWriteLock.&lt;init>(boolean)" proba="0.08333333333333333"/><transition target="s1" action="java.util.concurrent.locks.ReentrantReadWriteLock.readLock()" proba="0.16666666666666666"/></state><state id="s1"><transition target="s3" action="java.util.concurrent.locks.ReentrantReadWriteLock.unlock()" proba="0.6666666666666666"/><transition target="s2" action="java.util.concurrent.locks.ReentrantReadWriteLock.lock()" proba="0.3333333333333333"/></state><state id="s2"><transition target="s4" action="java.util.concurrent.locks.ReentrantReadWriteLock.writeLock()" proba="0.8181818181818182"/><transition target="s1" action="java.util.concurrent.locks.ReentrantReadWriteLock.readLock()" proba="0.18181818181818182"/></state></states></ts>