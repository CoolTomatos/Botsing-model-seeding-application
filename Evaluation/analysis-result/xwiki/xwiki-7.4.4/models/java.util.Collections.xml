<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.11320754716981132"/><transition target="s11" action="java.util.Collections.singleton(java.lang.Object)" proba="0.018867924528301886"/><transition target="sX" action="epsilon" proba="0.7358490566037735"/><transition target="s9" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.018867924528301886"/><transition target="s2" action="java.util.Collections.emptyList()" proba="0.11320754716981132"/></state><state id="s4"><transition target="sX" action="epsilon" proba="0.8333333333333334"/><transition target="s2" action="java.util.Collections.emptyList()" proba="0.16666666666666666"/></state><state id="s5"><transition target="sX" action="epsilon" proba="0.7333333333333333"/><transition target="s2" action="java.util.Collections.emptyList()" proba="0.26666666666666666"/></state><state id="s6"><transition target="s13" action="java.util.Collections.unmodifiableList(java.util.List)" proba="0.125"/><transition target="sX" action="epsilon" proba="0.8125"/><transition target="s8" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="0.0625"/></state><state id="s7"><transition target="s3" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.011363636363636364"/><transition target="s7" action="java.util.Collections.emptyMap()" proba="0.14772727272727273"/><transition target="sX" action="epsilon" proba="0.7954545454545454"/><transition target="s1" action="java.util.Collections.unmodifiableMap(java.util.Map)" proba="0.022727272727272728"/><transition target="s2" action="java.util.Collections.emptyList()" proba="0.022727272727272728"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s8"><transition target="sX" action="epsilon" proba="0.9"/><transition target="s8" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="0.1"/></state><state id="s9"><transition target="s3" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.021739130434782608"/><transition target="sX" action="epsilon" proba="0.6521739130434783"/><transition target="s9" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.30434782608695654"/><transition target="s16" action="java.util.Collections.emptyIterator()" proba="0.021739130434782608"/></state><state id="s20"><transition target="sX" action="epsilon" proba="0.5"/><transition target="s18" action="java.util.Collections.synchronizedMap(java.util.Map)" proba="0.5"/></state><state id="s11"><transition target="s3" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.3333333333333333"/><transition target="s11" action="java.util.Collections.singleton(java.lang.Object)" proba="0.1111111111111111"/><transition target="sX" action="epsilon" proba="0.5555555555555556"/></state><state id="s22"><transition target="s8" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="1.0"/></state><state id="s10"><transition target="s10" action="java.util.Collections.emptySet()" proba="0.05263157894736842"/><transition target="sX" action="epsilon" proba="0.9473684210526315"/></state><state id="s21"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s13"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s12"><transition target="s10" action="java.util.Collections.emptySet()" proba="0.09090909090909091"/><transition target="sX" action="epsilon" proba="0.9090909090909091"/></state><state id="s15"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s14"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s17"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s16"><transition target="sX" action="epsilon" proba="0.5"/><transition target="s9" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.25"/><transition target="s16" action="java.util.Collections.emptyIterator()" proba="0.25"/></state><state id="s19"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s18"><transition target="s20" action="java.util.Collections.synchronizedList(java.util.List)" proba="0.2"/><transition target="sX" action="epsilon" proba="0.6"/><transition target="s2" action="java.util.Collections.emptyList()" proba="0.2"/></state><state id="s0"><transition target="s3" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.08227848101265822"/><transition target="s4" action="java.util.Collections.unmodifiableCollection(java.util.Collection)" proba="0.02531645569620253"/><transition target="s5" action="java.util.Collections.reverse(java.util.List)" proba="0.03164556962025317"/><transition target="s6" action="java.util.Collections.sort(java.util.List)" proba="0.029535864978902954"/><transition target="s7" action="java.util.Collections.emptyMap()" proba="0.14767932489451477"/><transition target="s8" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="0.05063291139240506"/><transition target="s9" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.06329113924050633"/><transition target="s20" action="java.util.Collections.synchronizedList(java.util.List)" proba="0.002109704641350211"/><transition target="s11" action="java.util.Collections.singleton(java.lang.Object)" proba="0.014767932489451477"/><transition target="s10" action="java.util.Collections.emptySet()" proba="0.029535864978902954"/><transition target="s21" action="java.util.Collections.min(java.util.Collection)" proba="0.002109704641350211"/><transition target="s13" action="java.util.Collections.unmodifiableList(java.util.List)" proba="0.029535864978902954"/><transition target="s12" action="java.util.Collections.unmodifiableSet(java.util.Set)" proba="0.023206751054852322"/><transition target="s15" action="java.util.Collections.newSetFromMap(java.util.Map)" proba="0.002109704641350211"/><transition target="s17" action="java.util.Collections.enumeration(java.util.Collection)" proba="0.006329113924050633"/><transition target="s16" action="java.util.Collections.emptyIterator()" proba="0.004219409282700422"/><transition target="s19" action="java.util.Collections.addAll(java.util.Collection,java.lang.Object[])" proba="0.008438818565400843"/><transition target="s18" action="java.util.Collections.synchronizedMap(java.util.Map)" proba="0.008438818565400843"/><transition target="s1" action="java.util.Collections.unmodifiableMap(java.util.Map)" proba="0.03164556962025317"/><transition target="s2" action="java.util.Collections.emptyList()" proba="0.40717299578059074"/></state><state id="s1"><transition target="s7" action="java.util.Collections.emptyMap()" proba="0.11764705882352941"/><transition target="sX" action="epsilon" proba="0.8823529411764706"/></state><state id="s2"><transition target="s3" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.013100436681222707"/><transition target="s22" action="java.util.Collections.reverseOrder()" proba="0.004366812227074236"/><transition target="s6" action="java.util.Collections.sort(java.util.List)" proba="0.008733624454148471"/><transition target="s10" action="java.util.Collections.emptySet()" proba="0.013100436681222707"/><transition target="s13" action="java.util.Collections.unmodifiableList(java.util.List)" proba="0.013100436681222707"/><transition target="s7" action="java.util.Collections.emptyMap()" proba="0.013100436681222707"/><transition target="sX" action="epsilon" proba="0.8253275109170306"/><transition target="s8" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="0.004366812227074236"/><transition target="s14" action="java.util.Collections.iterator()" proba="0.013100436681222707"/><transition target="s2" action="java.util.Collections.emptyList()" proba="0.09170305676855896"/></state></states></ts>