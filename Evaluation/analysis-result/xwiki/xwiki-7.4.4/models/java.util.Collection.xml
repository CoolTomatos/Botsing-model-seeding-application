<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="java.util.Collection.size()" proba="0.056338028169014086"/><transition target="s4" action="java.util.Collection.contains(java.lang.Object)" proba="0.028169014084507043"/><transition target="sX" action="epsilon" proba="0.16901408450704225"/><transition target="s9" action="java.util.Collection.containsAll(java.util.Collection)" proba="0.028169014084507043"/><transition target="s15" action="java.util.Collection.hasNext()" proba="0.014084507042253521"/><transition target="s1" action="java.util.Collection.iterator()" proba="0.704225352112676"/></state><state id="s4"><transition target="s4" action="java.util.Collection.contains(java.lang.Object)" proba="0.3225806451612903"/><transition target="s5" action="java.util.Collection.add(java.lang.Object)" proba="0.03225806451612903"/><transition target="s10" action="java.util.Collection.toLowerCase()" proba="0.03225806451612903"/><transition target="sX" action="epsilon" proba="0.5806451612903226"/><transition target="s1" action="java.util.Collection.iterator()" proba="0.03225806451612903"/></state><state id="s5"><transition target="s3" action="java.util.Collection.size()" proba="0.04"/><transition target="s5" action="java.util.Collection.add(java.lang.Object)" proba="0.12"/><transition target="s7" action="java.util.Collection.addAll(java.util.Collection)" proba="0.04"/><transition target="sX" action="epsilon" proba="0.76"/><transition target="s2" action="java.util.Collection.isEmpty()" proba="0.04"/></state><state id="s6"><transition target="s5" action="java.util.Collection.add(java.lang.Object)" proba="0.18181818181818182"/><transition target="sX" action="epsilon" proba="0.8181818181818182"/></state><state id="s7"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s8"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s9"><transition target="sX" action="epsilon" proba="0.5"/><transition target="s9" action="java.util.Collection.containsAll(java.util.Collection)" proba="0.5"/></state><state id="s11"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s10"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s13"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s12"><transition target="s13" action="java.util.Collection.getId()" proba="1.0"/></state><state id="s15"><transition target="s6" action="java.util.Collection.next()" proba="1.0"/></state><state id="s14"><transition target="s7" action="java.util.Collection.addAll(java.util.Collection)" proba="1.0"/></state><state id="s16"><transition target="s3" action="java.util.Collection.size()" proba="0.5"/><transition target="sX" action="epsilon" proba="0.5"/></state><state id="s0"><transition target="s3" action="java.util.Collection.size()" proba="0.21645021645021645"/><transition target="s4" action="java.util.Collection.contains(java.lang.Object)" proba="0.0735930735930736"/><transition target="s5" action="java.util.Collection.add(java.lang.Object)" proba="0.08225108225108226"/><transition target="s11" action="java.util.Collection.remove(java.lang.Object)" proba="0.012987012987012988"/><transition target="s7" action="java.util.Collection.addAll(java.util.Collection)" proba="0.025974025974025976"/><transition target="s14" action="java.util.Collection.clear()" proba="0.004329004329004329"/><transition target="s16" action="java.util.Collection.toArray()" proba="0.008658008658008658"/><transition target="s1" action="java.util.Collection.iterator()" proba="0.3939393939393939"/><transition target="s2" action="java.util.Collection.isEmpty()" proba="0.18181818181818182"/></state><state id="s1"><transition target="s3" action="java.util.Collection.size()" proba="0.006535947712418301"/><transition target="s4" action="java.util.Collection.contains(java.lang.Object)" proba="0.013071895424836602"/><transition target="s6" action="java.util.Collection.next()" proba="0.06535947712418301"/><transition target="sX" action="epsilon" proba="0.9019607843137255"/><transition target="s8" action="java.util.Collection.createInputFilterStream(java.util.Map)" proba="0.006535947712418301"/><transition target="s12" action="java.util.Collection.isValid(java.lang.String)" proba="0.006535947712418301"/></state><state id="s2"><transition target="s3" action="java.util.Collection.size()" proba="0.32558139534883723"/><transition target="sX" action="epsilon" proba="0.4186046511627907"/><transition target="s1" action="java.util.Collection.iterator()" proba="0.2558139534883721"/></state></states></ts>