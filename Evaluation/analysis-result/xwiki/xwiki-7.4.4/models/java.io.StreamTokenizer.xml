<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="s4" action="java.io.StreamTokenizer.resetSyntax()" proba="0.3333333333333333"/><transition target="s8" action="java.io.StreamTokenizer.ordinaryChars(int,int)" proba="0.6666666666666666"/></state><state id="s4"><transition target="s5" action="java.io.StreamTokenizer.quoteChar(int)" proba="1.0"/></state><state id="s5"><transition target="s5" action="java.io.StreamTokenizer.quoteChar(int)" proba="0.4"/><transition target="s6" action="java.io.StreamTokenizer.wordChars(int,int)" proba="0.2"/><transition target="s7" action="java.io.StreamTokenizer.whitespaceChars(int,int)" proba="0.4"/></state><state id="s6"><transition target="s5" action="java.io.StreamTokenizer.quoteChar(int)" proba="0.5"/><transition target="s6" action="java.io.StreamTokenizer.wordChars(int,int)" proba="0.25"/><transition target="s7" action="java.io.StreamTokenizer.whitespaceChars(int,int)" proba="0.25"/></state><state id="s7"><transition target="s7" action="java.io.StreamTokenizer.whitespaceChars(int,int)" proba="0.25"/><transition target="sX" action="epsilon" proba="0.5"/><transition target="s1" action="java.io.StreamTokenizer.nextToken()" proba="0.25"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s8"><transition target="s6" action="java.io.StreamTokenizer.wordChars(int,int)" proba="1.0"/></state><state id="s0"><transition target="s3" action="java.io.StreamTokenizer.&lt;init>(java.io.Reader)" proba="0.6"/><transition target="s1" action="java.io.StreamTokenizer.nextToken()" proba="0.4"/></state><state id="s1"><transition target="sX" action="epsilon" proba="0.25"/><transition target="s1" action="java.io.StreamTokenizer.nextToken()" proba="0.25"/><transition target="s2" action="java.io.StreamTokenizer.getMessage()" proba="0.5"/></state><state id="s2"><transition target="sX" action="epsilon" proba="1.0"/></state></states></ts>