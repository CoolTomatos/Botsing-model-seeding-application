<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="java.util.Collection.size()" proba="0.057971014492753624"/><transition target="sX" action="epsilon" proba="0.17391304347826086"/><transition target="s1" action="java.util.Collection.iterator()" proba="0.7681159420289855"/></state><state id="s4"><transition target="s4" action="java.util.Collection.addAll(java.util.Collection)" proba="0.09090909090909091"/><transition target="sX" action="epsilon" proba="0.9090909090909091"/></state><state id="s5"><transition target="s3" action="java.util.Collection.size()" proba="0.1590909090909091"/><transition target="sX" action="epsilon" proba="0.4318181818181818"/><transition target="s1" action="java.util.Collection.iterator()" proba="0.4090909090909091"/></state><state id="s6"><transition target="s7" action="java.util.Collection.getId()" proba="1.0"/></state><state id="s7"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s8"><transition target="sX" action="epsilon" proba="0.8333333333333334"/><transition target="s8" action="java.util.Collection.contains(java.lang.Object)" proba="0.1111111111111111"/><transition target="s1" action="java.util.Collection.iterator()" proba="0.05555555555555555"/></state><state id="s9"><transition target="s3" action="java.util.Collection.size()" proba="0.5"/><transition target="sX" action="epsilon" proba="0.5"/></state><state id="s11"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s10"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s13"><transition target="sX" action="epsilon" proba="0.8571428571428571"/><transition target="s2" action="java.util.Collection.add(java.lang.Object)" proba="0.14285714285714285"/></state><state id="s12"><transition target="s12" action="java.util.Collection.toString()" proba="0.5"/><transition target="sX" action="epsilon" proba="0.5"/></state><state id="s14"><transition target="s4" action="java.util.Collection.addAll(java.util.Collection)" proba="1.0"/></state><state id="s0"><transition target="s3" action="java.util.Collection.size()" proba="0.22672064777327935"/><transition target="s4" action="java.util.Collection.addAll(java.util.Collection)" proba="0.03643724696356275"/><transition target="s5" action="java.util.Collection.isEmpty()" proba="0.17408906882591094"/><transition target="s10" action="java.util.Collection.remove(java.lang.Object)" proba="0.012145748987854251"/><transition target="s8" action="java.util.Collection.contains(java.lang.Object)" proba="0.06072874493927125"/><transition target="s9" action="java.util.Collection.toArray()" proba="0.008097165991902834"/><transition target="s14" action="java.util.Collection.clear()" proba="0.004048582995951417"/><transition target="s1" action="java.util.Collection.iterator()" proba="0.4048582995951417"/><transition target="s2" action="java.util.Collection.add(java.lang.Object)" proba="0.0728744939271255"/></state><state id="s1"><transition target="s3" action="java.util.Collection.size()" proba="0.005813953488372093"/><transition target="s11" action="java.util.Collection.createInputFilterStream(java.util.Map)" proba="0.005813953488372093"/><transition target="s6" action="java.util.Collection.isValid(java.lang.String)" proba="0.011627906976744186"/><transition target="s13" action="java.util.Collection.next()" proba="0.040697674418604654"/><transition target="sX" action="epsilon" proba="0.9244186046511628"/><transition target="s12" action="java.util.Collection.toString()" proba="0.005813953488372093"/><transition target="s8" action="java.util.Collection.contains(java.lang.Object)" proba="0.005813953488372093"/></state><state id="s2"><transition target="s5" action="java.util.Collection.isEmpty()" proba="0.05263157894736842"/><transition target="sX" action="epsilon" proba="0.9473684210526315"/></state></states></ts>