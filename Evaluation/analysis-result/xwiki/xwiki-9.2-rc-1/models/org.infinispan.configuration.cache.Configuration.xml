<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s4"><transition target="sX" action="epsilon" proba="0.5"/><transition target="s8" action="org.infinispan.configuration.cache.Configuration.stores()" proba="0.5"/></state><state id="s5"><transition target="s5" action="org.infinispan.configuration.cache.Configuration.expiration()" proba="0.5"/><transition target="s6" action="org.infinispan.configuration.cache.Configuration.maxIdle()" proba="0.25"/><transition target="s7" action="org.infinispan.configuration.cache.Configuration.lifespan()" proba="0.25"/></state><state id="s6"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s7"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s8"><transition target="s9" action="org.infinispan.configuration.cache.Configuration.iterator()" proba="1.0"/></state><state id="s9"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s0"><transition target="s4" action="org.infinispan.configuration.cache.Configuration.persistence()" proba="0.4"/><transition target="s5" action="org.infinispan.configuration.cache.Configuration.expiration()" proba="0.4"/><transition target="s1" action="org.infinispan.configuration.cache.Configuration.eviction()" proba="0.2"/></state><state id="s1"><transition target="s3" action="org.infinispan.configuration.cache.Configuration.maxEntries()" proba="0.3333333333333333"/><transition target="s1" action="org.infinispan.configuration.cache.Configuration.eviction()" proba="0.3333333333333333"/><transition target="s2" action="org.infinispan.configuration.cache.Configuration.strategy()" proba="0.3333333333333333"/></state><state id="s2"><transition target="s1" action="org.infinispan.configuration.cache.Configuration.eviction()" proba="1.0"/></state></states></ts>