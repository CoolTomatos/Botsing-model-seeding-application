<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s4"><transition target="s11" action="java.util.Collections.emptyMap()" proba="0.1111111111111111"/><transition target="s13" action="java.util.Collections.unmodifiableSet(java.util.Set)" proba="0.05555555555555555"/><transition target="sX" action="epsilon" proba="0.8333333333333334"/></state><state id="s5"><transition target="s6" action="java.util.Collections.emptyList()" proba="0.26666666666666666"/><transition target="sX" action="epsilon" proba="0.7333333333333333"/></state><state id="s6"><transition target="s3" action="java.util.Collections.unmodifiableList(java.util.List)" proba="0.013636363636363636"/><transition target="s11" action="java.util.Collections.emptyMap()" proba="0.00909090909090909"/><transition target="s22" action="java.util.Collections.reverseOrder()" proba="0.004545454545454545"/><transition target="s6" action="java.util.Collections.emptyList()" proba="0.09090909090909091"/><transition target="s10" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.013636363636363636"/><transition target="sX" action="epsilon" proba="0.8409090909090909"/><transition target="s8" action="java.util.Collections.sort(java.util.List)" proba="0.00909090909090909"/><transition target="s12" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="0.004545454545454545"/><transition target="s16" action="java.util.Collections.iterator()" proba="0.013636363636363636"/></state><state id="s7"><transition target="s6" action="java.util.Collections.emptyList()" proba="0.16666666666666666"/><transition target="sX" action="epsilon" proba="0.8333333333333334"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s8"><transition target="s3" action="java.util.Collections.unmodifiableList(java.util.List)" proba="0.13333333333333333"/><transition target="sX" action="epsilon" proba="0.8"/><transition target="s12" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="0.06666666666666667"/></state><state id="s9"><transition target="sX" action="epsilon" proba="0.9375"/><transition target="s9" action="java.util.Collections.emptySet()" proba="0.0625"/></state><state id="s20"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s11"><transition target="s4" action="java.util.Collections.unmodifiableMap(java.util.Map)" proba="0.024691358024691357"/><transition target="s11" action="java.util.Collections.emptyMap()" proba="0.12345679012345678"/><transition target="s10" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.012345679012345678"/><transition target="s6" action="java.util.Collections.emptyList()" proba="0.012345679012345678"/><transition target="sX" action="epsilon" proba="0.8271604938271605"/></state><state id="s22"><transition target="s12" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="1.0"/></state><state id="s10"><transition target="s6" action="java.util.Collections.emptyList()" proba="0.08888888888888889"/><transition target="s10" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.13333333333333333"/><transition target="sX" action="epsilon" proba="0.7555555555555555"/><transition target="s2" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.022222222222222223"/></state><state id="s21"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s13"><transition target="sX" action="epsilon" proba="0.9166666666666666"/><transition target="s9" action="java.util.Collections.emptySet()" proba="0.08333333333333333"/></state><state id="s12"><transition target="s12" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="0.10344827586206896"/><transition target="sX" action="epsilon" proba="0.896551724137931"/></state><state id="s15"><transition target="sX" action="epsilon" proba="0.7142857142857143"/><transition target="s15" action="java.util.Collections.singleton(java.lang.Object)" proba="0.2857142857142857"/></state><state id="s14"><transition target="s6" action="java.util.Collections.emptyList()" proba="0.2"/><transition target="sX" action="epsilon" proba="0.6"/><transition target="s19" action="java.util.Collections.synchronizedList(java.util.List)" proba="0.2"/></state><state id="s17"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s16"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s19"><transition target="sX" action="epsilon" proba="0.5"/><transition target="s14" action="java.util.Collections.synchronizedMap(java.util.Map)" proba="0.5"/></state><state id="s18"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s0"><transition target="s3" action="java.util.Collections.unmodifiableList(java.util.List)" proba="0.03728070175438596"/><transition target="s4" action="java.util.Collections.unmodifiableMap(java.util.Map)" proba="0.03508771929824561"/><transition target="s5" action="java.util.Collections.reverse(java.util.List)" proba="0.03289473684210526"/><transition target="s6" action="java.util.Collections.emptyList()" proba="0.41228070175438597"/><transition target="s7" action="java.util.Collections.unmodifiableCollection(java.util.Collection)" proba="0.02631578947368421"/><transition target="s8" action="java.util.Collections.sort(java.util.List)" proba="0.02850877192982456"/><transition target="s9" action="java.util.Collections.emptySet()" proba="0.03070175438596491"/><transition target="s20" action="java.util.Collections.addAll(java.util.Collection,java.lang.Object[])" proba="0.008771929824561403"/><transition target="s11" action="java.util.Collections.emptyMap()" proba="0.14692982456140352"/><transition target="s10" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.07456140350877193"/><transition target="s21" action="java.util.Collections.newSetFromMap(java.util.Map)" proba="0.0021929824561403508"/><transition target="s13" action="java.util.Collections.unmodifiableSet(java.util.Set)" proba="0.02412280701754386"/><transition target="s12" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="0.05043859649122807"/><transition target="s15" action="java.util.Collections.singleton(java.lang.Object)" proba="0.010964912280701754"/><transition target="s14" action="java.util.Collections.synchronizedMap(java.util.Map)" proba="0.008771929824561403"/><transition target="s17" action="java.util.Collections.enumeration(java.util.Collection)" proba="0.006578947368421052"/><transition target="s19" action="java.util.Collections.synchronizedList(java.util.List)" proba="0.0021929824561403508"/><transition target="s18" action="java.util.Collections.min(java.util.Collection)" proba="0.0021929824561403508"/><transition target="s1" action="java.util.Collections.emptyIterator()" proba="0.0043859649122807015"/><transition target="s2" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.05482456140350877"/></state><state id="s1"><transition target="sX" action="epsilon" proba="0.5"/><transition target="s1" action="java.util.Collections.emptyIterator()" proba="0.25"/><transition target="s2" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.25"/></state><state id="s2"><transition target="s10" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.024390243902439025"/><transition target="sX" action="epsilon" proba="0.6097560975609756"/><transition target="s1" action="java.util.Collections.emptyIterator()" proba="0.024390243902439025"/><transition target="s2" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.34146341463414637"/></state></states></ts>