<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="java.util.HashMap.put(java.lang.Object,java.lang.Object)" proba="0.5162241887905604"/><transition target="s4" action="java.util.HashMap.containsKey(java.lang.Object)" proba="0.008849557522123894"/><transition target="s5" action="java.util.HashMap.entrySet()" proba="0.0029498525073746312"/><transition target="s10" action="java.util.HashMap.size()" proba="0.008849557522123894"/><transition target="s13" action="java.util.HashMap.values()" proba="0.0029498525073746312"/><transition target="sX" action="epsilon" proba="0.415929203539823"/><transition target="s8" action="java.util.HashMap.isEmpty()" proba="0.0029498525073746312"/><transition target="s12" action="java.util.HashMap.remove(java.lang.Object)" proba="0.0029498525073746312"/><transition target="s9" action="java.util.HashMap.putAll(java.util.Map)" proba="0.011799410029498525"/><transition target="s14" action="java.util.HashMap.keySet()" proba="0.0058997050147492625"/><transition target="s2" action="java.util.HashMap.get(java.lang.Object)" proba="0.02064896755162242"/></state><state id="s4"><transition target="s3" action="java.util.HashMap.put(java.lang.Object,java.lang.Object)" proba="0.5454545454545454"/><transition target="s2" action="java.util.HashMap.get(java.lang.Object)" proba="0.45454545454545453"/></state><state id="s5"><transition target="s6" action="java.util.HashMap.iterator()" proba="1.0"/></state><state id="s6"><transition target="sX" action="epsilon" proba="0.7142857142857143"/><transition target="s14" action="java.util.HashMap.keySet()" proba="0.14285714285714285"/><transition target="s2" action="java.util.HashMap.get(java.lang.Object)" proba="0.14285714285714285"/></state><state id="s7"><transition target="s3" action="java.util.HashMap.put(java.lang.Object,java.lang.Object)" proba="0.5"/><transition target="s13" action="java.util.HashMap.values()" proba="0.125"/><transition target="s8" action="java.util.HashMap.isEmpty()" proba="0.125"/><transition target="s9" action="java.util.HashMap.putAll(java.util.Map)" proba="0.125"/><transition target="s1" action="java.util.HashMap.&lt;init>()" proba="0.125"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s8"><transition target="s5" action="java.util.HashMap.entrySet()" proba="0.16666666666666666"/><transition target="s10" action="java.util.HashMap.size()" proba="0.3333333333333333"/><transition target="sX" action="epsilon" proba="0.5"/></state><state id="s9"><transition target="s3" action="java.util.HashMap.put(java.lang.Object,java.lang.Object)" proba="0.1"/><transition target="s4" action="java.util.HashMap.containsKey(java.lang.Object)" proba="0.1"/><transition target="sX" action="epsilon" proba="0.7"/><transition target="s2" action="java.util.HashMap.get(java.lang.Object)" proba="0.1"/></state><state id="s11"><transition target="s3" action="java.util.HashMap.put(java.lang.Object,java.lang.Object)" proba="0.5"/><transition target="sX" action="epsilon" proba="0.5"/></state><state id="s10"><transition target="s5" action="java.util.HashMap.entrySet()" proba="0.18181818181818182"/><transition target="s10" action="java.util.HashMap.size()" proba="0.18181818181818182"/><transition target="sX" action="epsilon" proba="0.36363636363636365"/><transition target="s14" action="java.util.HashMap.keySet()" proba="0.2727272727272727"/></state><state id="s13"><transition target="s6" action="java.util.HashMap.iterator()" proba="0.75"/><transition target="sX" action="epsilon" proba="0.25"/></state><state id="s12"><transition target="s3" action="java.util.HashMap.put(java.lang.Object,java.lang.Object)" proba="0.5"/><transition target="sX" action="epsilon" proba="0.5"/></state><state id="s14"><transition target="s10" action="java.util.HashMap.size()" proba="0.42857142857142855"/><transition target="s6" action="java.util.HashMap.iterator()" proba="0.5714285714285714"/></state><state id="s0"><transition target="s3" action="java.util.HashMap.put(java.lang.Object,java.lang.Object)" proba="0.004672897196261682"/><transition target="s4" action="java.util.HashMap.containsKey(java.lang.Object)" proba="0.009345794392523364"/><transition target="s11" action="java.util.HashMap.&lt;init>(int)" proba="0.018691588785046728"/><transition target="s7" action="java.util.HashMap.&lt;init>(java.util.Map)" proba="0.037383177570093455"/><transition target="s1" action="java.util.HashMap.&lt;init>()" proba="0.9205607476635514"/><transition target="s2" action="java.util.HashMap.get(java.lang.Object)" proba="0.009345794392523364"/></state><state id="s1"><transition target="s3" action="java.util.HashMap.put(java.lang.Object,java.lang.Object)" proba="0.6432160804020101"/><transition target="s4" action="java.util.HashMap.containsKey(java.lang.Object)" proba="0.02512562814070352"/><transition target="s5" action="java.util.HashMap.entrySet()" proba="0.005025125628140704"/><transition target="s10" action="java.util.HashMap.size()" proba="0.005025125628140704"/><transition target="s13" action="java.util.HashMap.values()" proba="0.010050251256281407"/><transition target="sX" action="epsilon" proba="0.1658291457286432"/><transition target="s8" action="java.util.HashMap.isEmpty()" proba="0.020100502512562814"/><transition target="s9" action="java.util.HashMap.putAll(java.util.Map)" proba="0.02512562814070352"/><transition target="s1" action="java.util.HashMap.&lt;init>()" proba="0.005025125628140704"/><transition target="s2" action="java.util.HashMap.get(java.lang.Object)" proba="0.09547738693467336"/></state><state id="s2"><transition target="s3" action="java.util.HashMap.put(java.lang.Object,java.lang.Object)" proba="0.5121951219512195"/><transition target="s5" action="java.util.HashMap.entrySet()" proba="0.04878048780487805"/><transition target="sX" action="epsilon" proba="0.2926829268292683"/><transition target="s12" action="java.util.HashMap.remove(java.lang.Object)" proba="0.024390243902439025"/><transition target="s2" action="java.util.HashMap.get(java.lang.Object)" proba="0.12195121951219512"/></state></states></ts>