<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="java.lang.Character.isWhitespace(char)" proba="0.16666666666666666"/><transition target="s7" action="java.lang.Character.isSpaceChar(char)" proba="0.08333333333333333"/><transition target="sX" action="epsilon" proba="0.75"/></state><state id="s4"><transition target="s5" action="java.lang.Character.isLetter(char)" proba="1.0"/></state><state id="s5"><transition target="s4" action="java.lang.Character.forDigit(int,int)" proba="0.14285714285714285"/><transition target="sX" action="epsilon" proba="0.42857142857142855"/><transition target="s9" action="java.lang.Character.isDigit(char)" proba="0.14285714285714285"/><transition target="s1" action="java.lang.Character.isLetterOrDigit(char)" proba="0.2857142857142857"/></state><state id="s6"><transition target="s6" action="java.lang.Character.valueOf(char)" proba="0.5348837209302325"/><transition target="sX" action="epsilon" proba="0.46511627906976744"/></state><state id="s7"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s8"><transition target="s8" action="java.lang.Character.charValue()" proba="0.25"/><transition target="sX" action="epsilon" proba="0.75"/></state><state id="s9"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s11"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s10"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s13"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s12"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s0"><transition target="s3" action="java.lang.Character.isWhitespace(char)" proba="0.19607843137254902"/><transition target="s4" action="java.lang.Character.forDigit(int,int)" proba="0.0196078431372549"/><transition target="s5" action="java.lang.Character.isLetter(char)" proba="0.09803921568627451"/><transition target="s6" action="java.lang.Character.valueOf(char)" proba="0.39215686274509803"/><transition target="s7" action="java.lang.Character.isSpaceChar(char)" proba="0.0392156862745098"/><transition target="s8" action="java.lang.Character.charValue()" proba="0.058823529411764705"/><transition target="s9" action="java.lang.Character.isDigit(char)" proba="0.0196078431372549"/><transition target="s11" action="java.lang.Character.toChars(int)" proba="0.0196078431372549"/><transition target="s10" action="java.lang.Character.isUpperCase(char)" proba="0.0196078431372549"/><transition target="s13" action="java.lang.Character.isJavaIdentifierPart(int)" proba="0.0196078431372549"/><transition target="s12" action="java.lang.Character.digit(char,int)" proba="0.0196078431372549"/><transition target="s1" action="java.lang.Character.isLetterOrDigit(char)" proba="0.0392156862745098"/><transition target="s2" action="java.lang.Character.toLowerCase(char)" proba="0.058823529411764705"/></state><state id="s1"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s2"><transition target="sX" action="epsilon" proba="1.0"/></state></states></ts>