<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="s6" action="java.util.Collection.contains(java.lang.Object)" proba="0.017857142857142856"/><transition target="sX" action="epsilon" proba="0.4107142857142857"/><transition target="s1" action="java.util.Collection.iterator()" proba="0.32142857142857145"/><transition target="s2" action="java.util.Collection.size()" proba="0.25"/></state><state id="s4"><transition target="sX" action="epsilon" proba="0.7619047619047619"/><transition target="s9" action="java.util.Collection.add(java.lang.Object)" proba="0.09523809523809523"/><transition target="s1" action="java.util.Collection.iterator()" proba="0.14285714285714285"/></state><state id="s5"><transition target="s5" action="java.util.Collection.addAll(java.util.Collection)" proba="0.09090909090909091"/><transition target="sX" action="epsilon" proba="0.9090909090909091"/></state><state id="s6"><transition target="s6" action="java.util.Collection.contains(java.lang.Object)" proba="0.34210526315789475"/><transition target="s7" action="java.util.Collection.toArray()" proba="0.05263157894736842"/><transition target="sX" action="epsilon" proba="0.5"/><transition target="s8" action="java.util.Collection.remove(java.lang.Object)" proba="0.02631578947368421"/><transition target="s1" action="java.util.Collection.iterator()" proba="0.02631578947368421"/><transition target="s2" action="java.util.Collection.size()" proba="0.05263157894736842"/></state><state id="s7"><transition target="sX" action="epsilon" proba="0.8"/><transition target="s2" action="java.util.Collection.size()" proba="0.2"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s8"><transition target="s3" action="java.util.Collection.isEmpty()" proba="0.25"/><transition target="sX" action="epsilon" proba="0.75"/></state><state id="s9"><transition target="s3" action="java.util.Collection.isEmpty()" proba="0.041666666666666664"/><transition target="sX" action="epsilon" proba="0.875"/><transition target="s9" action="java.util.Collection.add(java.lang.Object)" proba="0.041666666666666664"/><transition target="s2" action="java.util.Collection.size()" proba="0.041666666666666664"/></state><state id="s11"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s10"><transition target="s5" action="java.util.Collection.addAll(java.util.Collection)" proba="1.0"/></state><state id="s13"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s12"><transition target="s4" action="java.util.Collection.next()" proba="1.0"/></state><state id="s15"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s14"><transition target="s15" action="java.util.Collection.getId()" proba="1.0"/></state><state id="s16"><transition target="sX" action="epsilon" proba="0.5"/><transition target="s16" action="java.util.Collection.containsAll(java.util.Collection)" proba="0.5"/></state><state id="s0"><transition target="s3" action="java.util.Collection.isEmpty()" proba="0.17763157894736842"/><transition target="s5" action="java.util.Collection.addAll(java.util.Collection)" proba="0.029605263157894735"/><transition target="s6" action="java.util.Collection.contains(java.lang.Object)" proba="0.05592105263157895"/><transition target="s10" action="java.util.Collection.clear()" proba="0.003289473684210526"/><transition target="s7" action="java.util.Collection.toArray()" proba="0.006578947368421052"/><transition target="s8" action="java.util.Collection.remove(java.lang.Object)" proba="0.009868421052631578"/><transition target="s9" action="java.util.Collection.add(java.lang.Object)" proba="0.06907894736842106"/><transition target="s1" action="java.util.Collection.iterator()" proba="0.3782894736842105"/><transition target="s2" action="java.util.Collection.size()" proba="0.26973684210526316"/></state><state id="s1"><transition target="s4" action="java.util.Collection.next()" proba="0.0975609756097561"/><transition target="s6" action="java.util.Collection.contains(java.lang.Object)" proba="0.004878048780487805"/><transition target="s13" action="java.util.Collection.createInputFilterStream(java.util.Map)" proba="0.004878048780487805"/><transition target="sX" action="epsilon" proba="0.8829268292682927"/><transition target="s14" action="java.util.Collection.isValid(java.lang.String)" proba="0.004878048780487805"/><transition target="s2" action="java.util.Collection.size()" proba="0.004878048780487805"/></state><state id="s2"><transition target="s11" action="java.util.Collection.toArray(java.lang.Object[])" proba="0.009345794392523364"/><transition target="s6" action="java.util.Collection.contains(java.lang.Object)" proba="0.056074766355140186"/><transition target="s7" action="java.util.Collection.toArray()" proba="0.009345794392523364"/><transition target="sX" action="epsilon" proba="0.205607476635514"/><transition target="s12" action="java.util.Collection.hasNext()" proba="0.009345794392523364"/><transition target="s16" action="java.util.Collection.containsAll(java.util.Collection)" proba="0.018691588785046728"/><transition target="s1" action="java.util.Collection.iterator()" proba="0.6355140186915887"/><transition target="s2" action="java.util.Collection.size()" proba="0.056074766355140186"/></state></states></ts>