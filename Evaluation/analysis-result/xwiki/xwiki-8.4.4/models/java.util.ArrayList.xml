<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s11"><transition target="s3" action="java.util.ArrayList.add(java.lang.Object)" proba="0.2222222222222222"/><transition target="s4" action="java.util.ArrayList.size()" proba="0.07407407407407407"/><transition target="s6" action="java.util.ArrayList.addAll(java.util.Collection)" proba="0.037037037037037035"/><transition target="s10" action="java.util.ArrayList.iterator()" proba="0.14814814814814814"/><transition target="s21" action="java.util.ArrayList.remove(int)" proba="0.018518518518518517"/><transition target="sX" action="epsilon" proba="0.42592592592592593"/><transition target="s9" action="java.util.ArrayList.remove(java.lang.Object)" proba="0.037037037037037035"/><transition target="s16" action="java.util.ArrayList.isEmpty()" proba="0.018518518518518517"/><transition target="s1" action="java.util.ArrayList.get(int)" proba="0.018518518518518517"/></state><state id="s10"><transition target="s3" action="java.util.ArrayList.add(java.lang.Object)" proba="0.014925373134328358"/><transition target="s22" action="java.util.ArrayList.clear()" proba="0.014925373134328358"/><transition target="s10" action="java.util.ArrayList.iterator()" proba="0.05970149253731343"/><transition target="s24" action="java.util.ArrayList.hasNext()" proba="0.014925373134328358"/><transition target="sX" action="epsilon" proba="0.7611940298507462"/><transition target="s9" action="java.util.ArrayList.remove(java.lang.Object)" proba="0.029850746268656716"/><transition target="s14" action="java.util.ArrayList.getLength()" proba="0.014925373134328358"/><transition target="s27" action="java.util.ArrayList.getFieldList()" proba="0.014925373134328358"/><transition target="s1" action="java.util.ArrayList.get(int)" proba="0.029850746268656716"/><transition target="s2" action="java.util.ArrayList.&lt;init>()" proba="0.04477611940298507"/></state><state id="s13"><transition target="s20" action="java.util.ArrayList.get(java.lang.String)" proba="0.09090909090909091"/><transition target="s13" action="java.util.ArrayList.toArray()" proba="0.09090909090909091"/><transition target="sX" action="epsilon" proba="0.8181818181818182"/></state><state id="s12"><transition target="s3" action="java.util.ArrayList.add(java.lang.Object)" proba="0.3333333333333333"/><transition target="s1" action="java.util.ArrayList.get(int)" proba="0.6666666666666666"/></state><state id="s15"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s14"><transition target="s15" action="java.util.ArrayList.item(int)" proba="1.0"/></state><state id="s17"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s16"><transition target="s3" action="java.util.ArrayList.add(java.lang.Object)" proba="0.2"/><transition target="s4" action="java.util.ArrayList.size()" proba="0.06666666666666667"/><transition target="s10" action="java.util.ArrayList.iterator()" proba="0.13333333333333333"/><transition target="s24" action="java.util.ArrayList.hasNext()" proba="0.06666666666666667"/><transition target="sX" action="epsilon" proba="0.4666666666666667"/><transition target="s1" action="java.util.ArrayList.get(int)" proba="0.06666666666666667"/></state><state id="s19"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s18"><transition target="s4" action="java.util.ArrayList.size()" proba="0.3333333333333333"/><transition target="sX" action="epsilon" proba="0.6666666666666666"/></state><state id="s0"><transition target="s3" action="java.util.ArrayList.add(java.lang.Object)" proba="0.0018529956763434219"/><transition target="s11" action="java.util.ArrayList.&lt;init>(java.util.Collection)" proba="0.032736256948733784"/><transition target="s7" action="java.util.ArrayList.&lt;init>(int)" proba="0.07164916615194565"/><transition target="s1" action="java.util.ArrayList.get(int)" proba="0.3329215565163681"/><transition target="s2" action="java.util.ArrayList.&lt;init>()" proba="0.560840024706609"/></state><state id="s1"><transition target="s3" action="java.util.ArrayList.add(java.lang.Object)" proba="0.0016474464579901153"/><transition target="s4" action="java.util.ArrayList.size()" proba="0.0016474464579901153"/><transition target="s21" action="java.util.ArrayList.remove(int)" proba="0.0032948929159802307"/><transition target="s10" action="java.util.ArrayList.iterator()" proba="0.0016474464579901153"/><transition target="sX" action="epsilon" proba="0.9324546952224053"/><transition target="s23" action="java.util.ArrayList.add(int,java.lang.Object)" proba="0.0016474464579901153"/><transition target="s12" action="java.util.ArrayList.indexOf(java.lang.Object)" proba="0.0016474464579901153"/><transition target="s26" action="java.util.ArrayList.equals(java.lang.Object)" proba="0.0016474464579901153"/><transition target="s17" action="java.util.ArrayList.set(int,java.lang.Object)" proba="0.0016474464579901153"/><transition target="s1" action="java.util.ArrayList.get(int)" proba="0.05271828665568369"/></state><state id="s2"><transition target="s3" action="java.util.ArrayList.add(java.lang.Object)" proba="0.8439869989165764"/><transition target="s4" action="java.util.ArrayList.size()" proba="0.0065005417118093175"/><transition target="s6" action="java.util.ArrayList.addAll(java.util.Collection)" proba="0.04983748645720477"/><transition target="s10" action="java.util.ArrayList.iterator()" proba="0.0065005417118093175"/><transition target="s13" action="java.util.ArrayList.toArray()" proba="0.0032502708559046588"/><transition target="sX" action="epsilon" proba="0.06717226435536294"/><transition target="s12" action="java.util.ArrayList.indexOf(java.lang.Object)" proba="0.0010834236186348862"/><transition target="s8" action="java.util.ArrayList.contains(java.lang.Object)" proba="0.011917659804983749"/><transition target="s9" action="java.util.ArrayList.remove(java.lang.Object)" proba="0.0010834236186348862"/><transition target="s28" action="java.util.ArrayList.getMessage()" proba="0.0010834236186348862"/><transition target="s19" action="java.util.ArrayList.toString()" proba="0.0010834236186348862"/><transition target="s2" action="java.util.ArrayList.&lt;init>()" proba="0.0065005417118093175"/></state><state id="s3"><transition target="s3" action="java.util.ArrayList.add(java.lang.Object)" proba="0.30262172284644195"/><transition target="s4" action="java.util.ArrayList.size()" proba="0.017228464419475654"/><transition target="s5" action="java.util.ArrayList.toArray(java.lang.Object[])" proba="7.49063670411985E-4"/><transition target="s6" action="java.util.ArrayList.addAll(java.util.Collection)" proba="0.021722846441947566"/><transition target="sX" action="epsilon" proba="0.5872659176029963"/><transition target="s8" action="java.util.ArrayList.contains(java.lang.Object)" proba="0.012734082397003745"/><transition target="s9" action="java.util.ArrayList.remove(java.lang.Object)" proba="7.49063670411985E-4"/><transition target="s10" action="java.util.ArrayList.iterator()" proba="0.02247191011235955"/><transition target="s13" action="java.util.ArrayList.toArray()" proba="0.0044943820224719105"/><transition target="s24" action="java.util.ArrayList.hasNext()" proba="7.49063670411985E-4"/><transition target="s12" action="java.util.ArrayList.indexOf(java.lang.Object)" proba="7.49063670411985E-4"/><transition target="s17" action="java.util.ArrayList.set(int,java.lang.Object)" proba="0.0022471910112359553"/><transition target="s16" action="java.util.ArrayList.isEmpty()" proba="0.008988764044943821"/><transition target="s19" action="java.util.ArrayList.toString()" proba="7.49063670411985E-4"/><transition target="s1" action="java.util.ArrayList.get(int)" proba="0.01198501872659176"/><transition target="s2" action="java.util.ArrayList.&lt;init>()" proba="0.0044943820224719105"/></state><state id="s4"><transition target="s3" action="java.util.ArrayList.add(java.lang.Object)" proba="0.11764705882352941"/><transition target="s4" action="java.util.ArrayList.size()" proba="0.13725490196078433"/><transition target="s5" action="java.util.ArrayList.toArray(java.lang.Object[])" proba="0.11764705882352941"/><transition target="s11" action="java.util.ArrayList.&lt;init>(java.util.Collection)" proba="0.0196078431372549"/><transition target="s10" action="java.util.ArrayList.iterator()" proba="0.23529411764705882"/><transition target="s6" action="java.util.ArrayList.addAll(java.util.Collection)" proba="0.0196078431372549"/><transition target="sX" action="epsilon" proba="0.0784313725490196"/><transition target="s18" action="java.util.ArrayList.subList(int,int)" proba="0.0196078431372549"/><transition target="s1" action="java.util.ArrayList.get(int)" proba="0.2549019607843137"/></state><state id="s5"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s6"><transition target="s3" action="java.util.ArrayList.add(java.lang.Object)" proba="0.07079646017699115"/><transition target="s4" action="java.util.ArrayList.size()" proba="0.04424778761061947"/><transition target="s5" action="java.util.ArrayList.toArray(java.lang.Object[])" proba="0.008849557522123894"/><transition target="s6" action="java.util.ArrayList.addAll(java.util.Collection)" proba="0.26548672566371684"/><transition target="s10" action="java.util.ArrayList.iterator()" proba="0.035398230088495575"/><transition target="s13" action="java.util.ArrayList.toArray()" proba="0.008849557522123894"/><transition target="sX" action="epsilon" proba="0.5132743362831859"/><transition target="s8" action="java.util.ArrayList.contains(java.lang.Object)" proba="0.017699115044247787"/><transition target="s16" action="java.util.ArrayList.isEmpty()" proba="0.008849557522123894"/><transition target="s18" action="java.util.ArrayList.subList(int,int)" proba="0.017699115044247787"/><transition target="s1" action="java.util.ArrayList.get(int)" proba="0.008849557522123894"/></state><state id="s7"><transition target="s3" action="java.util.ArrayList.add(java.lang.Object)" proba="0.8717948717948718"/><transition target="s4" action="java.util.ArrayList.size()" proba="0.008547008547008548"/><transition target="s6" action="java.util.ArrayList.addAll(java.util.Collection)" proba="0.042735042735042736"/><transition target="s7" action="java.util.ArrayList.&lt;init>(int)" proba="0.008547008547008548"/><transition target="sX" action="epsilon" proba="0.06837606837606838"/></state><state id="s8"><transition target="s3" action="java.util.ArrayList.add(java.lang.Object)" proba="0.3783783783783784"/><transition target="s22" action="java.util.ArrayList.clear()" proba="0.02702702702702703"/><transition target="s8" action="java.util.ArrayList.contains(java.lang.Object)" proba="0.10810810810810811"/><transition target="sX" action="epsilon" proba="0.3783783783783784"/><transition target="s9" action="java.util.ArrayList.remove(java.lang.Object)" proba="0.10810810810810811"/></state><state id="s9"><transition target="s4" action="java.util.ArrayList.size()" proba="0.15384615384615385"/><transition target="sX" action="epsilon" proba="0.3076923076923077"/><transition target="s8" action="java.util.ArrayList.contains(java.lang.Object)" proba="0.23076923076923078"/><transition target="s23" action="java.util.ArrayList.add(int,java.lang.Object)" proba="0.07692307692307693"/><transition target="s9" action="java.util.ArrayList.remove(java.lang.Object)" proba="0.23076923076923078"/></state><state id="s20"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s22"><transition target="s3" action="java.util.ArrayList.add(java.lang.Object)" proba="0.5"/><transition target="sX" action="epsilon" proba="0.5"/></state><state id="s21"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s24"><transition target="s25" action="java.util.ArrayList.next()" proba="1.0"/></state><state id="s23"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s26"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s25"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s28"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s27"><transition target="s16" action="java.util.ArrayList.isEmpty()" proba="1.0"/></state></states></ts>