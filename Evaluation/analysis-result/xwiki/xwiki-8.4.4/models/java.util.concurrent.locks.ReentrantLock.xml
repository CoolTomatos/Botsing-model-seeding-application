<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="sX" action="epsilon" proba="0.4"/><transition target="s2" action="java.util.concurrent.locks.ReentrantLock.unlock()" proba="0.6"/></state><state id="s4"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s0"><transition target="s3" action="java.util.concurrent.locks.ReentrantLock.lock()" proba="0.38461538461538464"/><transition target="s4" action="java.util.concurrent.locks.ReentrantLock.newCondition()" proba="0.23076923076923078"/><transition target="s1" action="java.util.concurrent.locks.ReentrantLock.lockInterruptibly()" proba="0.3076923076923077"/><transition target="s2" action="java.util.concurrent.locks.ReentrantLock.unlock()" proba="0.07692307692307693"/></state><state id="s1"><transition target="s2" action="java.util.concurrent.locks.ReentrantLock.unlock()" proba="1.0"/></state><state id="s2"><transition target="sX" action="epsilon" proba="0.5"/><transition target="s2" action="java.util.concurrent.locks.ReentrantLock.unlock()" proba="0.5"/></state></states></ts>