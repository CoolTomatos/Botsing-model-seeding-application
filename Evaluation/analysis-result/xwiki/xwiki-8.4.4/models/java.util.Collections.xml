<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="java.util.Collections.emptyMap()" proba="0.1822429906542056"/><transition target="s4" action="java.util.Collections.emptyList()" proba="0.0514018691588785"/><transition target="s5" action="java.util.Collections.unmodifiableMap(java.util.Map)" proba="0.009345794392523364"/><transition target="sX" action="epsilon" proba="0.7289719626168224"/><transition target="s1" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.014018691588785047"/><transition target="s2" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.014018691588785047"/></state><state id="s4"><transition target="s3" action="java.util.Collections.emptyMap()" proba="0.022113022113022112"/><transition target="s4" action="java.util.Collections.emptyList()" proba="0.21375921375921375"/><transition target="s11" action="java.util.Collections.unmodifiableList(java.util.List)" proba="0.007371007371007371"/><transition target="s22" action="java.util.Collections.reverseOrder()" proba="0.002457002457002457"/><transition target="s10" action="java.util.Collections.emptySet()" proba="0.004914004914004914"/><transition target="s6" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="0.002457002457002457"/><transition target="s13" action="java.util.Collections.sort(java.util.List)" proba="0.004914004914004914"/><transition target="sX" action="epsilon" proba="0.714987714987715"/><transition target="s19" action="java.util.Collections.iterator()" proba="0.007371007371007371"/><transition target="s1" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.0171990171990172"/><transition target="s2" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.002457002457002457"/></state><state id="s5"><transition target="s3" action="java.util.Collections.emptyMap()" proba="0.10526315789473684"/><transition target="sX" action="epsilon" proba="0.8421052631578947"/><transition target="s14" action="java.util.Collections.unmodifiableSet(java.util.Set)" proba="0.05263157894736842"/></state><state id="s6"><transition target="s6" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="0.1"/><transition target="sX" action="epsilon" proba="0.9"/></state><state id="s7"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s8"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s9"><transition target="s4" action="java.util.Collections.emptyList()" proba="0.21052631578947367"/><transition target="sX" action="epsilon" proba="0.7894736842105263"/></state><state id="s20"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s11"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s22"><transition target="s6" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="1.0"/></state><state id="s10"><transition target="s10" action="java.util.Collections.emptySet()" proba="0.125"/><transition target="sX" action="epsilon" proba="0.8333333333333334"/><transition target="s18" action="java.util.Collections.singleton(java.lang.Object)" proba="0.041666666666666664"/></state><state id="s21"><transition target="s21" action="java.util.Collections.emptyIterator()" proba="0.25"/><transition target="sX" action="epsilon" proba="0.5"/><transition target="s2" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.25"/></state><state id="s13"><transition target="s4" action="java.util.Collections.emptyList()" proba="0.045454545454545456"/><transition target="s11" action="java.util.Collections.unmodifiableList(java.util.List)" proba="0.09090909090909091"/><transition target="s6" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="0.045454545454545456"/><transition target="sX" action="epsilon" proba="0.8181818181818182"/></state><state id="s12"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s15"><transition target="s4" action="java.util.Collections.emptyList()" proba="0.25"/><transition target="sX" action="epsilon" proba="0.5"/><transition target="s17" action="java.util.Collections.synchronizedList(java.util.List)" proba="0.25"/></state><state id="s14"><transition target="s10" action="java.util.Collections.emptySet()" proba="0.07142857142857142"/><transition target="sX" action="epsilon" proba="0.9285714285714286"/></state><state id="s17"><transition target="sX" action="epsilon" proba="0.5"/><transition target="s15" action="java.util.Collections.synchronizedMap(java.util.Map)" proba="0.25"/><transition target="s17" action="java.util.Collections.synchronizedList(java.util.List)" proba="0.25"/></state><state id="s16"><transition target="s4" action="java.util.Collections.emptyList()" proba="0.18181818181818182"/><transition target="sX" action="epsilon" proba="0.8181818181818182"/></state><state id="s19"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s18"><transition target="s4" action="java.util.Collections.emptyList()" proba="0.05"/><transition target="sX" action="epsilon" proba="0.4"/><transition target="s18" action="java.util.Collections.singleton(java.lang.Object)" proba="0.4"/><transition target="s1" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.15"/></state><state id="s0"><transition target="s3" action="java.util.Collections.emptyMap()" proba="0.20742637644046094"/><transition target="s4" action="java.util.Collections.emptyList()" proba="0.3725992317541613"/><transition target="s5" action="java.util.Collections.unmodifiableMap(java.util.Map)" proba="0.02176696542893726"/><transition target="s6" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="0.030729833546734954"/><transition target="s7" action="java.util.Collections.newSetFromMap(java.util.Map)" proba="0.0012804097311139564"/><transition target="s8" action="java.util.Collections.addAll(java.util.Collection,java.lang.Object[])" proba="0.005121638924455826"/><transition target="s9" action="java.util.Collections.reverse(java.util.List)" proba="0.024327784891165175"/><transition target="s20" action="java.util.Collections.min(java.util.Collection)" proba="0.0012804097311139564"/><transition target="s11" action="java.util.Collections.unmodifiableList(java.util.List)" proba="0.023047375160051217"/><transition target="s10" action="java.util.Collections.emptySet()" proba="0.023047375160051217"/><transition target="s21" action="java.util.Collections.emptyIterator()" proba="0.002560819462227913"/><transition target="s13" action="java.util.Collections.sort(java.util.List)" proba="0.02560819462227913"/><transition target="s12" action="java.util.Collections.enumeration(java.util.Collection)" proba="0.005121638924455826"/><transition target="s15" action="java.util.Collections.synchronizedMap(java.util.Map)" proba="0.0038412291933418692"/><transition target="s14" action="java.util.Collections.unmodifiableSet(java.util.Set)" proba="0.016645326504481434"/><transition target="s17" action="java.util.Collections.synchronizedList(java.util.List)" proba="0.002560819462227913"/><transition target="s16" action="java.util.Collections.unmodifiableCollection(java.util.Collection)" proba="0.014084507042253521"/><transition target="s18" action="java.util.Collections.singleton(java.lang.Object)" proba="0.012804097311139564"/><transition target="s1" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.11011523687580026"/><transition target="s2" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.09603072983354674"/></state><state id="s1"><transition target="s3" action="java.util.Collections.emptyMap()" proba="0.008130081300813009"/><transition target="s4" action="java.util.Collections.emptyList()" proba="0.06504065040650407"/><transition target="sX" action="epsilon" proba="0.6991869918699187"/><transition target="s18" action="java.util.Collections.singleton(java.lang.Object)" proba="0.008130081300813009"/><transition target="s1" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.16260162601626016"/><transition target="s2" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.056910569105691054"/></state><state id="s2"><transition target="s3" action="java.util.Collections.emptyMap()" proba="0.008928571428571428"/><transition target="s4" action="java.util.Collections.emptyList()" proba="0.008928571428571428"/><transition target="s21" action="java.util.Collections.emptyIterator()" proba="0.008928571428571428"/><transition target="sX" action="epsilon" proba="0.7142857142857143"/><transition target="s1" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.03571428571428571"/><transition target="s2" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.22321428571428573"/></state></states></ts>