<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="s4" action="net.sf.json.JSONArray.size()" proba="0.5"/><transition target="s6" action="net.sf.json.JSONArray.isEmpty()" proba="0.5"/></state><state id="s4"><transition target="s5" action="net.sf.json.JSONArray.get(int)" proba="0.3333333333333333"/><transition target="sX" action="epsilon" proba="0.6666666666666666"/></state><state id="s5"><transition target="s5" action="net.sf.json.JSONArray.get(int)" proba="0.5"/><transition target="sX" action="epsilon" proba="0.5"/></state><state id="s6"><transition target="s4" action="net.sf.json.JSONArray.size()" proba="1.0"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s0"><transition target="s4" action="net.sf.json.JSONArray.size()" proba="0.25"/><transition target="s1" action="net.sf.json.JSONArray.&lt;init>()" proba="0.75"/></state><state id="s1"><transition target="sX" action="epsilon" proba="0.3333333333333333"/><transition target="s2" action="net.sf.json.JSONArray.fromObject(java.lang.Object,net.sf.json.JsonConfig)" proba="0.6666666666666666"/></state><state id="s2"><transition target="s3" action="net.sf.json.JSONArray.isArray()" proba="1.0"/></state></states></ts>