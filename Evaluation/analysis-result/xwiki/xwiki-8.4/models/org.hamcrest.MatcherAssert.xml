<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s0"><transition target="s1" action="org.hamcrest.MatcherAssert.assertThat(java.lang.Object,org.hamcrest.Matcher)" proba="0.75"/><transition target="s2" action="org.hamcrest.MatcherAssert.assertThat(java.lang.String,java.lang.Object,org.hamcrest.Matcher)" proba="0.25"/></state><state id="s1"><transition target="sX" action="epsilon" proba="0.3333333333333333"/><transition target="s1" action="org.hamcrest.MatcherAssert.assertThat(java.lang.Object,org.hamcrest.Matcher)" proba="0.4444444444444444"/><transition target="s2" action="org.hamcrest.MatcherAssert.assertThat(java.lang.String,java.lang.Object,org.hamcrest.Matcher)" proba="0.2222222222222222"/></state><state id="s2"><transition target="sX" action="epsilon" proba="0.3333333333333333"/><transition target="s1" action="org.hamcrest.MatcherAssert.assertThat(java.lang.Object,org.hamcrest.Matcher)" proba="0.6666666666666666"/></state></states></ts>