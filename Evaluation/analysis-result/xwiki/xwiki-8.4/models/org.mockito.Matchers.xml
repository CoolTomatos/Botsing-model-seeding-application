<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="org.mockito.Matchers.same(java.lang.Object)" proba="0.5714285714285714"/><transition target="sX" action="epsilon" proba="0.14285714285714285"/><transition target="s2" action="org.mockito.Matchers.any(java.lang.Class)" proba="0.2857142857142857"/></state><state id="s4"><transition target="s2" action="org.mockito.Matchers.any(java.lang.Class)" proba="1.0"/></state><state id="s5"><transition target="s2" action="org.mockito.Matchers.any(java.lang.Class)" proba="1.0"/></state><state id="s6"><transition target="s2" action="org.mockito.Matchers.any(java.lang.Class)" proba="1.0"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s0"><transition target="s5" action="org.mockito.Matchers.anyString()" proba="0.0625"/><transition target="s1" action="org.mockito.Matchers.argThat(org.hamcrest.Matcher)" proba="0.1875"/><transition target="s2" action="org.mockito.Matchers.any(java.lang.Class)" proba="0.75"/></state><state id="s1"><transition target="sX" action="epsilon" proba="0.375"/><transition target="s1" action="org.mockito.Matchers.argThat(org.hamcrest.Matcher)" proba="0.625"/></state><state id="s2"><transition target="s3" action="org.mockito.Matchers.same(java.lang.Object)" proba="0.1"/><transition target="s4" action="org.mockito.Matchers.eq(java.lang.Object)" proba="0.06666666666666667"/><transition target="s6" action="org.mockito.Matchers.anyBoolean()" proba="0.03333333333333333"/><transition target="sX" action="epsilon" proba="0.4"/><transition target="s2" action="org.mockito.Matchers.any(java.lang.Class)" proba="0.4"/></state></states></ts>