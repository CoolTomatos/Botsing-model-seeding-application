<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="java.util.Collections.emptyMap()" proba="0.13793103448275862"/><transition target="s5" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.011494252873563218"/><transition target="s7" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.011494252873563218"/><transition target="sX" action="epsilon" proba="0.8045977011494253"/><transition target="s8" action="java.util.Collections.unmodifiableMap(java.util.Map)" proba="0.022988505747126436"/><transition target="s1" action="java.util.Collections.emptyList()" proba="0.011494252873563218"/></state><state id="s4"><transition target="s4" action="java.util.Collections.singleton(java.lang.Object)" proba="0.18181818181818182"/><transition target="s5" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.2727272727272727"/><transition target="sX" action="epsilon" proba="0.5454545454545454"/></state><state id="s5"><transition target="s4" action="java.util.Collections.singleton(java.lang.Object)" proba="0.01639344262295082"/><transition target="s5" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.11475409836065574"/><transition target="s7" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.01639344262295082"/><transition target="sX" action="epsilon" proba="0.7213114754098361"/><transition target="s1" action="java.util.Collections.emptyList()" proba="0.13114754098360656"/></state><state id="s6"><transition target="sX" action="epsilon" proba="0.8181818181818182"/><transition target="s1" action="java.util.Collections.emptyList()" proba="0.18181818181818182"/></state><state id="s7"><transition target="s5" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.02564102564102564"/><transition target="s10" action="java.util.Collections.emptyIterator()" proba="0.02564102564102564"/><transition target="s7" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.3333333333333333"/><transition target="sX" action="epsilon" proba="0.6153846153846154"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s8"><transition target="s3" action="java.util.Collections.emptyMap()" proba="0.10526315789473684"/><transition target="sX" action="epsilon" proba="0.8421052631578947"/><transition target="s9" action="java.util.Collections.unmodifiableSet(java.util.Set)" proba="0.05263157894736842"/></state><state id="s9"><transition target="sX" action="epsilon" proba="0.9166666666666666"/><transition target="s16" action="java.util.Collections.emptySet()" proba="0.08333333333333333"/></state><state id="s20"><transition target="s13" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="1.0"/></state><state id="s11"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s22"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s10"><transition target="s10" action="java.util.Collections.emptyIterator()" proba="0.25"/><transition target="s7" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.25"/><transition target="sX" action="epsilon" proba="0.5"/></state><state id="s21"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s13"><transition target="s13" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="0.10344827586206896"/><transition target="sX" action="epsilon" proba="0.896551724137931"/></state><state id="s12"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s15"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s14"><transition target="s11" action="java.util.Collections.unmodifiableList(java.util.List)" proba="0.1111111111111111"/><transition target="s13" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="0.05555555555555555"/><transition target="sX" action="epsilon" proba="0.7777777777777778"/><transition target="s1" action="java.util.Collections.emptyList()" proba="0.05555555555555555"/></state><state id="s17"><transition target="sX" action="epsilon" proba="0.5"/><transition target="s18" action="java.util.Collections.synchronizedList(java.util.List)" proba="0.25"/><transition target="s1" action="java.util.Collections.emptyList()" proba="0.25"/></state><state id="s16"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s19"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s18"><transition target="sX" action="epsilon" proba="0.5"/><transition target="s17" action="java.util.Collections.synchronizedMap(java.util.Map)" proba="0.5"/></state><state id="s0"><transition target="s3" action="java.util.Collections.emptyMap()" proba="0.1411530815109344"/><transition target="s4" action="java.util.Collections.singleton(java.lang.Object)" proba="0.015904572564612324"/><transition target="s5" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.08946322067594434"/><transition target="s6" action="java.util.Collections.unmodifiableCollection(java.util.Collection)" proba="0.02186878727634195"/><transition target="s7" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.04572564612326044"/><transition target="s8" action="java.util.Collections.unmodifiableMap(java.util.Map)" proba="0.033797216699801194"/><transition target="s9" action="java.util.Collections.unmodifiableSet(java.util.Set)" proba="0.02186878727634195"/><transition target="s11" action="java.util.Collections.unmodifiableList(java.util.List)" proba="0.03578528827037773"/><transition target="s22" action="java.util.Collections.newSetFromMap(java.util.Map)" proba="0.0019880715705765406"/><transition target="s10" action="java.util.Collections.emptyIterator()" proba="0.003976143141153081"/><transition target="s21" action="java.util.Collections.min(java.util.Collection)" proba="0.0019880715705765406"/><transition target="s13" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="0.04572564612326044"/><transition target="s12" action="java.util.Collections.addAll(java.util.Collection,java.lang.Object[])" proba="0.007952286282306162"/><transition target="s14" action="java.util.Collections.sort(java.util.List)" proba="0.03180914512922465"/><transition target="s17" action="java.util.Collections.synchronizedMap(java.util.Map)" proba="0.005964214711729622"/><transition target="s16" action="java.util.Collections.emptySet()" proba="0.02385685884691849"/><transition target="s19" action="java.util.Collections.enumeration(java.util.Collection)" proba="0.007952286282306162"/><transition target="s18" action="java.util.Collections.synchronizedList(java.util.List)" proba="0.0019880715705765406"/><transition target="s1" action="java.util.Collections.emptyList()" proba="0.4294234592445328"/><transition target="s2" action="java.util.Collections.reverse(java.util.List)" proba="0.03180914512922465"/></state><state id="s1"><transition target="s3" action="java.util.Collections.emptyMap()" proba="0.006711409395973154"/><transition target="s20" action="java.util.Collections.reverseOrder()" proba="0.003355704697986577"/><transition target="s11" action="java.util.Collections.unmodifiableList(java.util.List)" proba="0.010067114093959731"/><transition target="s5" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.013422818791946308"/><transition target="s13" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="0.003355704697986577"/><transition target="sX" action="epsilon" proba="0.7214765100671141"/><transition target="s15" action="java.util.Collections.iterator()" proba="0.010067114093959731"/><transition target="s14" action="java.util.Collections.sort(java.util.List)" proba="0.006711409395973154"/><transition target="s16" action="java.util.Collections.emptySet()" proba="0.006711409395973154"/><transition target="s1" action="java.util.Collections.emptyList()" proba="0.2181208053691275"/></state><state id="s2"><transition target="sX" action="epsilon" proba="0.75"/><transition target="s1" action="java.util.Collections.emptyList()" proba="0.25"/></state></states></ts>