<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="java.util.Map.size()" proba="0.08695652173913043"/><transition target="s4" action="java.util.Map.entrySet()" proba="0.15217391304347827"/><transition target="s11" action="java.util.Map.values()" proba="0.13043478260869565"/><transition target="s10" action="java.util.Map.isEmpty()" proba="0.021739130434782608"/><transition target="s7" action="java.util.Map.containsKey(java.lang.Object)" proba="0.043478260869565216"/><transition target="sX" action="epsilon" proba="0.4782608695652174"/><transition target="s9" action="java.util.Map.keySet()" proba="0.08695652173913043"/></state><state id="s4"><transition target="s5" action="java.util.Map.iterator()" proba="0.9887640449438202"/><transition target="sX" action="epsilon" proba="0.011235955056179775"/></state><state id="s5"><transition target="s4" action="java.util.Map.entrySet()" proba="0.005847953216374269"/><transition target="s11" action="java.util.Map.values()" proba="0.005847953216374269"/><transition target="s6" action="java.util.Map.clear()" proba="0.07602339181286549"/><transition target="s10" action="java.util.Map.isEmpty()" proba="0.005847953216374269"/><transition target="s7" action="java.util.Map.containsKey(java.lang.Object)" proba="0.017543859649122806"/><transition target="sX" action="epsilon" proba="0.7076023391812866"/><transition target="s8" action="java.util.Map.remove(java.lang.Object)" proba="0.017543859649122806"/><transition target="s14" action="java.util.Map.next()" proba="0.023391812865497075"/><transition target="s18" action="java.util.Map.hasNext()" proba="0.005847953216374269"/><transition target="s1" action="java.util.Map.put(java.lang.Object,java.lang.Object)" proba="0.017543859649122806"/><transition target="s2" action="java.util.Map.get(java.lang.Object)" proba="0.11695906432748537"/></state><state id="s6"><transition target="sX" action="epsilon" proba="0.7741935483870968"/><transition target="s8" action="java.util.Map.remove(java.lang.Object)" proba="0.03225806451612903"/><transition target="s9" action="java.util.Map.keySet()" proba="0.03225806451612903"/><transition target="s15" action="java.util.Map.putAll(java.util.Map)" proba="0.0967741935483871"/><transition target="s1" action="java.util.Map.put(java.lang.Object,java.lang.Object)" proba="0.06451612903225806"/></state><state id="s7"><transition target="s11" action="java.util.Map.values()" proba="0.015625"/><transition target="s10" action="java.util.Map.isEmpty()" proba="0.015625"/><transition target="sX" action="epsilon" proba="0.234375"/><transition target="s8" action="java.util.Map.remove(java.lang.Object)" proba="0.03125"/><transition target="s1" action="java.util.Map.put(java.lang.Object,java.lang.Object)" proba="0.28125"/><transition target="s2" action="java.util.Map.get(java.lang.Object)" proba="0.421875"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s8"><transition target="s3" action="java.util.Map.size()" proba="0.025"/><transition target="s11" action="java.util.Map.values()" proba="0.0125"/><transition target="s10" action="java.util.Map.isEmpty()" proba="0.0125"/><transition target="sX" action="epsilon" proba="0.6875"/><transition target="s8" action="java.util.Map.remove(java.lang.Object)" proba="0.1625"/><transition target="s1" action="java.util.Map.put(java.lang.Object,java.lang.Object)" proba="0.0875"/><transition target="s2" action="java.util.Map.get(java.lang.Object)" proba="0.0125"/></state><state id="s9"><transition target="s3" action="java.util.Map.size()" proba="0.015384615384615385"/><transition target="s5" action="java.util.Map.iterator()" proba="0.7230769230769231"/><transition target="sX" action="epsilon" proba="0.2"/><transition target="s16" action="java.util.Map.toString()" proba="0.015384615384615385"/><transition target="s18" action="java.util.Map.hasNext()" proba="0.015384615384615385"/><transition target="s2" action="java.util.Map.get(java.lang.Object)" proba="0.03076923076923077"/></state><state id="s11"><transition target="s3" action="java.util.Map.size()" proba="0.016129032258064516"/><transition target="s5" action="java.util.Map.iterator()" proba="0.5806451612903226"/><transition target="sX" action="epsilon" proba="0.3870967741935484"/><transition target="s17" action="java.util.Map.contains(java.lang.Object)" proba="0.016129032258064516"/></state><state id="s10"><transition target="s3" action="java.util.Map.size()" proba="0.03125"/><transition target="s4" action="java.util.Map.entrySet()" proba="0.125"/><transition target="s11" action="java.util.Map.values()" proba="0.03125"/><transition target="s10" action="java.util.Map.isEmpty()" proba="0.03125"/><transition target="sX" action="epsilon" proba="0.6875"/><transition target="s9" action="java.util.Map.keySet()" proba="0.0625"/><transition target="s1" action="java.util.Map.put(java.lang.Object,java.lang.Object)" proba="0.03125"/></state><state id="s13"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s12"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s15"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s14"><transition target="sX" action="epsilon" proba="0.8333333333333334"/><transition target="s2" action="java.util.Map.get(java.lang.Object)" proba="0.16666666666666666"/></state><state id="s17"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s16"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s18"><transition target="s14" action="java.util.Map.next()" proba="1.0"/></state><state id="s0"><transition target="s3" action="java.util.Map.size()" proba="0.033299697275479316"/><transition target="s4" action="java.util.Map.entrySet()" proba="0.07568113017154389"/><transition target="s6" action="java.util.Map.clear()" proba="0.018163471241170535"/><transition target="s7" action="java.util.Map.containsKey(java.lang.Object)" proba="0.05348133198789102"/><transition target="s8" action="java.util.Map.remove(java.lang.Object)" proba="0.03632694248234107"/><transition target="s9" action="java.util.Map.keySet()" proba="0.054490413723511606"/><transition target="s11" action="java.util.Map.values()" proba="0.04944500504540868"/><transition target="s10" action="java.util.Map.isEmpty()" proba="0.027245206861755803"/><transition target="s13" action="java.util.Map.hashCode()" proba="0.004036326942482341"/><transition target="s12" action="java.util.Map.equals(java.lang.Object)" proba="0.006054490413723511"/><transition target="s15" action="java.util.Map.putAll(java.util.Map)" proba="0.009081735620585268"/><transition target="s1" action="java.util.Map.put(java.lang.Object,java.lang.Object)" proba="0.17356205852674067"/><transition target="s2" action="java.util.Map.get(java.lang.Object)" proba="0.4591321897073663"/></state><state id="s1"><transition target="s3" action="java.util.Map.size()" proba="0.008733624454148471"/><transition target="s4" action="java.util.Map.entrySet()" proba="0.002183406113537118"/><transition target="s11" action="java.util.Map.values()" proba="0.004366812227074236"/><transition target="sX" action="epsilon" proba="0.5851528384279476"/><transition target="s8" action="java.util.Map.remove(java.lang.Object)" proba="0.021834061135371178"/><transition target="s9" action="java.util.Map.keySet()" proba="0.002183406113537118"/><transition target="s1" action="java.util.Map.put(java.lang.Object,java.lang.Object)" proba="0.34934497816593885"/><transition target="s2" action="java.util.Map.get(java.lang.Object)" proba="0.026200873362445413"/></state><state id="s2"><transition target="s4" action="java.util.Map.entrySet()" proba="0.0016"/><transition target="s11" action="java.util.Map.values()" proba="0.0016"/><transition target="s7" action="java.util.Map.containsKey(java.lang.Object)" proba="0.0096"/><transition target="sX" action="epsilon" proba="0.6336"/><transition target="s8" action="java.util.Map.remove(java.lang.Object)" proba="0.024"/><transition target="s9" action="java.util.Map.keySet()" proba="0.0048"/><transition target="s16" action="java.util.Map.toString()" proba="0.0016"/><transition target="s1" action="java.util.Map.put(java.lang.Object,java.lang.Object)" proba="0.152"/><transition target="s2" action="java.util.Map.get(java.lang.Object)" proba="0.1712"/></state></states></ts>