<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="s4" action="org.infinispan.configuration.cache.ConfigurationBuilder.strategy(org.infinispan.eviction.EvictionStrategy)" proba="0.5"/><transition target="s5" action="org.infinispan.configuration.cache.ConfigurationBuilder.maxEntries(int)" proba="0.5"/></state><state id="s4"><transition target="s3" action="org.infinispan.configuration.cache.ConfigurationBuilder.eviction()" proba="1.0"/></state><state id="s5"><transition target="s6" action="org.infinispan.configuration.cache.ConfigurationBuilder.expiration()" proba="1.0"/></state><state id="s6"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s7"><transition target="s8" action="org.infinispan.configuration.cache.ConfigurationBuilder.read(org.infinispan.configuration.cache.Configuration)" proba="1.0"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s8"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s0"><transition target="s3" action="org.infinispan.configuration.cache.ConfigurationBuilder.eviction()" proba="0.25"/><transition target="s7" action="org.infinispan.configuration.cache.ConfigurationBuilder.&lt;init>()" proba="0.25"/><transition target="s1" action="org.infinispan.configuration.cache.ConfigurationBuilder.persistence()" proba="0.25"/><transition target="s2" action="org.infinispan.configuration.cache.ConfigurationBuilder.build()" proba="0.25"/></state><state id="s1"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s2"><transition target="sX" action="epsilon" proba="1.0"/></state></states></ts>