<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="java.util.Collection.size()" proba="0.06349206349206349"/><transition target="sX" action="epsilon" proba="0.19047619047619047"/><transition target="s14" action="java.util.Collection.hasNext()" proba="0.015873015873015872"/><transition target="s2" action="java.util.Collection.iterator()" proba="0.7301587301587301"/></state><state id="s4"><transition target="s6" action="java.util.Collection.add(java.lang.Object)" proba="0.16666666666666666"/><transition target="sX" action="epsilon" proba="0.8333333333333334"/></state><state id="s5"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s6"><transition target="s5" action="java.util.Collection.addAll(java.util.Collection)" proba="0.047619047619047616"/><transition target="s6" action="java.util.Collection.add(java.lang.Object)" proba="0.09523809523809523"/><transition target="sX" action="epsilon" proba="0.8571428571428571"/></state><state id="s7"><transition target="s6" action="java.util.Collection.add(java.lang.Object)" proba="0.05"/><transition target="s7" action="java.util.Collection.contains(java.lang.Object)" proba="0.1"/><transition target="sX" action="epsilon" proba="0.75"/><transition target="s12" action="java.util.Collection.toLowerCase()" proba="0.05"/><transition target="s2" action="java.util.Collection.iterator()" proba="0.05"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s8"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s9"><transition target="s10" action="java.util.Collection.getId()" proba="1.0"/></state><state id="s11"><transition target="s5" action="java.util.Collection.addAll(java.util.Collection)" proba="1.0"/></state><state id="s10"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s13"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s12"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s15"><transition target="s3" action="java.util.Collection.size()" proba="0.5"/><transition target="sX" action="epsilon" proba="0.5"/></state><state id="s14"><transition target="s4" action="java.util.Collection.next()" proba="1.0"/></state><state id="s0"><transition target="s3" action="java.util.Collection.size()" proba="0.22935779816513763"/><transition target="s5" action="java.util.Collection.addAll(java.util.Collection)" proba="0.027522935779816515"/><transition target="s11" action="java.util.Collection.clear()" proba="0.0045871559633027525"/><transition target="s6" action="java.util.Collection.add(java.lang.Object)" proba="0.0779816513761468"/><transition target="s7" action="java.util.Collection.contains(java.lang.Object)" proba="0.07339449541284404"/><transition target="s13" action="java.util.Collection.remove(java.lang.Object)" proba="0.013761467889908258"/><transition target="s15" action="java.util.Collection.toArray()" proba="0.009174311926605505"/><transition target="s1" action="java.util.Collection.isEmpty()" proba="0.14678899082568808"/><transition target="s2" action="java.util.Collection.iterator()" proba="0.41743119266055045"/></state><state id="s1"><transition target="s3" action="java.util.Collection.size()" proba="0.21875"/><transition target="sX" action="epsilon" proba="0.5"/><transition target="s2" action="java.util.Collection.iterator()" proba="0.28125"/></state><state id="s2"><transition target="s3" action="java.util.Collection.size()" proba="0.006802721088435374"/><transition target="s4" action="java.util.Collection.next()" proba="0.034013605442176874"/><transition target="s7" action="java.util.Collection.contains(java.lang.Object)" proba="0.013605442176870748"/><transition target="sX" action="epsilon" proba="0.9319727891156463"/><transition target="s8" action="java.util.Collection.createInputFilterStream(java.util.Map)" proba="0.006802721088435374"/><transition target="s9" action="java.util.Collection.isValid(java.lang.String)" proba="0.006802721088435374"/></state></states></ts>