<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s4"><transition target="s4" action="java.lang.Character.valueOf(char)" proba="0.6933333333333334"/><transition target="sX" action="epsilon" proba="0.30666666666666664"/></state><state id="s5"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s6"><transition target="s6" action="java.lang.Character.charValue()" proba="0.25"/><transition target="sX" action="epsilon" proba="0.75"/></state><state id="s7"><transition target="sX" action="epsilon" proba="0.8333333333333334"/><transition target="s9" action="java.lang.Character.isLetter(char)" proba="0.16666666666666666"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s8"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s9"><transition target="s10" action="java.lang.Character.isDigit(char)" proba="0.1111111111111111"/><transition target="s13" action="java.lang.Character.forDigit(int,int)" proba="0.1111111111111111"/><transition target="sX" action="epsilon" proba="0.4444444444444444"/><transition target="s2" action="java.lang.Character.isLetterOrDigit(char)" proba="0.3333333333333333"/></state><state id="s11"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s10"><transition target="sX" action="epsilon" proba="0.6666666666666666"/><transition target="s1" action="java.lang.Character.isWhitespace(char)" proba="0.3333333333333333"/></state><state id="s13"><transition target="s9" action="java.lang.Character.isLetter(char)" proba="1.0"/></state><state id="s12"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s14"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s0"><transition target="s3" action="java.lang.Character.toLowerCase(char)" proba="0.04411764705882353"/><transition target="s4" action="java.lang.Character.valueOf(char)" proba="0.3382352941176471"/><transition target="s5" action="java.lang.Character.toUpperCase(char)" proba="0.058823529411764705"/><transition target="s6" action="java.lang.Character.charValue()" proba="0.04411764705882353"/><transition target="s7" action="java.lang.Character.isSpaceChar(char)" proba="0.07352941176470588"/><transition target="s8" action="java.lang.Character.toChars(int)" proba="0.014705882352941176"/><transition target="s9" action="java.lang.Character.isLetter(char)" proba="0.08823529411764706"/><transition target="s11" action="java.lang.Character.digit(char,int)" proba="0.014705882352941176"/><transition target="s10" action="java.lang.Character.isDigit(char)" proba="0.014705882352941176"/><transition target="s13" action="java.lang.Character.forDigit(int,int)" proba="0.014705882352941176"/><transition target="s12" action="java.lang.Character.isJavaIdentifierPart(int)" proba="0.014705882352941176"/><transition target="s14" action="java.lang.Character.isUpperCase(char)" proba="0.014705882352941176"/><transition target="s1" action="java.lang.Character.isWhitespace(char)" proba="0.23529411764705882"/><transition target="s2" action="java.lang.Character.isLetterOrDigit(char)" proba="0.029411764705882353"/></state><state id="s1"><transition target="s7" action="java.lang.Character.isSpaceChar(char)" proba="0.05263157894736842"/><transition target="sX" action="epsilon" proba="0.8421052631578947"/><transition target="s1" action="java.lang.Character.isWhitespace(char)" proba="0.10526315789473684"/></state><state id="s2"><transition target="s10" action="java.lang.Character.isDigit(char)" proba="0.2"/><transition target="sX" action="epsilon" proba="0.8"/></state></states></ts>