<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="sX" action="epsilon" proba="0.5"/><transition target="s2" action="java.util.HashMap.put(java.lang.Object,java.lang.Object)" proba="0.5"/></state><state id="s4"><transition target="s4" action="java.util.HashMap.get(java.lang.Object)" proba="0.12195121951219512"/><transition target="s11" action="java.util.HashMap.entrySet()" proba="0.04878048780487805"/><transition target="s7" action="java.util.HashMap.remove(java.lang.Object)" proba="0.024390243902439025"/><transition target="sX" action="epsilon" proba="0.2926829268292683"/><transition target="s2" action="java.util.HashMap.put(java.lang.Object,java.lang.Object)" proba="0.5121951219512195"/></state><state id="s5"><transition target="s11" action="java.util.HashMap.entrySet()" proba="0.18181818181818182"/><transition target="s5" action="java.util.HashMap.size()" proba="0.18181818181818182"/><transition target="s13" action="java.util.HashMap.keySet()" proba="0.2727272727272727"/><transition target="sX" action="epsilon" proba="0.36363636363636365"/></state><state id="s6"><transition target="s4" action="java.util.HashMap.get(java.lang.Object)" proba="0.1"/><transition target="sX" action="epsilon" proba="0.7"/><transition target="s14" action="java.util.HashMap.containsKey(java.lang.Object)" proba="0.1"/><transition target="s2" action="java.util.HashMap.put(java.lang.Object,java.lang.Object)" proba="0.1"/></state><state id="s7"><transition target="sX" action="epsilon" proba="0.5"/><transition target="s2" action="java.util.HashMap.put(java.lang.Object,java.lang.Object)" proba="0.5"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s8"><transition target="sX" action="epsilon" proba="0.25"/><transition target="s9" action="java.util.HashMap.iterator()" proba="0.75"/></state><state id="s9"><transition target="s4" action="java.util.HashMap.get(java.lang.Object)" proba="0.14285714285714285"/><transition target="s13" action="java.util.HashMap.keySet()" proba="0.14285714285714285"/><transition target="sX" action="epsilon" proba="0.7142857142857143"/></state><state id="s11"><transition target="s9" action="java.util.HashMap.iterator()" proba="1.0"/></state><state id="s10"><transition target="s6" action="java.util.HashMap.putAll(java.util.Map)" proba="0.125"/><transition target="s12" action="java.util.HashMap.isEmpty()" proba="0.125"/><transition target="s8" action="java.util.HashMap.values()" proba="0.125"/><transition target="s1" action="java.util.HashMap.&lt;init>()" proba="0.125"/><transition target="s2" action="java.util.HashMap.put(java.lang.Object,java.lang.Object)" proba="0.5"/></state><state id="s13"><transition target="s5" action="java.util.HashMap.size()" proba="0.42857142857142855"/><transition target="s9" action="java.util.HashMap.iterator()" proba="0.5714285714285714"/></state><state id="s12"><transition target="s11" action="java.util.HashMap.entrySet()" proba="0.16666666666666666"/><transition target="s5" action="java.util.HashMap.size()" proba="0.3333333333333333"/><transition target="sX" action="epsilon" proba="0.5"/></state><state id="s14"><transition target="s4" action="java.util.HashMap.get(java.lang.Object)" proba="0.45454545454545453"/><transition target="s2" action="java.util.HashMap.put(java.lang.Object,java.lang.Object)" proba="0.5454545454545454"/></state><state id="s0"><transition target="s3" action="java.util.HashMap.&lt;init>(int)" proba="0.0182648401826484"/><transition target="s4" action="java.util.HashMap.get(java.lang.Object)" proba="0.0091324200913242"/><transition target="s10" action="java.util.HashMap.&lt;init>(java.util.Map)" proba="0.0365296803652968"/><transition target="s14" action="java.util.HashMap.containsKey(java.lang.Object)" proba="0.0091324200913242"/><transition target="s1" action="java.util.HashMap.&lt;init>()" proba="0.9223744292237442"/><transition target="s2" action="java.util.HashMap.put(java.lang.Object,java.lang.Object)" proba="0.0045662100456621"/></state><state id="s1"><transition target="s4" action="java.util.HashMap.get(java.lang.Object)" proba="0.09313725490196079"/><transition target="s11" action="java.util.HashMap.entrySet()" proba="0.004901960784313725"/><transition target="s5" action="java.util.HashMap.size()" proba="0.004901960784313725"/><transition target="s6" action="java.util.HashMap.putAll(java.util.Map)" proba="0.024509803921568627"/><transition target="sX" action="epsilon" proba="0.16176470588235295"/><transition target="s8" action="java.util.HashMap.values()" proba="0.00980392156862745"/><transition target="s12" action="java.util.HashMap.isEmpty()" proba="0.0196078431372549"/><transition target="s14" action="java.util.HashMap.containsKey(java.lang.Object)" proba="0.024509803921568627"/><transition target="s1" action="java.util.HashMap.&lt;init>()" proba="0.004901960784313725"/><transition target="s2" action="java.util.HashMap.put(java.lang.Object,java.lang.Object)" proba="0.6519607843137255"/></state><state id="s2"><transition target="s4" action="java.util.HashMap.get(java.lang.Object)" proba="0.020172910662824207"/><transition target="s5" action="java.util.HashMap.size()" proba="0.008645533141210375"/><transition target="s11" action="java.util.HashMap.entrySet()" proba="0.002881844380403458"/><transition target="s6" action="java.util.HashMap.putAll(java.util.Map)" proba="0.011527377521613832"/><transition target="s13" action="java.util.HashMap.keySet()" proba="0.005763688760806916"/><transition target="s7" action="java.util.HashMap.remove(java.lang.Object)" proba="0.002881844380403458"/><transition target="sX" action="epsilon" proba="0.4207492795389049"/><transition target="s8" action="java.util.HashMap.values()" proba="0.002881844380403458"/><transition target="s12" action="java.util.HashMap.isEmpty()" proba="0.002881844380403458"/><transition target="s14" action="java.util.HashMap.containsKey(java.lang.Object)" proba="0.008645533141210375"/><transition target="s2" action="java.util.HashMap.put(java.lang.Object,java.lang.Object)" proba="0.5129682997118156"/></state></states></ts>