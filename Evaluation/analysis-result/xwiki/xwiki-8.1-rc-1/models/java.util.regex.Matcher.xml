<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s4"><transition target="s5" action="java.util.regex.Matcher.start()" proba="0.08695652173913043"/><transition target="s17" action="java.util.regex.Matcher.groupCount()" proba="0.08695652173913043"/><transition target="s2" action="java.util.regex.Matcher.group(int)" proba="0.8260869565217391"/></state><state id="s5"><transition target="s6" action="java.util.regex.Matcher.end()" proba="0.25"/><transition target="sX" action="epsilon" proba="0.5"/><transition target="s2" action="java.util.regex.Matcher.group(int)" proba="0.25"/></state><state id="s6"><transition target="s5" action="java.util.regex.Matcher.start()" proba="0.16666666666666666"/><transition target="sX" action="epsilon" proba="0.6666666666666666"/><transition target="s19" action="java.util.regex.Matcher.group()" proba="0.16666666666666666"/></state><state id="s7"><transition target="s7" action="java.util.regex.Matcher.appendReplacement(java.lang.StringBuffer,java.lang.String)" proba="0.5"/><transition target="s8" action="java.util.regex.Matcher.appendTail(java.lang.StringBuffer)" proba="0.5"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s8"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s9"><transition target="s6" action="java.util.regex.Matcher.end()" proba="0.25"/><transition target="sX" action="epsilon" proba="0.5"/><transition target="s14" action="java.util.regex.Matcher.start(int)" proba="0.25"/></state><state id="s11"><transition target="s12" action="java.util.regex.Matcher.end(int)" proba="1.0"/></state><state id="s10"><transition target="s2" action="java.util.regex.Matcher.group(int)" proba="1.0"/></state><state id="s13"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s12"><transition target="s2" action="java.util.regex.Matcher.group(int)" proba="1.0"/></state><state id="s15"><transition target="sX" action="epsilon" proba="0.6666666666666666"/><transition target="s19" action="java.util.regex.Matcher.group()" proba="0.3333333333333333"/></state><state id="s14"><transition target="s12" action="java.util.regex.Matcher.end(int)" proba="0.5"/><transition target="s14" action="java.util.regex.Matcher.start(int)" proba="0.25"/><transition target="s2" action="java.util.regex.Matcher.group(int)" proba="0.25"/></state><state id="s17"><transition target="s14" action="java.util.regex.Matcher.start(int)" proba="1.0"/></state><state id="s16"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s19"><transition target="s15" action="java.util.regex.Matcher.charAt(int)" proba="1.0"/></state><state id="s18"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s0"><transition target="s4" action="java.util.regex.Matcher.find()" proba="0.5"/><transition target="s13" action="java.util.regex.Matcher.replaceAll(java.lang.String)" proba="0.08695652173913043"/><transition target="s9" action="java.util.regex.Matcher.lookingAt()" proba="0.08695652173913043"/><transition target="s1" action="java.util.regex.Matcher.matches()" proba="0.32608695652173914"/></state><state id="s1"><transition target="sX" action="epsilon" proba="0.1875"/><transition target="s2" action="java.util.regex.Matcher.group(int)" proba="0.8125"/></state><state id="s2"><transition target="s3" action="java.util.regex.Matcher.reset(java.lang.CharSequence)" proba="0.015873015873015872"/><transition target="s11" action="java.util.regex.Matcher.length()" proba="0.015873015873015872"/><transition target="s5" action="java.util.regex.Matcher.start()" proba="0.015873015873015872"/><transition target="s6" action="java.util.regex.Matcher.end()" proba="0.06349206349206349"/><transition target="s10" action="java.util.regex.Matcher.lastIndexOf(java.lang.String)" proba="0.015873015873015872"/><transition target="s7" action="java.util.regex.Matcher.appendReplacement(java.lang.StringBuffer,java.lang.String)" proba="0.015873015873015872"/><transition target="sX" action="epsilon" proba="0.38095238095238093"/><transition target="s15" action="java.util.regex.Matcher.charAt(int)" proba="0.015873015873015872"/><transition target="s16" action="java.util.regex.Matcher.trim()" proba="0.031746031746031744"/><transition target="s18" action="java.util.regex.Matcher.split(java.lang.String)" proba="0.015873015873015872"/><transition target="s1" action="java.util.regex.Matcher.matches()" proba="0.015873015873015872"/><transition target="s2" action="java.util.regex.Matcher.group(int)" proba="0.3968253968253968"/></state></states></ts>