<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="sX" action="epsilon" proba="0.42105263157894735"/><transition target="s1" action="java.util.Collection.iterator()" proba="0.39473684210526316"/><transition target="s2" action="java.util.Collection.size()" proba="0.18421052631578946"/></state><state id="s4"><transition target="s4" action="java.util.Collection.contains(java.lang.Object)" proba="0.09523809523809523"/><transition target="s6" action="java.util.Collection.add(java.lang.Object)" proba="0.047619047619047616"/><transition target="sX" action="epsilon" proba="0.7619047619047619"/><transition target="s9" action="java.util.Collection.toLowerCase()" proba="0.047619047619047616"/><transition target="s1" action="java.util.Collection.iterator()" proba="0.047619047619047616"/></state><state id="s5"><transition target="s6" action="java.util.Collection.add(java.lang.Object)" proba="0.1111111111111111"/><transition target="sX" action="epsilon" proba="0.8888888888888888"/></state><state id="s6"><transition target="s3" action="java.util.Collection.isEmpty()" proba="0.045454545454545456"/><transition target="s6" action="java.util.Collection.add(java.lang.Object)" proba="0.09090909090909091"/><transition target="sX" action="epsilon" proba="0.8181818181818182"/><transition target="s8" action="java.util.Collection.addAll(java.util.Collection)" proba="0.045454545454545456"/></state><state id="s7"><transition target="sX" action="epsilon" proba="0.5"/><transition target="s2" action="java.util.Collection.size()" proba="0.5"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s8"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s9"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s11"><transition target="s12" action="java.util.Collection.getId()" proba="1.0"/></state><state id="s10"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s13"><transition target="s8" action="java.util.Collection.addAll(java.util.Collection)" proba="1.0"/></state><state id="s12"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s15"><transition target="s5" action="java.util.Collection.next()" proba="1.0"/></state><state id="s14"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s0"><transition target="s3" action="java.util.Collection.isEmpty()" proba="0.15611814345991562"/><transition target="s4" action="java.util.Collection.contains(java.lang.Object)" proba="0.07172995780590717"/><transition target="s6" action="java.util.Collection.add(java.lang.Object)" proba="0.0759493670886076"/><transition target="s10" action="java.util.Collection.remove(java.lang.Object)" proba="0.012658227848101266"/><transition target="s7" action="java.util.Collection.toArray()" proba="0.008438818565400843"/><transition target="s13" action="java.util.Collection.clear()" proba="0.004219409282700422"/><transition target="s8" action="java.util.Collection.addAll(java.util.Collection)" proba="0.02531645569620253"/><transition target="s1" action="java.util.Collection.iterator()" proba="0.4092827004219409"/><transition target="s2" action="java.util.Collection.size()" proba="0.23628691983122363"/></state><state id="s1"><transition target="s4" action="java.util.Collection.contains(java.lang.Object)" proba="0.012121212121212121"/><transition target="s5" action="java.util.Collection.next()" proba="0.048484848484848485"/><transition target="s11" action="java.util.Collection.isValid(java.lang.String)" proba="0.006060606060606061"/><transition target="sX" action="epsilon" proba="0.9212121212121213"/><transition target="s14" action="java.util.Collection.createInputFilterStream(java.util.Map)" proba="0.006060606060606061"/><transition target="s2" action="java.util.Collection.size()" proba="0.006060606060606061"/></state><state id="s2"><transition target="sX" action="epsilon" proba="0.17391304347826086"/><transition target="s15" action="java.util.Collection.hasNext()" proba="0.014492753623188406"/><transition target="s1" action="java.util.Collection.iterator()" proba="0.7536231884057971"/><transition target="s2" action="java.util.Collection.size()" proba="0.057971014492753624"/></state></states></ts>