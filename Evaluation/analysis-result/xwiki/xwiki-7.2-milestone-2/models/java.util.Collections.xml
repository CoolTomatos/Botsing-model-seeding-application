<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="java.util.Collections.emptyMap()" proba="0.18421052631578946"/><transition target="s4" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.02631578947368421"/><transition target="s10" action="java.util.Collections.unmodifiableMap(java.util.Map)" proba="0.010526315789473684"/><transition target="sX" action="epsilon" proba="0.7315789473684211"/><transition target="s1" action="java.util.Collections.emptyList()" proba="0.031578947368421054"/><transition target="s2" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.015789473684210527"/></state><state id="s4"><transition target="s3" action="java.util.Collections.emptyMap()" proba="0.007874015748031496"/><transition target="s4" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.1732283464566929"/><transition target="sX" action="epsilon" proba="0.7165354330708661"/><transition target="s14" action="java.util.Collections.singleton(java.lang.Object)" proba="0.007874015748031496"/><transition target="s1" action="java.util.Collections.emptyList()" proba="0.047244094488188976"/><transition target="s2" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.047244094488188976"/></state><state id="s5"><transition target="s5" action="java.util.Collections.emptyIterator()" proba="0.25"/><transition target="sX" action="epsilon" proba="0.5"/><transition target="s2" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.25"/></state><state id="s6"><transition target="sX" action="epsilon" proba="0.9230769230769231"/><transition target="s8" action="java.util.Collections.emptySet()" proba="0.07692307692307693"/></state><state id="s7"><transition target="s7" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="0.1"/><transition target="sX" action="epsilon" proba="0.9"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s8"><transition target="sX" action="epsilon" proba="0.8148148148148148"/><transition target="s8" action="java.util.Collections.emptySet()" proba="0.14814814814814814"/><transition target="s14" action="java.util.Collections.singleton(java.lang.Object)" proba="0.037037037037037035"/></state><state id="s9"><transition target="s11" action="java.util.Collections.unmodifiableList(java.util.List)" proba="0.10526315789473684"/><transition target="s7" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="0.05263157894736842"/><transition target="sX" action="epsilon" proba="0.8421052631578947"/></state><state id="s20"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s11"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s22"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s10"><transition target="s3" action="java.util.Collections.emptyMap()" proba="0.125"/><transition target="sX" action="epsilon" proba="0.875"/></state><state id="s21"><transition target="s7" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="1.0"/></state><state id="s13"><transition target="sX" action="epsilon" proba="0.7647058823529411"/><transition target="s1" action="java.util.Collections.emptyList()" proba="0.23529411764705882"/></state><state id="s12"><transition target="sX" action="epsilon" proba="0.6"/><transition target="s17" action="java.util.Collections.synchronizedList(java.util.List)" proba="0.2"/><transition target="s1" action="java.util.Collections.emptyList()" proba="0.2"/></state><state id="s15"><transition target="sX" action="epsilon" proba="0.9090909090909091"/><transition target="s1" action="java.util.Collections.emptyList()" proba="0.09090909090909091"/></state><state id="s14"><transition target="s4" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.125"/><transition target="sX" action="epsilon" proba="0.5"/><transition target="s14" action="java.util.Collections.singleton(java.lang.Object)" proba="0.2916666666666667"/><transition target="s1" action="java.util.Collections.emptyList()" proba="0.08333333333333333"/></state><state id="s17"><transition target="sX" action="epsilon" proba="0.5"/><transition target="s12" action="java.util.Collections.synchronizedMap(java.util.Map)" proba="0.25"/><transition target="s17" action="java.util.Collections.synchronizedList(java.util.List)" proba="0.25"/></state><state id="s16"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s19"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s18"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s0"><transition target="s3" action="java.util.Collections.emptyMap()" proba="0.20055325034578148"/><transition target="s4" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.12171507607192254"/><transition target="s5" action="java.util.Collections.emptyIterator()" proba="0.0027662517289073307"/><transition target="s6" action="java.util.Collections.unmodifiableSet(java.util.Set)" proba="0.017980636237897647"/><transition target="s7" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="0.03319502074688797"/><transition target="s8" action="java.util.Collections.emptySet()" proba="0.02627939142461964"/><transition target="s9" action="java.util.Collections.sort(java.util.List)" proba="0.02351313969571231"/><transition target="s20" action="java.util.Collections.newSetFromMap(java.util.Map)" proba="0.0013831258644536654"/><transition target="s11" action="java.util.Collections.unmodifiableList(java.util.List)" proba="0.013831258644536652"/><transition target="s22" action="java.util.Collections.min(java.util.Collection)" proba="0.0013831258644536654"/><transition target="s10" action="java.util.Collections.unmodifiableMap(java.util.Map)" proba="0.019363762102351315"/><transition target="s13" action="java.util.Collections.reverse(java.util.List)" proba="0.02351313969571231"/><transition target="s12" action="java.util.Collections.synchronizedMap(java.util.Map)" proba="0.005532503457814661"/><transition target="s15" action="java.util.Collections.unmodifiableCollection(java.util.Collection)" proba="0.015214384508990318"/><transition target="s14" action="java.util.Collections.singleton(java.lang.Object)" proba="0.02074688796680498"/><transition target="s17" action="java.util.Collections.synchronizedList(java.util.List)" proba="0.0027662517289073307"/><transition target="s16" action="java.util.Collections.addAll(java.util.Collection,java.lang.Object[])" proba="0.005532503457814661"/><transition target="s18" action="java.util.Collections.enumeration(java.util.Collection)" proba="0.0027662517289073307"/><transition target="s1" action="java.util.Collections.emptyList()" proba="0.35684647302904565"/><transition target="s2" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.10511756569847856"/></state><state id="s1"><transition target="s3" action="java.util.Collections.emptyMap()" proba="0.019444444444444445"/><transition target="s4" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.013888888888888888"/><transition target="s11" action="java.util.Collections.unmodifiableList(java.util.List)" proba="0.008333333333333333"/><transition target="s21" action="java.util.Collections.reverseOrder()" proba="0.002777777777777778"/><transition target="s7" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="0.002777777777777778"/><transition target="sX" action="epsilon" proba="0.7055555555555556"/><transition target="s8" action="java.util.Collections.emptySet()" proba="0.008333333333333333"/><transition target="s9" action="java.util.Collections.sort(java.util.List)" proba="0.005555555555555556"/><transition target="s19" action="java.util.Collections.iterator()" proba="0.005555555555555556"/><transition target="s1" action="java.util.Collections.emptyList()" proba="0.22777777777777777"/></state><state id="s2"><transition target="s4" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.036036036036036036"/><transition target="s5" action="java.util.Collections.emptyIterator()" proba="0.009009009009009009"/><transition target="sX" action="epsilon" proba="0.7297297297297297"/><transition target="s2" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.22522522522522523"/></state></states></ts>