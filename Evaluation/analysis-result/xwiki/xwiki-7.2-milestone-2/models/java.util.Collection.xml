<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="java.util.Collection.size()" proba="0.05434782608695652"/><transition target="s11" action="java.util.Collection.containsAll(java.util.Collection)" proba="0.021739130434782608"/><transition target="s13" action="java.util.Collection.hasNext()" proba="0.010869565217391304"/><transition target="sX" action="epsilon" proba="0.2391304347826087"/><transition target="s8" action="java.util.Collection.toArray()" proba="0.010869565217391304"/><transition target="s9" action="java.util.Collection.contains(java.lang.Object)" proba="0.05434782608695652"/><transition target="s17" action="java.util.Collection.toArray(java.lang.Object[])" proba="0.010869565217391304"/><transition target="s2" action="java.util.Collection.iterator()" proba="0.5978260869565217"/></state><state id="s4"><transition target="s7" action="java.util.Collection.add(java.lang.Object)" proba="0.18181818181818182"/><transition target="sX" action="epsilon" proba="0.8181818181818182"/></state><state id="s5"><transition target="sX" action="epsilon" proba="0.75"/><transition target="s1" action="java.util.Collection.isEmpty()" proba="0.25"/></state><state id="s6"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s7"><transition target="s3" action="java.util.Collection.size()" proba="0.038461538461538464"/><transition target="s10" action="java.util.Collection.addAll(java.util.Collection)" proba="0.038461538461538464"/><transition target="s7" action="java.util.Collection.add(java.lang.Object)" proba="0.11538461538461539"/><transition target="sX" action="epsilon" proba="0.8076923076923077"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s8"><transition target="s3" action="java.util.Collection.size()" proba="0.3333333333333333"/><transition target="sX" action="epsilon" proba="0.6666666666666666"/></state><state id="s9"><transition target="s3" action="java.util.Collection.size()" proba="0.05263157894736842"/><transition target="s5" action="java.util.Collection.remove(java.lang.Object)" proba="0.02631578947368421"/><transition target="s7" action="java.util.Collection.add(java.lang.Object)" proba="0.02631578947368421"/><transition target="sX" action="epsilon" proba="0.5"/><transition target="s9" action="java.util.Collection.contains(java.lang.Object)" proba="0.34210526315789475"/><transition target="s14" action="java.util.Collection.toLowerCase()" proba="0.02631578947368421"/><transition target="s2" action="java.util.Collection.iterator()" proba="0.02631578947368421"/></state><state id="s11"><transition target="s11" action="java.util.Collection.containsAll(java.util.Collection)" proba="0.5"/><transition target="sX" action="epsilon" proba="0.5"/></state><state id="s10"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s13"><transition target="s4" action="java.util.Collection.next()" proba="1.0"/></state><state id="s12"><transition target="s10" action="java.util.Collection.addAll(java.util.Collection)" proba="1.0"/></state><state id="s15"><transition target="s16" action="java.util.Collection.getId()" proba="1.0"/></state><state id="s14"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s17"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s16"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s0"><transition target="s3" action="java.util.Collection.size()" proba="0.2490842490842491"/><transition target="s5" action="java.util.Collection.remove(java.lang.Object)" proba="0.01098901098901099"/><transition target="s10" action="java.util.Collection.addAll(java.util.Collection)" proba="0.02197802197802198"/><transition target="s7" action="java.util.Collection.add(java.lang.Object)" proba="0.07326007326007326"/><transition target="s8" action="java.util.Collection.toArray()" proba="0.007326007326007326"/><transition target="s12" action="java.util.Collection.clear()" proba="0.003663003663003663"/><transition target="s9" action="java.util.Collection.contains(java.lang.Object)" proba="0.06593406593406594"/><transition target="s1" action="java.util.Collection.isEmpty()" proba="0.16483516483516483"/><transition target="s2" action="java.util.Collection.iterator()" proba="0.40293040293040294"/></state><state id="s1"><transition target="s3" action="java.util.Collection.size()" proba="0.30434782608695654"/><transition target="sX" action="epsilon" proba="0.45652173913043476"/><transition target="s9" action="java.util.Collection.contains(java.lang.Object)" proba="0.021739130434782608"/><transition target="s2" action="java.util.Collection.iterator()" proba="0.21739130434782608"/></state><state id="s2"><transition target="s3" action="java.util.Collection.size()" proba="0.005681818181818182"/><transition target="s4" action="java.util.Collection.next()" proba="0.056818181818181816"/><transition target="s6" action="java.util.Collection.createInputFilterStream(java.util.Map)" proba="0.005681818181818182"/><transition target="sX" action="epsilon" proba="0.9204545454545454"/><transition target="s9" action="java.util.Collection.contains(java.lang.Object)" proba="0.005681818181818182"/><transition target="s15" action="java.util.Collection.isValid(java.lang.String)" proba="0.005681818181818182"/></state></states></ts>