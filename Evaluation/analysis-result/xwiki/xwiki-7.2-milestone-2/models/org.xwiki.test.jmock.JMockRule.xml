<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s4"><transition target="s4" action="org.xwiki.test.jmock.JMockRule.mock(java.lang.Class,java.lang.String)" proba="0.5"/><transition target="s1" action="org.xwiki.test.jmock.JMockRule.checking(org.jmock.internal.ExpectationBuilder)" proba="0.5"/></state><state id="s5"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s0"><transition target="s3" action="org.xwiki.test.jmock.JMockRule.assertIsSatisfied()" proba="0.13333333333333333"/><transition target="s4" action="org.xwiki.test.jmock.JMockRule.mock(java.lang.Class,java.lang.String)" proba="0.06666666666666667"/><transition target="s5" action="org.xwiki.test.jmock.JMockRule.states(java.lang.String)" proba="0.06666666666666667"/><transition target="s1" action="org.xwiki.test.jmock.JMockRule.checking(org.jmock.internal.ExpectationBuilder)" proba="0.2"/><transition target="s2" action="org.xwiki.test.jmock.JMockRule.mock(java.lang.Class)" proba="0.5333333333333333"/></state><state id="s1"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s2"><transition target="sX" action="epsilon" proba="0.2222222222222222"/><transition target="s1" action="org.xwiki.test.jmock.JMockRule.checking(org.jmock.internal.ExpectationBuilder)" proba="0.6666666666666666"/><transition target="s2" action="org.xwiki.test.jmock.JMockRule.mock(java.lang.Class)" proba="0.1111111111111111"/></state></states></ts>