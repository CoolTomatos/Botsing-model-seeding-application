<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="java.util.concurrent.ConcurrentLinkedQueue.add(java.lang.Object)" proba="0.25"/><transition target="sX" action="epsilon" proba="0.75"/></state><state id="s4"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s5"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s0"><transition target="s3" action="java.util.concurrent.ConcurrentLinkedQueue.add(java.lang.Object)" proba="0.14285714285714285"/><transition target="s5" action="java.util.concurrent.ConcurrentLinkedQueue.iterator()" proba="0.14285714285714285"/><transition target="s1" action="java.util.concurrent.ConcurrentLinkedQueue.size()" proba="0.14285714285714285"/><transition target="s2" action="java.util.concurrent.ConcurrentLinkedQueue.&lt;init>()" proba="0.5714285714285714"/></state><state id="s1"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s2"><transition target="s3" action="java.util.concurrent.ConcurrentLinkedQueue.add(java.lang.Object)" proba="0.5"/><transition target="s4" action="java.util.concurrent.ConcurrentLinkedQueue.offer(java.lang.Object)" proba="0.25"/><transition target="sX" action="epsilon" proba="0.25"/></state></states></ts>