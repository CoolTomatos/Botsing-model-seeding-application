<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s4"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s5"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s6"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s7"><transition target="s8" action="com.thoughtworks.xstream.XStream.addDefaultImplementation(java.lang.Class,java.lang.Class)" proba="1.0"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s8"><transition target="s8" action="com.thoughtworks.xstream.XStream.addDefaultImplementation(java.lang.Class,java.lang.Class)" proba="0.6666666666666666"/><transition target="s9" action="com.thoughtworks.xstream.XStream.getMapper()" proba="0.3333333333333333"/></state><state id="s9"><transition target="s10" action="com.thoughtworks.xstream.XStream.registerConverter(com.thoughtworks.xstream.converters.Converter)" proba="1.0"/></state><state id="s11"><transition target="s11" action="com.thoughtworks.xstream.XStream.alias(java.lang.String,java.lang.Class)" proba="0.6666666666666666"/><transition target="sX" action="epsilon" proba="0.3333333333333333"/></state><state id="s10"><transition target="s11" action="com.thoughtworks.xstream.XStream.alias(java.lang.String,java.lang.Class)" proba="0.5"/><transition target="s10" action="com.thoughtworks.xstream.XStream.registerConverter(com.thoughtworks.xstream.converters.Converter)" proba="0.5"/></state><state id="s12"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s0"><transition target="s3" action="com.thoughtworks.xstream.XStream.toXML(java.lang.Object)" proba="0.2"/><transition target="s4" action="com.thoughtworks.xstream.XStream.marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.DataHolder)" proba="0.1"/><transition target="s5" action="com.thoughtworks.xstream.XStream.fromXML(java.io.InputStream)" proba="0.1"/><transition target="s6" action="com.thoughtworks.xstream.XStream.toXML(java.lang.Object,java.io.Writer)" proba="0.2"/><transition target="s7" action="com.thoughtworks.xstream.XStream.setMarshallingStrategy(com.thoughtworks.xstream.MarshallingStrategy)" proba="0.1"/><transition target="s12" action="com.thoughtworks.xstream.XStream.fromXML(java.io.File)" proba="0.1"/><transition target="s1" action="com.thoughtworks.xstream.XStream.unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,com.thoughtworks.xstream.converters.DataHolder)" proba="0.1"/><transition target="s2" action="com.thoughtworks.xstream.XStream.fromXML(java.io.Reader)" proba="0.1"/></state><state id="s1"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s2"><transition target="sX" action="epsilon" proba="1.0"/></state></states></ts>