<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.35135135135135137"/><transition target="sX" action="epsilon" proba="0.5945945945945946"/><transition target="s19" action="java.util.Collections.emptyIterator()" proba="0.02702702702702703"/><transition target="s1" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.02702702702702703"/></state><state id="s4"><transition target="s3" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.011363636363636364"/><transition target="s4" action="java.util.Collections.emptyMap()" proba="0.13636363636363635"/><transition target="s5" action="java.util.Collections.unmodifiableMap(java.util.Map)" proba="0.022727272727272728"/><transition target="sX" action="epsilon" proba="0.8068181818181818"/><transition target="s1" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.011363636363636364"/><transition target="s2" action="java.util.Collections.emptyList()" proba="0.011363636363636364"/></state><state id="s5"><transition target="s4" action="java.util.Collections.emptyMap()" proba="0.10526315789473684"/><transition target="sX" action="epsilon" proba="0.8421052631578947"/><transition target="s8" action="java.util.Collections.unmodifiableSet(java.util.Set)" proba="0.05263157894736842"/></state><state id="s6"><transition target="s11" action="java.util.Collections.unmodifiableList(java.util.List)" proba="0.1111111111111111"/><transition target="sX" action="epsilon" proba="0.7777777777777778"/><transition target="s15" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="0.05555555555555555"/><transition target="s2" action="java.util.Collections.emptyList()" proba="0.05555555555555555"/></state><state id="s7"><transition target="s7" action="java.util.Collections.singleton(java.lang.Object)" proba="0.25"/><transition target="sX" action="epsilon" proba="0.75"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s8"><transition target="sX" action="epsilon" proba="0.8461538461538461"/><transition target="s12" action="java.util.Collections.emptySet()" proba="0.15384615384615385"/></state><state id="s9"><transition target="sX" action="epsilon" proba="0.75"/><transition target="s2" action="java.util.Collections.emptyList()" proba="0.25"/></state><state id="s20"><transition target="s13" action="java.util.Collections.synchronizedMap(java.util.Map)" proba="0.5"/><transition target="sX" action="epsilon" proba="0.5"/></state><state id="s11"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s22"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s10"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s21"><transition target="s15" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="1.0"/></state><state id="s13"><transition target="s20" action="java.util.Collections.synchronizedList(java.util.List)" proba="0.25"/><transition target="sX" action="epsilon" proba="0.5"/><transition target="s2" action="java.util.Collections.emptyList()" proba="0.25"/></state><state id="s12"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s15"><transition target="sX" action="epsilon" proba="0.8709677419354839"/><transition target="s15" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="0.12903225806451613"/></state><state id="s14"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s17"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s16"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s19"><transition target="s3" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.25"/><transition target="sX" action="epsilon" proba="0.5"/><transition target="s19" action="java.util.Collections.emptyIterator()" proba="0.25"/></state><state id="s18"><transition target="sX" action="epsilon" proba="0.8181818181818182"/><transition target="s2" action="java.util.Collections.emptyList()" proba="0.18181818181818182"/></state><state id="s0"><transition target="s3" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.04329896907216495"/><transition target="s4" action="java.util.Collections.emptyMap()" proba="0.14845360824742268"/><transition target="s5" action="java.util.Collections.unmodifiableMap(java.util.Map)" proba="0.03505154639175258"/><transition target="s6" action="java.util.Collections.sort(java.util.List)" proba="0.032989690721649485"/><transition target="s7" action="java.util.Collections.singleton(java.lang.Object)" proba="0.012371134020618556"/><transition target="s8" action="java.util.Collections.unmodifiableSet(java.util.Set)" proba="0.024742268041237112"/><transition target="s9" action="java.util.Collections.reverse(java.util.List)" proba="0.032989690721649485"/><transition target="s20" action="java.util.Collections.synchronizedList(java.util.List)" proba="0.002061855670103093"/><transition target="s11" action="java.util.Collections.unmodifiableList(java.util.List)" proba="0.03917525773195876"/><transition target="s10" action="java.util.Collections.addAll(java.util.Collection,java.lang.Object[])" proba="0.008247422680412371"/><transition target="s13" action="java.util.Collections.synchronizedMap(java.util.Map)" proba="0.006185567010309278"/><transition target="s12" action="java.util.Collections.emptySet()" proba="0.026804123711340205"/><transition target="s15" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="0.049484536082474224"/><transition target="s14" action="java.util.Collections.enumeration(java.util.Collection)" proba="0.008247422680412371"/><transition target="s17" action="java.util.Collections.min(java.util.Collection)" proba="0.002061855670103093"/><transition target="s16" action="java.util.Collections.newSetFromMap(java.util.Map)" proba="0.002061855670103093"/><transition target="s19" action="java.util.Collections.emptyIterator()" proba="0.004123711340206186"/><transition target="s18" action="java.util.Collections.unmodifiableCollection(java.util.Collection)" proba="0.02268041237113402"/><transition target="s1" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.07628865979381444"/><transition target="s2" action="java.util.Collections.emptyList()" proba="0.422680412371134"/></state><state id="s1"><transition target="s3" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.020833333333333332"/><transition target="sX" action="epsilon" proba="0.7291666666666666"/><transition target="s1" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.125"/><transition target="s2" action="java.util.Collections.emptyList()" proba="0.125"/></state><state id="s2"><transition target="s4" action="java.util.Collections.emptyMap()" proba="0.008333333333333333"/><transition target="s11" action="java.util.Collections.unmodifiableList(java.util.List)" proba="0.0125"/><transition target="s22" action="java.util.Collections.iterator()" proba="0.0125"/><transition target="s6" action="java.util.Collections.sort(java.util.List)" proba="0.008333333333333333"/><transition target="s21" action="java.util.Collections.reverseOrder()" proba="0.004166666666666667"/><transition target="sX" action="epsilon" proba="0.8541666666666666"/><transition target="s15" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="0.004166666666666667"/><transition target="s1" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.0125"/><transition target="s2" action="java.util.Collections.emptyList()" proba="0.08333333333333333"/></state></states></ts>