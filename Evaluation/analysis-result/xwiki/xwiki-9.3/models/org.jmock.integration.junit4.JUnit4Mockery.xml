<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="s2" action="org.jmock.integration.junit4.JUnit4Mockery.checking(org.jmock.internal.ExpectationBuilder)" proba="1.0"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s0"><transition target="s1" action="org.jmock.integration.junit4.JUnit4Mockery.&lt;init>()" proba="1.0"/></state><state id="s1"><transition target="s3" action="org.jmock.integration.junit4.JUnit4Mockery.mock(java.lang.Class)" proba="0.18181818181818182"/><transition target="s2" action="org.jmock.integration.junit4.JUnit4Mockery.checking(org.jmock.internal.ExpectationBuilder)" proba="0.8181818181818182"/></state><state id="s2"><transition target="sX" action="epsilon" proba="0.6470588235294118"/><transition target="s2" action="org.jmock.integration.junit4.JUnit4Mockery.checking(org.jmock.internal.ExpectationBuilder)" proba="0.35294117647058826"/></state></states></ts>