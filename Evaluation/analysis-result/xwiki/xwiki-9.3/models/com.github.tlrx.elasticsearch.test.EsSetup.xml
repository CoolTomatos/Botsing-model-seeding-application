<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s4"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s5"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s6"><transition target="s7" action="com.github.tlrx.elasticsearch.test.EsSetup.longValue()" proba="1.0"/></state><state id="s7"><transition target="s3" action="com.github.tlrx.elasticsearch.test.EsSetup.execute(com.github.tlrx.elasticsearch.test.request.Request[])" proba="1.0"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s0"><transition target="s3" action="com.github.tlrx.elasticsearch.test.EsSetup.execute(com.github.tlrx.elasticsearch.test.request.Request[])" proba="0.3"/><transition target="s4" action="com.github.tlrx.elasticsearch.test.EsSetup.terminate()" proba="0.2"/><transition target="s5" action="com.github.tlrx.elasticsearch.test.EsSetup.deleteAll()" proba="0.2"/><transition target="s6" action="com.github.tlrx.elasticsearch.test.EsSetup.countAll()" proba="0.1"/><transition target="s1" action="com.github.tlrx.elasticsearch.test.EsSetup.index(java.lang.String,java.lang.String,java.lang.String)" proba="0.2"/></state><state id="s1"><transition target="s2" action="com.github.tlrx.elasticsearch.test.EsSetup.withSource(java.lang.String)" proba="1.0"/></state><state id="s2"><transition target="sX" action="epsilon" proba="1.0"/></state></states></ts>