<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="java.util.Collections.emptyList()" proba="0.21393034825870647"/><transition target="s6" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.0024875621890547263"/><transition target="s7" action="java.util.Collections.emptySet()" proba="0.004975124378109453"/><transition target="sX" action="epsilon" proba="0.7139303482587065"/><transition target="s12" action="java.util.Collections.unmodifiableList(java.util.List)" proba="0.007462686567164179"/><transition target="s8" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="0.0024875621890547263"/><transition target="s9" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.017412935323383085"/><transition target="s14" action="java.util.Collections.iterator()" proba="0.007462686567164179"/><transition target="s16" action="java.util.Collections.sort(java.util.List)" proba="0.004975124378109453"/><transition target="s18" action="java.util.Collections.reverseOrder()" proba="0.0024875621890547263"/><transition target="s2" action="java.util.Collections.emptyMap()" proba="0.022388059701492536"/></state><state id="s4"><transition target="s3" action="java.util.Collections.emptyList()" proba="0.18181818181818182"/><transition target="sX" action="epsilon" proba="0.8181818181818182"/></state><state id="s5"><transition target="s11" action="java.util.Collections.unmodifiableSet(java.util.Set)" proba="0.05263157894736842"/><transition target="sX" action="epsilon" proba="0.8421052631578947"/><transition target="s2" action="java.util.Collections.emptyMap()" proba="0.10526315789473684"/></state><state id="s6"><transition target="s3" action="java.util.Collections.emptyList()" proba="0.008547008547008548"/><transition target="s22" action="java.util.Collections.emptyIterator()" proba="0.008547008547008548"/><transition target="s6" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.21367521367521367"/><transition target="sX" action="epsilon" proba="0.7264957264957265"/><transition target="s9" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.03418803418803419"/><transition target="s2" action="java.util.Collections.emptyMap()" proba="0.008547008547008548"/></state><state id="s7"><transition target="s7" action="java.util.Collections.emptySet()" proba="0.11538461538461539"/><transition target="sX" action="epsilon" proba="0.8461538461538461"/><transition target="s1" action="java.util.Collections.singleton(java.lang.Object)" proba="0.038461538461538464"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s8"><transition target="sX" action="epsilon" proba="0.875"/><transition target="s8" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="0.125"/></state><state id="s9"><transition target="s3" action="java.util.Collections.emptyList()" proba="0.08264462809917356"/><transition target="s6" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.05785123966942149"/><transition target="sX" action="epsilon" proba="0.6942148760330579"/><transition target="s9" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.1487603305785124"/><transition target="s1" action="java.util.Collections.singleton(java.lang.Object)" proba="0.008264462809917356"/><transition target="s2" action="java.util.Collections.emptyMap()" proba="0.008264462809917356"/></state><state id="s20"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s11"><transition target="s7" action="java.util.Collections.emptySet()" proba="0.13333333333333333"/><transition target="sX" action="epsilon" proba="0.8666666666666667"/></state><state id="s22"><transition target="s22" action="java.util.Collections.emptyIterator()" proba="0.25"/><transition target="s6" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.25"/><transition target="sX" action="epsilon" proba="0.5"/></state><state id="s10"><transition target="s3" action="java.util.Collections.emptyList()" proba="0.21052631578947367"/><transition target="sX" action="epsilon" proba="0.7894736842105263"/></state><state id="s21"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s13"><transition target="s13" action="java.util.Collections.synchronizedList(java.util.List)" proba="0.25"/><transition target="sX" action="epsilon" proba="0.5"/><transition target="s17" action="java.util.Collections.synchronizedMap(java.util.Map)" proba="0.25"/></state><state id="s12"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s15"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s14"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s17"><transition target="s3" action="java.util.Collections.emptyList()" proba="0.25"/><transition target="s13" action="java.util.Collections.synchronizedList(java.util.List)" proba="0.25"/><transition target="sX" action="epsilon" proba="0.5"/></state><state id="s16"><transition target="s3" action="java.util.Collections.emptyList()" proba="0.043478260869565216"/><transition target="s8" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="0.043478260869565216"/><transition target="sX" action="epsilon" proba="0.8260869565217391"/><transition target="s12" action="java.util.Collections.unmodifiableList(java.util.List)" proba="0.08695652173913043"/></state><state id="s19"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s18"><transition target="s8" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="1.0"/></state><state id="s0"><transition target="s3" action="java.util.Collections.emptyList()" proba="0.3620253164556962"/><transition target="s4" action="java.util.Collections.unmodifiableCollection(java.util.Collection)" proba="0.013924050632911392"/><transition target="s5" action="java.util.Collections.unmodifiableMap(java.util.Map)" proba="0.021518987341772152"/><transition target="s6" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.10126582278481013"/><transition target="s7" action="java.util.Collections.emptySet()" proba="0.024050632911392405"/><transition target="s8" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="0.03164556962025317"/><transition target="s9" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.10759493670886076"/><transition target="s20" action="java.util.Collections.min(java.util.Collection)" proba="0.0012658227848101266"/><transition target="s11" action="java.util.Collections.unmodifiableSet(java.util.Set)" proba="0.017721518987341773"/><transition target="s22" action="java.util.Collections.emptyIterator()" proba="0.002531645569620253"/><transition target="s10" action="java.util.Collections.reverse(java.util.List)" proba="0.024050632911392405"/><transition target="s21" action="java.util.Collections.newSetFromMap(java.util.Map)" proba="0.0012658227848101266"/><transition target="s13" action="java.util.Collections.synchronizedList(java.util.List)" proba="0.002531645569620253"/><transition target="s12" action="java.util.Collections.unmodifiableList(java.util.List)" proba="0.024050632911392405"/><transition target="s15" action="java.util.Collections.enumeration(java.util.Collection)" proba="0.005063291139240506"/><transition target="s17" action="java.util.Collections.synchronizedMap(java.util.Map)" proba="0.0037974683544303796"/><transition target="s16" action="java.util.Collections.sort(java.util.List)" proba="0.026582278481012658"/><transition target="s19" action="java.util.Collections.addAll(java.util.Collection,java.lang.Object[])" proba="0.005063291139240506"/><transition target="s1" action="java.util.Collections.singleton(java.lang.Object)" proba="0.013924050632911392"/><transition target="s2" action="java.util.Collections.emptyMap()" proba="0.21012658227848102"/></state><state id="s1"><transition target="s3" action="java.util.Collections.emptyList()" proba="0.047619047619047616"/><transition target="sX" action="epsilon" proba="0.42857142857142855"/><transition target="s9" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.14285714285714285"/><transition target="s1" action="java.util.Collections.singleton(java.lang.Object)" proba="0.38095238095238093"/></state><state id="s2"><transition target="s3" action="java.util.Collections.emptyList()" proba="0.04608294930875576"/><transition target="s5" action="java.util.Collections.unmodifiableMap(java.util.Map)" proba="0.009216589861751152"/><transition target="s6" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.013824884792626729"/><transition target="sX" action="epsilon" proba="0.7373271889400922"/><transition target="s9" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.018433179723502304"/><transition target="s2" action="java.util.Collections.emptyMap()" proba="0.17511520737327188"/></state></states></ts>