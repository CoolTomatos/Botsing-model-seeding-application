<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="java.util.Collection.addAll(java.util.Collection)" proba="0.09090909090909091"/><transition target="sX" action="epsilon" proba="0.9090909090909091"/></state><state id="s4"><transition target="s4" action="java.util.Collection.contains(java.lang.Object)" proba="0.34210526315789475"/><transition target="s13" action="java.util.Collection.remove(java.lang.Object)" proba="0.02631578947368421"/><transition target="sX" action="epsilon" proba="0.5"/><transition target="s12" action="java.util.Collection.toArray()" proba="0.05263157894736842"/><transition target="s1" action="java.util.Collection.size()" proba="0.05263157894736842"/><transition target="s2" action="java.util.Collection.iterator()" proba="0.02631578947368421"/></state><state id="s5"><transition target="s4" action="java.util.Collection.contains(java.lang.Object)" proba="0.016666666666666666"/><transition target="sX" action="epsilon" proba="0.38333333333333336"/><transition target="s1" action="java.util.Collection.size()" proba="0.23333333333333334"/><transition target="s2" action="java.util.Collection.iterator()" proba="0.36666666666666664"/></state><state id="s6"><transition target="s7" action="java.util.Collection.add(java.lang.Object)" proba="0.09090909090909091"/><transition target="sX" action="epsilon" proba="0.7727272727272727"/><transition target="s2" action="java.util.Collection.iterator()" proba="0.13636363636363635"/></state><state id="s7"><transition target="s5" action="java.util.Collection.isEmpty()" proba="0.041666666666666664"/><transition target="s7" action="java.util.Collection.add(java.lang.Object)" proba="0.041666666666666664"/><transition target="sX" action="epsilon" proba="0.875"/><transition target="s1" action="java.util.Collection.size()" proba="0.041666666666666664"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s8"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s9"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s11"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s10"><transition target="s11" action="java.util.Collection.getId()" proba="1.0"/></state><state id="s13"><transition target="s5" action="java.util.Collection.isEmpty()" proba="0.25"/><transition target="sX" action="epsilon" proba="0.75"/></state><state id="s12"><transition target="sX" action="epsilon" proba="0.8"/><transition target="s1" action="java.util.Collection.size()" proba="0.2"/></state><state id="s15"><transition target="sX" action="epsilon" proba="0.5"/><transition target="s15" action="java.util.Collection.toString()" proba="0.5"/></state><state id="s14"><transition target="sX" action="epsilon" proba="0.5"/><transition target="s14" action="java.util.Collection.containsAll(java.util.Collection)" proba="0.5"/></state><state id="s16"><transition target="s3" action="java.util.Collection.addAll(java.util.Collection)" proba="1.0"/></state><state id="s0"><transition target="s3" action="java.util.Collection.addAll(java.util.Collection)" proba="0.02857142857142857"/><transition target="s4" action="java.util.Collection.contains(java.lang.Object)" proba="0.05396825396825397"/><transition target="s5" action="java.util.Collection.isEmpty()" proba="0.18412698412698414"/><transition target="s7" action="java.util.Collection.add(java.lang.Object)" proba="0.06666666666666667"/><transition target="s13" action="java.util.Collection.remove(java.lang.Object)" proba="0.009523809523809525"/><transition target="s12" action="java.util.Collection.toArray()" proba="0.006349206349206349"/><transition target="s16" action="java.util.Collection.clear()" proba="0.0031746031746031746"/><transition target="s1" action="java.util.Collection.size()" proba="0.2634920634920635"/><transition target="s2" action="java.util.Collection.iterator()" proba="0.38412698412698415"/></state><state id="s1"><transition target="s4" action="java.util.Collection.contains(java.lang.Object)" proba="0.05504587155963303"/><transition target="sX" action="epsilon" proba="0.2018348623853211"/><transition target="s12" action="java.util.Collection.toArray()" proba="0.009174311926605505"/><transition target="s9" action="java.util.Collection.toArray(java.lang.Object[])" proba="0.009174311926605505"/><transition target="s14" action="java.util.Collection.containsAll(java.util.Collection)" proba="0.01834862385321101"/><transition target="s1" action="java.util.Collection.size()" proba="0.06422018348623854"/><transition target="s2" action="java.util.Collection.iterator()" proba="0.6422018348623854"/></state><state id="s2"><transition target="s4" action="java.util.Collection.contains(java.lang.Object)" proba="0.004608294930875576"/><transition target="s6" action="java.util.Collection.next()" proba="0.10138248847926268"/><transition target="s10" action="java.util.Collection.isValid(java.lang.String)" proba="0.009216589861751152"/><transition target="sX" action="epsilon" proba="0.8709677419354839"/><transition target="s8" action="java.util.Collection.createInputFilterStream(java.util.Map)" proba="0.004608294930875576"/><transition target="s15" action="java.util.Collection.toString()" proba="0.004608294930875576"/><transition target="s1" action="java.util.Collection.size()" proba="0.004608294930875576"/></state></states></ts>