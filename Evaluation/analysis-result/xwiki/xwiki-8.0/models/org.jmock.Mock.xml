<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="s4" action="org.jmock.Mock.proxy()" proba="0.26666666666666666"/><transition target="sX" action="epsilon" proba="0.06666666666666667"/><transition target="s1" action="org.jmock.Mock.stubs()" proba="0.6666666666666666"/></state><state id="s4"><transition target="s4" action="org.jmock.Mock.proxy()" proba="0.03125"/><transition target="sX" action="epsilon" proba="0.75"/><transition target="s1" action="org.jmock.Mock.stubs()" proba="0.21875"/></state><state id="s5"><transition target="s2" action="org.jmock.Mock.method(java.lang.String)" proba="1.0"/></state><state id="s6"><transition target="s4" action="org.jmock.Mock.proxy()" proba="0.5"/><transition target="s1" action="org.jmock.Mock.stubs()" proba="0.5"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s0"><transition target="s4" action="org.jmock.Mock.proxy()" proba="0.16666666666666666"/><transition target="s5" action="org.jmock.Mock.expects(org.jmock.core.InvocationMatcher)" proba="0.14285714285714285"/><transition target="s1" action="org.jmock.Mock.stubs()" proba="0.6904761904761905"/></state><state id="s1"><transition target="s2" action="org.jmock.Mock.method(java.lang.String)" proba="1.0"/></state><state id="s2"><transition target="s3" action="org.jmock.Mock.will(org.jmock.core.Stub)" proba="0.18072289156626506"/><transition target="s4" action="org.jmock.Mock.proxy()" proba="0.2289156626506024"/><transition target="s6" action="org.jmock.Mock.with(org.jmock.core.Constraint,org.jmock.core.Constraint)" proba="0.024096385542168676"/><transition target="sX" action="epsilon" proba="0.20481927710843373"/><transition target="s1" action="org.jmock.Mock.stubs()" proba="0.3614457831325301"/></state></states></ts>