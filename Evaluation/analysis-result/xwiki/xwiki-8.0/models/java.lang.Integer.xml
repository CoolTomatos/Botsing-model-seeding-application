<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="java.lang.Integer.valueOf(java.lang.String)" proba="0.06451612903225806"/><transition target="sX" action="epsilon" proba="0.41935483870967744"/><transition target="s1" action="java.lang.Integer.valueOf(int)" proba="0.03225806451612903"/><transition target="s2" action="java.lang.Integer.intValue()" proba="0.4838709677419355"/></state><state id="s4"><transition target="s4" action="java.lang.Integer.parseInt(java.lang.String)" proba="0.10416666666666667"/><transition target="s5" action="java.lang.Integer.toHexString(int)" proba="0.020833333333333332"/><transition target="sX" action="epsilon" proba="0.7708333333333334"/><transition target="s1" action="java.lang.Integer.valueOf(int)" proba="0.10416666666666667"/></state><state id="s5"><transition target="sX" action="epsilon" proba="0.9333333333333333"/><transition target="s12" action="java.lang.Integer.toUpperCase()" proba="0.06666666666666667"/></state><state id="s6"><transition target="s6" action="java.lang.Integer.parseInt(java.lang.String,int)" proba="0.5454545454545454"/><transition target="sX" action="epsilon" proba="0.45454545454545453"/></state><state id="s7"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s8"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s9"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s11"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s10"><transition target="s2" action="java.lang.Integer.intValue()" proba="1.0"/></state><state id="s13"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s12"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s0"><transition target="s3" action="java.lang.Integer.valueOf(java.lang.String)" proba="0.0374414976599064"/><transition target="s4" action="java.lang.Integer.parseInt(java.lang.String)" proba="0.1294851794071763"/><transition target="s5" action="java.lang.Integer.toHexString(int)" proba="0.0202808112324493"/><transition target="s11" action="java.lang.Integer.equals(java.lang.Object)" proba="0.0109204368174727"/><transition target="s6" action="java.lang.Integer.parseInt(java.lang.String,int)" proba="0.0078003120124804995"/><transition target="s10" action="java.lang.Integer.decode(java.lang.String)" proba="0.0031201248049922"/><transition target="s7" action="java.lang.Integer.toString(int)" proba="0.0078003120124804995"/><transition target="s8" action="java.lang.Integer.signum(int)" proba="0.0015600624024961"/><transition target="s9" action="java.lang.Integer.toString(int,int)" proba="0.0218408736349454"/><transition target="s1" action="java.lang.Integer.valueOf(int)" proba="0.6053042121684867"/><transition target="s2" action="java.lang.Integer.intValue()" proba="0.1544461778471139"/></state><state id="s1"><transition target="s4" action="java.lang.Integer.parseInt(java.lang.String)" proba="0.0034403669724770644"/><transition target="sX" action="epsilon" proba="0.45756880733944955"/><transition target="s1" action="java.lang.Integer.valueOf(int)" proba="0.5389908256880734"/></state><state id="s2"><transition target="s3" action="java.lang.Integer.valueOf(java.lang.String)" proba="0.036231884057971016"/><transition target="s13" action="java.lang.Integer.toString()" proba="0.007246376811594203"/><transition target="sX" action="epsilon" proba="0.7753623188405797"/><transition target="s1" action="java.lang.Integer.valueOf(int)" proba="0.021739130434782608"/><transition target="s2" action="java.lang.Integer.intValue()" proba="0.15942028985507245"/></state></states></ts>