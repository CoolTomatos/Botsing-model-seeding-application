<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="s4" action="java.util.Collection.contains(java.lang.Object)" proba="0.010101010101010102"/><transition target="s10" action="java.util.Collection.next()" proba="0.09595959595959595"/><transition target="sX" action="epsilon" proba="0.8787878787878788"/><transition target="s9" action="java.util.Collection.createInputFilterStream(java.util.Map)" proba="0.005050505050505051"/><transition target="s14" action="java.util.Collection.isValid(java.lang.String)" proba="0.005050505050505051"/><transition target="s2" action="java.util.Collection.size()" proba="0.005050505050505051"/></state><state id="s4"><transition target="s3" action="java.util.Collection.iterator()" proba="0.024390243902439025"/><transition target="s4" action="java.util.Collection.contains(java.lang.Object)" proba="0.3170731707317073"/><transition target="s11" action="java.util.Collection.remove(java.lang.Object)" proba="0.024390243902439025"/><transition target="s6" action="java.util.Collection.toLowerCase()" proba="0.024390243902439025"/><transition target="sX" action="epsilon" proba="0.4878048780487805"/><transition target="s8" action="java.util.Collection.toArray()" proba="0.04878048780487805"/><transition target="s1" action="java.util.Collection.add(java.lang.Object)" proba="0.024390243902439025"/><transition target="s2" action="java.util.Collection.size()" proba="0.04878048780487805"/></state><state id="s5"><transition target="s3" action="java.util.Collection.iterator()" proba="0.2653061224489796"/><transition target="s4" action="java.util.Collection.contains(java.lang.Object)" proba="0.02040816326530612"/><transition target="sX" action="epsilon" proba="0.42857142857142855"/><transition target="s2" action="java.util.Collection.size()" proba="0.2857142857142857"/></state><state id="s6"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s7"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s8"><transition target="sX" action="epsilon" proba="0.75"/><transition target="s2" action="java.util.Collection.size()" proba="0.25"/></state><state id="s9"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s11"><transition target="s5" action="java.util.Collection.isEmpty()" proba="0.25"/><transition target="sX" action="epsilon" proba="0.75"/></state><state id="s10"><transition target="s3" action="java.util.Collection.iterator()" proba="0.15"/><transition target="sX" action="epsilon" proba="0.75"/><transition target="s1" action="java.util.Collection.add(java.lang.Object)" proba="0.1"/></state><state id="s13"><transition target="s13" action="java.util.Collection.containsAll(java.util.Collection)" proba="0.5"/><transition target="sX" action="epsilon" proba="0.5"/></state><state id="s12"><transition target="s7" action="java.util.Collection.addAll(java.util.Collection)" proba="1.0"/></state><state id="s15"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s14"><transition target="s15" action="java.util.Collection.getId()" proba="1.0"/></state><state id="s16"><transition target="s10" action="java.util.Collection.next()" proba="1.0"/></state><state id="s0"><transition target="s3" action="java.util.Collection.iterator()" proba="0.39862542955326463"/><transition target="s4" action="java.util.Collection.contains(java.lang.Object)" proba="0.06529209621993128"/><transition target="s5" action="java.util.Collection.isEmpty()" proba="0.16151202749140894"/><transition target="s11" action="java.util.Collection.remove(java.lang.Object)" proba="0.010309278350515464"/><transition target="s7" action="java.util.Collection.addAll(java.util.Collection)" proba="0.020618556701030927"/><transition target="s12" action="java.util.Collection.clear()" proba="0.003436426116838488"/><transition target="s8" action="java.util.Collection.toArray()" proba="0.006872852233676976"/><transition target="s1" action="java.util.Collection.add(java.lang.Object)" proba="0.07216494845360824"/><transition target="s2" action="java.util.Collection.size()" proba="0.2611683848797251"/></state><state id="s1"><transition target="s5" action="java.util.Collection.isEmpty()" proba="0.037037037037037035"/><transition target="s7" action="java.util.Collection.addAll(java.util.Collection)" proba="0.037037037037037035"/><transition target="sX" action="epsilon" proba="0.7777777777777778"/><transition target="s1" action="java.util.Collection.add(java.lang.Object)" proba="0.1111111111111111"/><transition target="s2" action="java.util.Collection.size()" proba="0.037037037037037035"/></state><state id="s2"><transition target="s3" action="java.util.Collection.iterator()" proba="0.6435643564356436"/><transition target="s4" action="java.util.Collection.contains(java.lang.Object)" proba="0.0594059405940594"/><transition target="s13" action="java.util.Collection.containsAll(java.util.Collection)" proba="0.019801980198019802"/><transition target="sX" action="epsilon" proba="0.2079207920792079"/><transition target="s16" action="java.util.Collection.hasNext()" proba="0.009900990099009901"/><transition target="s2" action="java.util.Collection.size()" proba="0.0594059405940594"/></state></states></ts>