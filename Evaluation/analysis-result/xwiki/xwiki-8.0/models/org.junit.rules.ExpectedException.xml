<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s4"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s0"><transition target="s3" action="org.junit.rules.ExpectedException.none()" proba="0.4230769230769231"/><transition target="s1" action="org.junit.rules.ExpectedException.expect(java.lang.Class)" proba="0.5769230769230769"/></state><state id="s1"><transition target="sX" action="epsilon" proba="0.13333333333333333"/><transition target="s2" action="org.junit.rules.ExpectedException.expectMessage(java.lang.String)" proba="0.8666666666666667"/></state><state id="s2"><transition target="s4" action="org.junit.rules.ExpectedException.expectCause(org.hamcrest.Matcher)" proba="0.07692307692307693"/><transition target="sX" action="epsilon" proba="0.9230769230769231"/></state></states></ts>