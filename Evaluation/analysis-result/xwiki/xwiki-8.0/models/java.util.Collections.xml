<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="java.util.Collections.emptyMap()" proba="0.18274111675126903"/><transition target="s4" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.015228426395939087"/><transition target="s5" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.025380710659898477"/><transition target="s11" action="java.util.Collections.unmodifiableMap(java.util.Map)" proba="0.01015228426395939"/><transition target="sX" action="epsilon" proba="0.7360406091370558"/><transition target="s1" action="java.util.Collections.emptyList()" proba="0.030456852791878174"/></state><state id="s4"><transition target="s3" action="java.util.Collections.emptyMap()" proba="0.009523809523809525"/><transition target="s4" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.2"/><transition target="s5" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.02857142857142857"/><transition target="s10" action="java.util.Collections.emptyIterator()" proba="0.009523809523809525"/><transition target="sX" action="epsilon" proba="0.7523809523809524"/></state><state id="s5"><transition target="s3" action="java.util.Collections.emptyMap()" proba="0.008333333333333333"/><transition target="s4" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.05"/><transition target="s5" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.19166666666666668"/><transition target="sX" action="epsilon" proba="0.6833333333333333"/><transition target="s8" action="java.util.Collections.singleton(java.lang.Object)" proba="0.008333333333333333"/><transition target="s1" action="java.util.Collections.emptyList()" proba="0.058333333333333334"/></state><state id="s6"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s7"><transition target="s7" action="java.util.Collections.emptySet()" proba="0.14814814814814814"/><transition target="sX" action="epsilon" proba="0.8148148148148148"/><transition target="s8" action="java.util.Collections.singleton(java.lang.Object)" proba="0.037037037037037035"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s8"><transition target="s5" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.13636363636363635"/><transition target="sX" action="epsilon" proba="0.5"/><transition target="s8" action="java.util.Collections.singleton(java.lang.Object)" proba="0.3181818181818182"/><transition target="s1" action="java.util.Collections.emptyList()" proba="0.045454545454545456"/></state><state id="s9"><transition target="sX" action="epsilon" proba="0.8333333333333334"/><transition target="s1" action="java.util.Collections.emptyList()" proba="0.16666666666666666"/></state><state id="s20"><transition target="s20" action="java.util.Collections.synchronizedList(java.util.List)" proba="0.25"/><transition target="sX" action="epsilon" proba="0.5"/><transition target="s17" action="java.util.Collections.synchronizedMap(java.util.Map)" proba="0.25"/></state><state id="s11"><transition target="s3" action="java.util.Collections.emptyMap()" proba="0.1111111111111111"/><transition target="sX" action="epsilon" proba="0.8333333333333334"/><transition target="s16" action="java.util.Collections.unmodifiableSet(java.util.Set)" proba="0.05555555555555555"/></state><state id="s22"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s10"><transition target="s4" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.25"/><transition target="s10" action="java.util.Collections.emptyIterator()" proba="0.25"/><transition target="sX" action="epsilon" proba="0.5"/></state><state id="s21"><transition target="s13" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="1.0"/></state><state id="s13"><transition target="s13" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="0.1"/><transition target="sX" action="epsilon" proba="0.9"/></state><state id="s12"><transition target="s13" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="0.05263157894736842"/><transition target="sX" action="epsilon" proba="0.8421052631578947"/><transition target="s2" action="java.util.Collections.unmodifiableList(java.util.List)" proba="0.10526315789473684"/></state><state id="s15"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s14"><transition target="sX" action="epsilon" proba="0.7647058823529411"/><transition target="s1" action="java.util.Collections.emptyList()" proba="0.23529411764705882"/></state><state id="s17"><transition target="s20" action="java.util.Collections.synchronizedList(java.util.List)" proba="0.2"/><transition target="sX" action="epsilon" proba="0.6"/><transition target="s1" action="java.util.Collections.emptyList()" proba="0.2"/></state><state id="s16"><transition target="s7" action="java.util.Collections.emptySet()" proba="0.07142857142857142"/><transition target="sX" action="epsilon" proba="0.9285714285714286"/></state><state id="s19"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s18"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s0"><transition target="s3" action="java.util.Collections.emptyMap()" proba="0.20408163265306123"/><transition target="s4" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.10068027210884353"/><transition target="s5" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.10884353741496598"/><transition target="s6" action="java.util.Collections.enumeration(java.util.Collection)" proba="0.004081632653061225"/><transition target="s7" action="java.util.Collections.emptySet()" proba="0.027210884353741496"/><transition target="s8" action="java.util.Collections.singleton(java.lang.Object)" proba="0.017687074829931974"/><transition target="s9" action="java.util.Collections.unmodifiableCollection(java.util.Collection)" proba="0.0163265306122449"/><transition target="s20" action="java.util.Collections.synchronizedList(java.util.List)" proba="0.0027210884353741495"/><transition target="s11" action="java.util.Collections.unmodifiableMap(java.util.Map)" proba="0.021768707482993196"/><transition target="s22" action="java.util.Collections.newSetFromMap(java.util.Map)" proba="0.0013605442176870747"/><transition target="s10" action="java.util.Collections.emptyIterator()" proba="0.0027210884353741495"/><transition target="s13" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="0.0326530612244898"/><transition target="s12" action="java.util.Collections.sort(java.util.List)" proba="0.02312925170068027"/><transition target="s15" action="java.util.Collections.addAll(java.util.Collection,java.lang.Object[])" proba="0.005442176870748299"/><transition target="s14" action="java.util.Collections.reverse(java.util.List)" proba="0.02312925170068027"/><transition target="s17" action="java.util.Collections.synchronizedMap(java.util.Map)" proba="0.005442176870748299"/><transition target="s16" action="java.util.Collections.unmodifiableSet(java.util.Set)" proba="0.017687074829931974"/><transition target="s19" action="java.util.Collections.min(java.util.Collection)" proba="0.0013605442176870747"/><transition target="s1" action="java.util.Collections.emptyList()" proba="0.363265306122449"/><transition target="s2" action="java.util.Collections.unmodifiableList(java.util.List)" proba="0.02040816326530612"/></state><state id="s1"><transition target="s3" action="java.util.Collections.emptyMap()" proba="0.01876675603217158"/><transition target="s5" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.0160857908847185"/><transition target="s21" action="java.util.Collections.reverseOrder()" proba="0.002680965147453083"/><transition target="s13" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="0.002680965147453083"/><transition target="s7" action="java.util.Collections.emptySet()" proba="0.005361930294906166"/><transition target="sX" action="epsilon" proba="0.7050938337801609"/><transition target="s12" action="java.util.Collections.sort(java.util.List)" proba="0.005361930294906166"/><transition target="s18" action="java.util.Collections.iterator()" proba="0.00804289544235925"/><transition target="s1" action="java.util.Collections.emptyList()" proba="0.22788203753351208"/><transition target="s2" action="java.util.Collections.unmodifiableList(java.util.List)" proba="0.00804289544235925"/></state><state id="s2"><transition target="sX" action="epsilon" proba="1.0"/></state></states></ts>