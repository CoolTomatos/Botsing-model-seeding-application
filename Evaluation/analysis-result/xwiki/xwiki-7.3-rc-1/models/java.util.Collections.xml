<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="0.1"/><transition target="sX" action="epsilon" proba="0.9"/></state><state id="s4"><transition target="s4" action="java.util.Collections.emptyMap()" proba="0.14606741573033707"/><transition target="s10" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.011235955056179775"/><transition target="sX" action="epsilon" proba="0.797752808988764"/><transition target="s15" action="java.util.Collections.unmodifiableMap(java.util.Map)" proba="0.02247191011235955"/><transition target="s1" action="java.util.Collections.emptyList()" proba="0.02247191011235955"/></state><state id="s5"><transition target="s5" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.2777777777777778"/><transition target="s10" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.018518518518518517"/><transition target="s21" action="java.util.Collections.emptyIterator()" proba="0.018518518518518517"/><transition target="sX" action="epsilon" proba="0.6851851851851852"/></state><state id="s6"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s7"><transition target="sX" action="epsilon" proba="0.7333333333333333"/><transition target="s1" action="java.util.Collections.emptyList()" proba="0.26666666666666666"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s8"><transition target="s3" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="0.06666666666666667"/><transition target="s13" action="java.util.Collections.unmodifiableList(java.util.List)" proba="0.13333333333333333"/><transition target="sX" action="epsilon" proba="0.8"/></state><state id="s9"><transition target="sX" action="epsilon" proba="0.9473684210526315"/><transition target="s9" action="java.util.Collections.emptySet()" proba="0.05263157894736842"/></state><state id="s20"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s11"><transition target="sX" action="epsilon" proba="0.6"/><transition target="s18" action="java.util.Collections.synchronizedList(java.util.List)" proba="0.2"/><transition target="s1" action="java.util.Collections.emptyList()" proba="0.2"/></state><state id="s22"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s10"><transition target="s5" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.01818181818181818"/><transition target="s10" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.10909090909090909"/><transition target="sX" action="epsilon" proba="0.7454545454545455"/><transition target="s17" action="java.util.Collections.singleton(java.lang.Object)" proba="0.01818181818181818"/><transition target="s1" action="java.util.Collections.emptyList()" proba="0.10909090909090909"/></state><state id="s21"><transition target="s5" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.25"/><transition target="s21" action="java.util.Collections.emptyIterator()" proba="0.25"/><transition target="sX" action="epsilon" proba="0.5"/></state><state id="s13"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s12"><transition target="sX" action="epsilon" proba="0.9090909090909091"/><transition target="s9" action="java.util.Collections.emptySet()" proba="0.09090909090909091"/></state><state id="s15"><transition target="s4" action="java.util.Collections.emptyMap()" proba="0.125"/><transition target="sX" action="epsilon" proba="0.875"/></state><state id="s14"><transition target="sX" action="epsilon" proba="0.9090909090909091"/><transition target="s1" action="java.util.Collections.emptyList()" proba="0.09090909090909091"/></state><state id="s17"><transition target="s10" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.3333333333333333"/><transition target="sX" action="epsilon" proba="0.5555555555555556"/><transition target="s17" action="java.util.Collections.singleton(java.lang.Object)" proba="0.1111111111111111"/></state><state id="s16"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s19"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s18"><transition target="s11" action="java.util.Collections.synchronizedMap(java.util.Map)" proba="0.5"/><transition target="sX" action="epsilon" proba="0.5"/></state><state id="s0"><transition target="s3" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="0.05042016806722689"/><transition target="s4" action="java.util.Collections.emptyMap()" proba="0.14915966386554622"/><transition target="s5" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.07773109243697479"/><transition target="s6" action="java.util.Collections.addAll(java.util.Collection,java.lang.Object[])" proba="0.008403361344537815"/><transition target="s7" action="java.util.Collections.reverse(java.util.List)" proba="0.031512605042016806"/><transition target="s8" action="java.util.Collections.sort(java.util.List)" proba="0.0273109243697479"/><transition target="s9" action="java.util.Collections.emptySet()" proba="0.029411764705882353"/><transition target="s20" action="java.util.Collections.min(java.util.Collection)" proba="0.0021008403361344537"/><transition target="s11" action="java.util.Collections.synchronizedMap(java.util.Map)" proba="0.008403361344537815"/><transition target="s22" action="java.util.Collections.enumeration(java.util.Collection)" proba="0.004201680672268907"/><transition target="s10" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.0861344537815126"/><transition target="s21" action="java.util.Collections.emptyIterator()" proba="0.004201680672268907"/><transition target="s13" action="java.util.Collections.unmodifiableList(java.util.List)" proba="0.029411764705882353"/><transition target="s12" action="java.util.Collections.unmodifiableSet(java.util.Set)" proba="0.023109243697478993"/><transition target="s15" action="java.util.Collections.unmodifiableMap(java.util.Map)" proba="0.029411764705882353"/><transition target="s14" action="java.util.Collections.unmodifiableCollection(java.util.Collection)" proba="0.023109243697478993"/><transition target="s17" action="java.util.Collections.singleton(java.lang.Object)" proba="0.014705882352941176"/><transition target="s16" action="java.util.Collections.newSetFromMap(java.util.Map)" proba="0.0021008403361344537"/><transition target="s18" action="java.util.Collections.synchronizedList(java.util.List)" proba="0.0021008403361344537"/><transition target="s1" action="java.util.Collections.emptyList()" proba="0.39705882352941174"/></state><state id="s1"><transition target="s3" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="0.004464285714285714"/><transition target="s4" action="java.util.Collections.emptyMap()" proba="0.013392857142857142"/><transition target="s10" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.013392857142857142"/><transition target="s13" action="java.util.Collections.unmodifiableList(java.util.List)" proba="0.013392857142857142"/><transition target="sX" action="epsilon" proba="0.8258928571428571"/><transition target="s8" action="java.util.Collections.sort(java.util.List)" proba="0.008928571428571428"/><transition target="s9" action="java.util.Collections.emptySet()" proba="0.013392857142857142"/><transition target="s19" action="java.util.Collections.iterator()" proba="0.008928571428571428"/><transition target="s1" action="java.util.Collections.emptyList()" proba="0.09375"/><transition target="s2" action="java.util.Collections.reverseOrder()" proba="0.004464285714285714"/></state><state id="s2"><transition target="s3" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="1.0"/></state></states></ts>