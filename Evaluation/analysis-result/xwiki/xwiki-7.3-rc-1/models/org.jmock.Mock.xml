<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="sX" action="epsilon" proba="0.6666666666666666"/><transition target="s1" action="org.jmock.Mock.stubs()" proba="0.3333333333333333"/></state><state id="s4"><transition target="s3" action="org.jmock.Mock.proxy()" proba="0.3333333333333333"/><transition target="sX" action="epsilon" proba="0.3333333333333333"/><transition target="s1" action="org.jmock.Mock.stubs()" proba="0.3333333333333333"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s0"><transition target="s3" action="org.jmock.Mock.proxy()" proba="0.2857142857142857"/><transition target="s1" action="org.jmock.Mock.stubs()" proba="0.7142857142857143"/></state><state id="s1"><transition target="s2" action="org.jmock.Mock.method(java.lang.String)" proba="1.0"/></state><state id="s2"><transition target="s4" action="org.jmock.Mock.will(org.jmock.core.Stub)" proba="0.3"/><transition target="sX" action="epsilon" proba="0.4"/><transition target="s1" action="org.jmock.Mock.stubs()" proba="0.3"/></state></states></ts>