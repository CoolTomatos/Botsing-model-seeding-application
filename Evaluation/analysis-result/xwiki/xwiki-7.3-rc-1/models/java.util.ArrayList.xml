<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s11"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s10"><transition target="s3" action="java.util.ArrayList.add(java.lang.Object)" proba="0.2962962962962963"/><transition target="s5" action="java.util.ArrayList.addAll(java.util.Collection)" proba="0.07407407407407407"/><transition target="s7" action="java.util.ArrayList.iterator()" proba="0.14814814814814814"/><transition target="sX" action="epsilon" proba="0.3333333333333333"/><transition target="s12" action="java.util.ArrayList.isEmpty()" proba="0.037037037037037035"/><transition target="s15" action="java.util.ArrayList.remove(java.lang.Object)" proba="0.07407407407407407"/><transition target="s9" action="java.util.ArrayList.size()" proba="0.037037037037037035"/></state><state id="s13"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s12"><transition target="s3" action="java.util.ArrayList.add(java.lang.Object)" proba="0.2"/><transition target="s22" action="java.util.ArrayList.hasNext()" proba="0.1"/><transition target="s7" action="java.util.ArrayList.iterator()" proba="0.1"/><transition target="sX" action="epsilon" proba="0.4"/><transition target="s9" action="java.util.ArrayList.size()" proba="0.1"/><transition target="s1" action="java.util.ArrayList.get(int)" proba="0.1"/></state><state id="s15"><transition target="s6" action="java.util.ArrayList.contains(java.lang.Object)" proba="0.1111111111111111"/><transition target="sX" action="epsilon" proba="0.3333333333333333"/><transition target="s9" action="java.util.ArrayList.size()" proba="0.1111111111111111"/><transition target="s15" action="java.util.ArrayList.remove(java.lang.Object)" proba="0.3333333333333333"/><transition target="s14" action="java.util.ArrayList.add(int,java.lang.Object)" proba="0.1111111111111111"/></state><state id="s14"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s17"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s16"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s19"><transition target="s20" action="java.util.ArrayList.item(int)" proba="1.0"/></state><state id="s18"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s0"><transition target="s3" action="java.util.ArrayList.add(java.lang.Object)" proba="7.558578987150416E-4"/><transition target="s4" action="java.util.ArrayList.&lt;init>()" proba="0.5049130763416477"/><transition target="s10" action="java.util.ArrayList.&lt;init>(java.util.Collection)" proba="0.01889644746787604"/><transition target="s1" action="java.util.ArrayList.get(int)" proba="0.4074074074074074"/><transition target="s2" action="java.util.ArrayList.&lt;init>(int)" proba="0.06802721088435375"/></state><state id="s1"><transition target="s21" action="java.util.ArrayList.set(int,java.lang.Object)" proba="0.0017793594306049821"/><transition target="s7" action="java.util.ArrayList.iterator()" proba="0.0017793594306049821"/><transition target="s24" action="java.util.ArrayList.indexOf(java.lang.Object)" proba="0.0017793594306049821"/><transition target="sX" action="epsilon" proba="0.9768683274021353"/><transition target="s14" action="java.util.ArrayList.add(int,java.lang.Object)" proba="0.0017793594306049821"/><transition target="s16" action="java.util.ArrayList.remove(int)" proba="0.0017793594306049821"/><transition target="s1" action="java.util.ArrayList.get(int)" proba="0.014234875444839857"/></state><state id="s2"><transition target="s3" action="java.util.ArrayList.add(java.lang.Object)" proba="0.8571428571428571"/><transition target="s5" action="java.util.ArrayList.addAll(java.util.Collection)" proba="0.04395604395604396"/><transition target="sX" action="epsilon" proba="0.07692307692307693"/><transition target="s9" action="java.util.ArrayList.size()" proba="0.01098901098901099"/><transition target="s2" action="java.util.ArrayList.&lt;init>(int)" proba="0.01098901098901099"/></state><state id="s3"><transition target="s3" action="java.util.ArrayList.add(java.lang.Object)" proba="0.20636792452830188"/><transition target="s4" action="java.util.ArrayList.&lt;init>()" proba="0.0011792452830188679"/><transition target="s5" action="java.util.ArrayList.addAll(java.util.Collection)" proba="0.025943396226415096"/><transition target="s6" action="java.util.ArrayList.contains(java.lang.Object)" proba="0.008254716981132075"/><transition target="s7" action="java.util.ArrayList.iterator()" proba="0.0294811320754717"/><transition target="sX" action="epsilon" proba="0.6804245283018868"/><transition target="s8" action="java.util.ArrayList.toArray(java.lang.Object[])" proba="0.0011792452830188679"/><transition target="s9" action="java.util.ArrayList.size()" proba="0.02358490566037736"/><transition target="s22" action="java.util.ArrayList.hasNext()" proba="0.0011792452830188679"/><transition target="s21" action="java.util.ArrayList.set(int,java.lang.Object)" proba="0.003537735849056604"/><transition target="s13" action="java.util.ArrayList.toArray()" proba="0.0023584905660377358"/><transition target="s24" action="java.util.ArrayList.indexOf(java.lang.Object)" proba="0.0011792452830188679"/><transition target="s12" action="java.util.ArrayList.isEmpty()" proba="0.008254716981132075"/><transition target="s26" action="java.util.ArrayList.get(java.lang.String)" proba="0.0011792452830188679"/><transition target="s1" action="java.util.ArrayList.get(int)" proba="0.00589622641509434"/></state><state id="s4"><transition target="s3" action="java.util.ArrayList.add(java.lang.Object)" proba="0.8269230769230769"/><transition target="s4" action="java.util.ArrayList.&lt;init>()" proba="0.005917159763313609"/><transition target="s5" action="java.util.ArrayList.addAll(java.util.Collection)" proba="0.057692307692307696"/><transition target="s11" action="java.util.ArrayList.getMessage()" proba="0.0014792899408284023"/><transition target="s6" action="java.util.ArrayList.contains(java.lang.Object)" proba="0.016272189349112426"/><transition target="s13" action="java.util.ArrayList.toArray()" proba="0.0029585798816568047"/><transition target="s7" action="java.util.ArrayList.iterator()" proba="0.008875739644970414"/><transition target="s24" action="java.util.ArrayList.indexOf(java.lang.Object)" proba="0.0014792899408284023"/><transition target="sX" action="epsilon" proba="0.0650887573964497"/><transition target="s9" action="java.util.ArrayList.size()" proba="0.010355029585798817"/><transition target="s15" action="java.util.ArrayList.remove(java.lang.Object)" proba="0.0014792899408284023"/><transition target="s17" action="java.util.ArrayList.toString()" proba="0.0014792899408284023"/></state><state id="s5"><transition target="s3" action="java.util.ArrayList.add(java.lang.Object)" proba="0.07368421052631578"/><transition target="s5" action="java.util.ArrayList.addAll(java.util.Collection)" proba="0.28421052631578947"/><transition target="s7" action="java.util.ArrayList.iterator()" proba="0.042105263157894736"/><transition target="sX" action="epsilon" proba="0.5052631578947369"/><transition target="s8" action="java.util.ArrayList.toArray(java.lang.Object[])" proba="0.010526315789473684"/><transition target="s12" action="java.util.ArrayList.isEmpty()" proba="0.010526315789473684"/><transition target="s9" action="java.util.ArrayList.size()" proba="0.05263157894736842"/><transition target="s18" action="java.util.ArrayList.subList(int,int)" proba="0.010526315789473684"/><transition target="s1" action="java.util.ArrayList.get(int)" proba="0.010526315789473684"/></state><state id="s6"><transition target="s3" action="java.util.ArrayList.add(java.lang.Object)" proba="0.47619047619047616"/><transition target="s6" action="java.util.ArrayList.contains(java.lang.Object)" proba="0.09523809523809523"/><transition target="sX" action="epsilon" proba="0.38095238095238093"/><transition target="s15" action="java.util.ArrayList.remove(java.lang.Object)" proba="0.047619047619047616"/></state><state id="s7"><transition target="s4" action="java.util.ArrayList.&lt;init>()" proba="0.05172413793103448"/><transition target="s22" action="java.util.ArrayList.hasNext()" proba="0.017241379310344827"/><transition target="s7" action="java.util.ArrayList.iterator()" proba="0.08620689655172414"/><transition target="sX" action="epsilon" proba="0.7586206896551724"/><transition target="s15" action="java.util.ArrayList.remove(java.lang.Object)" proba="0.034482758620689655"/><transition target="s25" action="java.util.ArrayList.clear()" proba="0.017241379310344827"/><transition target="s27" action="java.util.ArrayList.getFieldList()" proba="0.017241379310344827"/><transition target="s19" action="java.util.ArrayList.getLength()" proba="0.017241379310344827"/></state><state id="s8"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s9"><transition target="s3" action="java.util.ArrayList.add(java.lang.Object)" proba="0.16666666666666666"/><transition target="s5" action="java.util.ArrayList.addAll(java.util.Collection)" proba="0.023809523809523808"/><transition target="s10" action="java.util.ArrayList.&lt;init>(java.util.Collection)" proba="0.047619047619047616"/><transition target="s7" action="java.util.ArrayList.iterator()" proba="0.2857142857142857"/><transition target="s8" action="java.util.ArrayList.toArray(java.lang.Object[])" proba="0.11904761904761904"/><transition target="sX" action="epsilon" proba="0.07142857142857142"/><transition target="s9" action="java.util.ArrayList.size()" proba="0.14285714285714285"/><transition target="s1" action="java.util.ArrayList.get(int)" proba="0.14285714285714285"/></state><state id="s20"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s22"><transition target="s23" action="java.util.ArrayList.next()" proba="1.0"/></state><state id="s21"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s24"><transition target="s3" action="java.util.ArrayList.add(java.lang.Object)" proba="0.3333333333333333"/><transition target="s1" action="java.util.ArrayList.get(int)" proba="0.6666666666666666"/></state><state id="s23"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s26"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s25"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s27"><transition target="s12" action="java.util.ArrayList.isEmpty()" proba="1.0"/></state></states></ts>