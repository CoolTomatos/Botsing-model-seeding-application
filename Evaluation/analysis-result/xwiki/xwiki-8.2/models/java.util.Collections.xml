<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="java.util.Collections.emptyList()" proba="0.08928571428571429"/><transition target="s4" action="java.util.Collections.emptyMap()" proba="0.008928571428571428"/><transition target="s11" action="java.util.Collections.unmodifiableList(java.util.List)" proba="0.013392857142857142"/><transition target="s10" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.013392857142857142"/><transition target="s13" action="java.util.Collections.reverseOrder()" proba="0.004464285714285714"/><transition target="sX" action="epsilon" proba="0.84375"/><transition target="s12" action="java.util.Collections.sort(java.util.List)" proba="0.008928571428571428"/><transition target="s15" action="java.util.Collections.iterator()" proba="0.013392857142857142"/><transition target="s2" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="0.004464285714285714"/></state><state id="s4"><transition target="s3" action="java.util.Collections.emptyList()" proba="0.011627906976744186"/><transition target="s4" action="java.util.Collections.emptyMap()" proba="0.13953488372093023"/><transition target="s6" action="java.util.Collections.unmodifiableMap(java.util.Map)" proba="0.023255813953488372"/><transition target="s10" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.011627906976744186"/><transition target="sX" action="epsilon" proba="0.8023255813953488"/><transition target="s1" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.011627906976744186"/></state><state id="s5"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s6"><transition target="s4" action="java.util.Collections.emptyMap()" proba="0.1111111111111111"/><transition target="s7" action="java.util.Collections.unmodifiableSet(java.util.Set)" proba="0.05555555555555555"/><transition target="sX" action="epsilon" proba="0.8333333333333334"/></state><state id="s7"><transition target="sX" action="epsilon" proba="0.9166666666666666"/><transition target="s9" action="java.util.Collections.emptySet()" proba="0.08333333333333333"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s8"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s9"><transition target="sX" action="epsilon" proba="0.9375"/><transition target="s9" action="java.util.Collections.emptySet()" proba="0.0625"/></state><state id="s20"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s11"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s22"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s10"><transition target="s3" action="java.util.Collections.emptyList()" proba="0.08333333333333333"/><transition target="s10" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.125"/><transition target="sX" action="epsilon" proba="0.7708333333333334"/><transition target="s1" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.020833333333333332"/></state><state id="s21"><transition target="sX" action="epsilon" proba="0.5"/><transition target="s18" action="java.util.Collections.synchronizedMap(java.util.Map)" proba="0.5"/></state><state id="s13"><transition target="s2" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="1.0"/></state><state id="s12"><transition target="s3" action="java.util.Collections.emptyList()" proba="0.06666666666666667"/><transition target="s11" action="java.util.Collections.unmodifiableList(java.util.List)" proba="0.13333333333333333"/><transition target="sX" action="epsilon" proba="0.7333333333333333"/><transition target="s2" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="0.06666666666666667"/></state><state id="s15"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s14"><transition target="sX" action="epsilon" proba="0.7142857142857143"/><transition target="s14" action="java.util.Collections.singleton(java.lang.Object)" proba="0.2857142857142857"/></state><state id="s17"><transition target="s3" action="java.util.Collections.emptyList()" proba="0.26666666666666666"/><transition target="sX" action="epsilon" proba="0.7333333333333333"/></state><state id="s16"><transition target="s3" action="java.util.Collections.emptyList()" proba="0.16666666666666666"/><transition target="sX" action="epsilon" proba="0.8333333333333334"/></state><state id="s19"><transition target="sX" action="epsilon" proba="0.5"/><transition target="s19" action="java.util.Collections.emptyIterator()" proba="0.25"/><transition target="s1" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.25"/></state><state id="s18"><transition target="s3" action="java.util.Collections.emptyList()" proba="0.2"/><transition target="s21" action="java.util.Collections.synchronizedList(java.util.List)" proba="0.2"/><transition target="sX" action="epsilon" proba="0.6"/></state><state id="s0"><transition target="s3" action="java.util.Collections.emptyList()" proba="0.4152173913043478"/><transition target="s4" action="java.util.Collections.emptyMap()" proba="0.15217391304347827"/><transition target="s5" action="java.util.Collections.newSetFromMap(java.util.Map)" proba="0.002173913043478261"/><transition target="s6" action="java.util.Collections.unmodifiableMap(java.util.Map)" proba="0.034782608695652174"/><transition target="s7" action="java.util.Collections.unmodifiableSet(java.util.Set)" proba="0.02391304347826087"/><transition target="s8" action="java.util.Collections.addAll(java.util.Collection,java.lang.Object[])" proba="0.008695652173913044"/><transition target="s9" action="java.util.Collections.emptySet()" proba="0.030434782608695653"/><transition target="s20" action="java.util.Collections.enumeration(java.util.Collection)" proba="0.006521739130434782"/><transition target="s11" action="java.util.Collections.unmodifiableList(java.util.List)" proba="0.03695652173913044"/><transition target="s22" action="java.util.Collections.min(java.util.Collection)" proba="0.002173913043478261"/><transition target="s10" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.08043478260869565"/><transition target="s21" action="java.util.Collections.synchronizedList(java.util.List)" proba="0.002173913043478261"/><transition target="s12" action="java.util.Collections.sort(java.util.List)" proba="0.02826086956521739"/><transition target="s14" action="java.util.Collections.singleton(java.lang.Object)" proba="0.010869565217391304"/><transition target="s17" action="java.util.Collections.reverse(java.util.List)" proba="0.03260869565217391"/><transition target="s16" action="java.util.Collections.unmodifiableCollection(java.util.Collection)" proba="0.02608695652173913"/><transition target="s19" action="java.util.Collections.emptyIterator()" proba="0.004347826086956522"/><transition target="s18" action="java.util.Collections.synchronizedMap(java.util.Map)" proba="0.008695652173913044"/><transition target="s1" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.043478260869565216"/><transition target="s2" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="0.05"/></state><state id="s1"><transition target="s10" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.02702702702702703"/><transition target="sX" action="epsilon" proba="0.5675675675675675"/><transition target="s19" action="java.util.Collections.emptyIterator()" proba="0.02702702702702703"/><transition target="s1" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.3783783783783784"/></state><state id="s2"><transition target="sX" action="epsilon" proba="0.896551724137931"/><transition target="s2" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="0.10344827586206896"/></state></states></ts>