<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="s4" action="java.util.Collection.getId()" proba="1.0"/></state><state id="s4"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s5"><transition target="s7" action="java.util.Collection.add(java.lang.Object)" proba="0.1111111111111111"/><transition target="sX" action="epsilon" proba="0.8888888888888888"/></state><state id="s6"><transition target="s6" action="java.util.Collection.size()" proba="0.07142857142857142"/><transition target="sX" action="epsilon" proba="0.17142857142857143"/><transition target="s1" action="java.util.Collection.iterator()" proba="0.7571428571428571"/></state><state id="s7"><transition target="sX" action="epsilon" proba="0.9473684210526315"/><transition target="s2" action="java.util.Collection.isEmpty()" proba="0.05263157894736842"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s8"><transition target="sX" action="epsilon" proba="0.8333333333333334"/><transition target="s8" action="java.util.Collection.contains(java.lang.Object)" proba="0.1111111111111111"/><transition target="s1" action="java.util.Collection.iterator()" proba="0.05555555555555555"/></state><state id="s9"><transition target="s6" action="java.util.Collection.size()" proba="0.5"/><transition target="sX" action="epsilon" proba="0.5"/></state><state id="s11"><transition target="s11" action="java.util.Collection.toString()" proba="0.5"/><transition target="sX" action="epsilon" proba="0.5"/></state><state id="s10"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s13"><transition target="s12" action="java.util.Collection.addAll(java.util.Collection)" proba="1.0"/></state><state id="s12"><transition target="sX" action="epsilon" proba="0.9090909090909091"/><transition target="s12" action="java.util.Collection.addAll(java.util.Collection)" proba="0.09090909090909091"/></state><state id="s14"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s0"><transition target="s6" action="java.util.Collection.size()" proba="0.224"/><transition target="s10" action="java.util.Collection.remove(java.lang.Object)" proba="0.012"/><transition target="s7" action="java.util.Collection.add(java.lang.Object)" proba="0.072"/><transition target="s13" action="java.util.Collection.clear()" proba="0.004"/><transition target="s8" action="java.util.Collection.contains(java.lang.Object)" proba="0.06"/><transition target="s12" action="java.util.Collection.addAll(java.util.Collection)" proba="0.036"/><transition target="s9" action="java.util.Collection.toArray()" proba="0.008"/><transition target="s1" action="java.util.Collection.iterator()" proba="0.404"/><transition target="s2" action="java.util.Collection.isEmpty()" proba="0.18"/></state><state id="s1"><transition target="s3" action="java.util.Collection.isValid(java.lang.String)" proba="0.011428571428571429"/><transition target="s5" action="java.util.Collection.next()" proba="0.05142857142857143"/><transition target="s11" action="java.util.Collection.toString()" proba="0.005714285714285714"/><transition target="s6" action="java.util.Collection.size()" proba="0.005714285714285714"/><transition target="sX" action="epsilon" proba="0.9142857142857143"/><transition target="s8" action="java.util.Collection.contains(java.lang.Object)" proba="0.005714285714285714"/><transition target="s14" action="java.util.Collection.createInputFilterStream(java.util.Map)" proba="0.005714285714285714"/></state><state id="s2"><transition target="s6" action="java.util.Collection.size()" proba="0.15217391304347827"/><transition target="sX" action="epsilon" proba="0.41304347826086957"/><transition target="s1" action="java.util.Collection.iterator()" proba="0.43478260869565216"/></state></states></ts>