<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s4"><transition target="s2" action="org.apache.commons.compress.archivers.zip.ZipArchiveEntry.getName()" proba="1.0"/></state><state id="s5"><transition target="s2" action="org.apache.commons.compress.archivers.zip.ZipArchiveEntry.getName()" proba="1.0"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s0"><transition target="s3" action="org.apache.commons.compress.archivers.zip.ZipArchiveEntry.&lt;init>(java.lang.String)" proba="0.5"/><transition target="s1" action="org.apache.commons.compress.archivers.zip.ZipArchiveEntry.isDirectory()" proba="0.375"/><transition target="s2" action="org.apache.commons.compress.archivers.zip.ZipArchiveEntry.getName()" proba="0.125"/></state><state id="s1"><transition target="s2" action="org.apache.commons.compress.archivers.zip.ZipArchiveEntry.getName()" proba="1.0"/></state><state id="s2"><transition target="s4" action="org.apache.commons.compress.archivers.zip.ZipArchiveEntry.startsWith(java.lang.String)" proba="0.14285714285714285"/><transition target="s5" action="org.apache.commons.compress.archivers.zip.ZipArchiveEntry.equals(java.lang.Object)" proba="0.14285714285714285"/><transition target="sX" action="epsilon" proba="0.5714285714285714"/><transition target="s2" action="org.apache.commons.compress.archivers.zip.ZipArchiveEntry.getName()" proba="0.14285714285714285"/></state></states></ts>