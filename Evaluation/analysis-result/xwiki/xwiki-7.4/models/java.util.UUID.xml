<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s4"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s5"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s0"><transition target="s3" action="java.util.UUID.fromString(java.lang.String)" proba="0.02564102564102564"/><transition target="s4" action="java.util.UUID.hashCode()" proba="0.02564102564102564"/><transition target="s5" action="java.util.UUID.equals(java.lang.Object)" proba="0.02564102564102564"/><transition target="s1" action="java.util.UUID.randomUUID()" proba="0.8717948717948718"/><transition target="s2" action="java.util.UUID.toString()" proba="0.05128205128205128"/></state><state id="s1"><transition target="sX" action="epsilon" proba="0.02702702702702703"/><transition target="s2" action="java.util.UUID.toString()" proba="0.972972972972973"/></state><state id="s2"><transition target="sX" action="epsilon" proba="0.9210526315789473"/><transition target="s1" action="java.util.UUID.randomUUID()" proba="0.07894736842105263"/></state></states></ts>