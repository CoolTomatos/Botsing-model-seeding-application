<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="java.util.Collections.emptyMap()" proba="0.16"/><transition target="s4" action="java.util.Collections.emptyList()" proba="0.03333333333333333"/><transition target="sX" action="epsilon" proba="0.74"/><transition target="s9" action="java.util.Collections.unmodifiableMap(java.util.Map)" proba="0.013333333333333334"/><transition target="s1" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.02"/><transition target="s2" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.03333333333333333"/></state><state id="s4"><transition target="s3" action="java.util.Collections.emptyMap()" proba="0.018018018018018018"/><transition target="s20" action="java.util.Collections.reverseOrder()" proba="0.003003003003003003"/><transition target="s4" action="java.util.Collections.emptyList()" proba="0.23423423423423423"/><transition target="s5" action="java.util.Collections.unmodifiableList(java.util.List)" proba="0.009009009009009009"/><transition target="s10" action="java.util.Collections.iterator()" proba="0.009009009009009009"/><transition target="s13" action="java.util.Collections.emptySet()" proba="0.009009009009009009"/><transition target="s7" action="java.util.Collections.sort(java.util.List)" proba="0.006006006006006006"/><transition target="sX" action="epsilon" proba="0.6906906906906907"/><transition target="s12" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="0.003003003003003003"/><transition target="s2" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.018018018018018018"/></state><state id="s5"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s6"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s7"><transition target="s5" action="java.util.Collections.unmodifiableList(java.util.List)" proba="0.10526315789473684"/><transition target="sX" action="epsilon" proba="0.8421052631578947"/><transition target="s12" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="0.05263157894736842"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s8"><transition target="s4" action="java.util.Collections.emptyList()" proba="0.05"/><transition target="sX" action="epsilon" proba="0.5"/><transition target="s8" action="java.util.Collections.singleton(java.lang.Object)" proba="0.3"/><transition target="s2" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.15"/></state><state id="s9"><transition target="s3" action="java.util.Collections.emptyMap()" proba="0.11764705882352941"/><transition target="sX" action="epsilon" proba="0.8823529411764706"/></state><state id="s20"><transition target="s12" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="1.0"/></state><state id="s11"><transition target="s11" action="java.util.Collections.emptyIterator()" proba="0.25"/><transition target="sX" action="epsilon" proba="0.5"/><transition target="s1" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.25"/></state><state id="s22"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s10"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s21"><transition target="sX" action="epsilon" proba="0.5"/><transition target="s17" action="java.util.Collections.synchronizedMap(java.util.Map)" proba="0.5"/></state><state id="s13"><transition target="s13" action="java.util.Collections.emptySet()" proba="0.16"/><transition target="sX" action="epsilon" proba="0.8"/><transition target="s8" action="java.util.Collections.singleton(java.lang.Object)" proba="0.04"/></state><state id="s12"><transition target="s12" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="0.1"/><transition target="sX" action="epsilon" proba="0.9"/></state><state id="s15"><transition target="s4" action="java.util.Collections.emptyList()" proba="0.16666666666666666"/><transition target="sX" action="epsilon" proba="0.8333333333333334"/></state><state id="s14"><transition target="s4" action="java.util.Collections.emptyList()" proba="0.26666666666666666"/><transition target="sX" action="epsilon" proba="0.7333333333333333"/></state><state id="s17"><transition target="s4" action="java.util.Collections.emptyList()" proba="0.2"/><transition target="s21" action="java.util.Collections.synchronizedList(java.util.List)" proba="0.2"/><transition target="sX" action="epsilon" proba="0.6"/></state><state id="s16"><transition target="s13" action="java.util.Collections.emptySet()" proba="0.09090909090909091"/><transition target="sX" action="epsilon" proba="0.9090909090909091"/></state><state id="s19"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s18"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s0"><transition target="s3" action="java.util.Collections.emptyMap()" proba="0.18195956454121306"/><transition target="s4" action="java.util.Collections.emptyList()" proba="0.3654743390357698"/><transition target="s5" action="java.util.Collections.unmodifiableList(java.util.List)" proba="0.02177293934681182"/><transition target="s6" action="java.util.Collections.newSetFromMap(java.util.Map)" proba="0.0015552099533437014"/><transition target="s7" action="java.util.Collections.sort(java.util.List)" proba="0.026438569206842923"/><transition target="s8" action="java.util.Collections.singleton(java.lang.Object)" proba="0.01866251944012442"/><transition target="s9" action="java.util.Collections.unmodifiableMap(java.util.Map)" proba="0.02332814930015552"/><transition target="s11" action="java.util.Collections.emptyIterator()" proba="0.003110419906687403"/><transition target="s22" action="java.util.Collections.min(java.util.Collection)" proba="0.0015552099533437014"/><transition target="s21" action="java.util.Collections.synchronizedList(java.util.List)" proba="0.0015552099533437014"/><transition target="s13" action="java.util.Collections.emptySet()" proba="0.026438569206842923"/><transition target="s12" action="java.util.Collections.sort(java.util.List,java.util.Comparator)" proba="0.03732503888024884"/><transition target="s15" action="java.util.Collections.unmodifiableCollection(java.util.Collection)" proba="0.01866251944012442"/><transition target="s14" action="java.util.Collections.reverse(java.util.List)" proba="0.02332814930015552"/><transition target="s17" action="java.util.Collections.synchronizedMap(java.util.Map)" proba="0.006220839813374806"/><transition target="s16" action="java.util.Collections.unmodifiableSet(java.util.Set)" proba="0.017107309486780714"/><transition target="s19" action="java.util.Collections.enumeration(java.util.Collection)" proba="0.004665629860031105"/><transition target="s18" action="java.util.Collections.addAll(java.util.Collection,java.lang.Object[])" proba="0.006220839813374806"/><transition target="s1" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.1057542768273717"/><transition target="s2" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.1088646967340591"/></state><state id="s1"><transition target="s3" action="java.util.Collections.emptyMap()" proba="0.009708737864077669"/><transition target="s11" action="java.util.Collections.emptyIterator()" proba="0.009708737864077669"/><transition target="sX" action="epsilon" proba="0.7087378640776699"/><transition target="s1" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.24271844660194175"/><transition target="s2" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.02912621359223301"/></state><state id="s2"><transition target="s4" action="java.util.Collections.emptyList()" proba="0.0660377358490566"/><transition target="sX" action="epsilon" proba="0.6886792452830188"/><transition target="s8" action="java.util.Collections.singleton(java.lang.Object)" proba="0.009433962264150943"/><transition target="s1" action="java.util.Collections.singletonMap(java.lang.Object,java.lang.Object)" proba="0.05660377358490566"/><transition target="s2" action="java.util.Collections.singletonList(java.lang.Object)" proba="0.1792452830188679"/></state></states></ts>