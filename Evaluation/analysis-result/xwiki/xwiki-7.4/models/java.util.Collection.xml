<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="java.util.Collection.add(java.lang.Object)" proba="0.1111111111111111"/><transition target="s4" action="java.util.Collection.isEmpty()" proba="0.037037037037037035"/><transition target="s11" action="java.util.Collection.addAll(java.util.Collection)" proba="0.037037037037037035"/><transition target="sX" action="epsilon" proba="0.7777777777777778"/><transition target="s2" action="java.util.Collection.size()" proba="0.037037037037037035"/></state><state id="s4"><transition target="sX" action="epsilon" proba="0.44680851063829785"/><transition target="s1" action="java.util.Collection.iterator()" proba="0.2553191489361702"/><transition target="s2" action="java.util.Collection.size()" proba="0.2978723404255319"/></state><state id="s5"><transition target="s5" action="java.util.Collection.containsAll(java.util.Collection)" proba="0.5"/><transition target="sX" action="epsilon" proba="0.5"/></state><state id="s6"><transition target="s3" action="java.util.Collection.add(java.lang.Object)" proba="0.02702702702702703"/><transition target="s6" action="java.util.Collection.contains(java.lang.Object)" proba="0.35135135135135137"/><transition target="s10" action="java.util.Collection.toLowerCase()" proba="0.02702702702702703"/><transition target="sX" action="epsilon" proba="0.5135135135135135"/><transition target="s9" action="java.util.Collection.toArray()" proba="0.05405405405405406"/><transition target="s1" action="java.util.Collection.iterator()" proba="0.02702702702702703"/></state><state id="s7"><transition target="s3" action="java.util.Collection.add(java.lang.Object)" proba="0.16666666666666666"/><transition target="sX" action="epsilon" proba="0.8333333333333334"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s8"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s9"><transition target="sX" action="epsilon" proba="0.75"/><transition target="s2" action="java.util.Collection.size()" proba="0.25"/></state><state id="s11"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s10"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s13"><transition target="s14" action="java.util.Collection.getId()" proba="1.0"/></state><state id="s12"><transition target="s11" action="java.util.Collection.addAll(java.util.Collection)" proba="1.0"/></state><state id="s15"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s14"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s16"><transition target="s7" action="java.util.Collection.next()" proba="1.0"/></state><state id="s0"><transition target="s3" action="java.util.Collection.add(java.lang.Object)" proba="0.08203125"/><transition target="s4" action="java.util.Collection.isEmpty()" proba="0.1796875"/><transition target="s11" action="java.util.Collection.addAll(java.util.Collection)" proba="0.0234375"/><transition target="s6" action="java.util.Collection.contains(java.lang.Object)" proba="0.06640625"/><transition target="s8" action="java.util.Collection.remove(java.lang.Object)" proba="0.01171875"/><transition target="s12" action="java.util.Collection.clear()" proba="0.00390625"/><transition target="s9" action="java.util.Collection.toArray()" proba="0.0078125"/><transition target="s1" action="java.util.Collection.iterator()" proba="0.37890625"/><transition target="s2" action="java.util.Collection.size()" proba="0.24609375"/></state><state id="s1"><transition target="s6" action="java.util.Collection.contains(java.lang.Object)" proba="0.012269938650306749"/><transition target="s7" action="java.util.Collection.next()" proba="0.06748466257668712"/><transition target="s13" action="java.util.Collection.isValid(java.lang.String)" proba="0.006134969325153374"/><transition target="sX" action="epsilon" proba="0.901840490797546"/><transition target="s15" action="java.util.Collection.createInputFilterStream(java.util.Map)" proba="0.006134969325153374"/><transition target="s2" action="java.util.Collection.size()" proba="0.006134969325153374"/></state><state id="s2"><transition target="s5" action="java.util.Collection.containsAll(java.util.Collection)" proba="0.023529411764705882"/><transition target="s6" action="java.util.Collection.contains(java.lang.Object)" proba="0.058823529411764705"/><transition target="sX" action="epsilon" proba="0.2235294117647059"/><transition target="s16" action="java.util.Collection.hasNext()" proba="0.011764705882352941"/><transition target="s1" action="java.util.Collection.iterator()" proba="0.6235294117647059"/><transition target="s2" action="java.util.Collection.size()" proba="0.058823529411764705"/></state></states></ts>