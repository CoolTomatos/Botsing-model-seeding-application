<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s0"><transition target="s1" action="org.mockito.invocation.InvocationOnMock.getArguments()" proba="0.6222222222222222"/><transition target="s2" action="org.mockito.invocation.InvocationOnMock.getArgumentAt(int,java.lang.Class)" proba="0.37777777777777777"/></state><state id="s1"><transition target="sX" action="epsilon" proba="0.9310344827586207"/><transition target="s1" action="org.mockito.invocation.InvocationOnMock.getArguments()" proba="0.034482758620689655"/><transition target="s2" action="org.mockito.invocation.InvocationOnMock.getArgumentAt(int,java.lang.Class)" proba="0.034482758620689655"/></state><state id="s2"><transition target="sX" action="epsilon" proba="0.72"/><transition target="s2" action="org.mockito.invocation.InvocationOnMock.getArgumentAt(int,java.lang.Class)" proba="0.28"/></state></states></ts>