<?xml version="1.0"?><ts><start>s0</start><states><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s11"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s10"><transition target="s10" action="org.joda.time.format.DateTimeParserBucket.restoreState(java.lang.Object)" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.5"></transition></state><state id="s13"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s12"><transition target="s13" action="org.joda.time.format.DateTimeParserBucket.saveField(org.joda.time.DateTimeField,int)" proba="1.0"></transition></state><state id="s15"><transition target="s4" action="org.joda.time.format.DateTimeParserBucket.intValue()" proba="0.5"></transition><transition target="s15" action="org.joda.time.format.DateTimeParserBucket.getPivotYear()" proba="0.5"></transition></state><state id="s14"><transition target="sX" action="epsilon" proba="0.6666666666666666"></transition><transition target="s15" action="org.joda.time.format.DateTimeParserBucket.getPivotYear()" proba="0.3333333333333333"></transition></state><state id="s17"><transition target="s18" action="org.joda.time.format.DateTimeParserBucket.access$102(org.joda.time.format.DateTimeParserBucket,java.lang.Integer)" proba="1.0"></transition></state><state id="s16"><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition><transition target="s16" action="org.joda.time.format.DateTimeParserBucket.setOffset(java.lang.Integer)" proba="0.6666666666666666"></transition></state><state id="s19"><transition target="s20" action="org.joda.time.format.DateTimeParserBucket.access$300(org.joda.time.format.DateTimeParserBucket)" proba="1.0"></transition></state><state id="s18"><transition target="s19" action="org.joda.time.format.DateTimeParserBucket.access$202(org.joda.time.format.DateTimeParserBucket,org.joda.time.format.DateTimeParserBucket$SavedField[])" proba="1.0"></transition></state><state id="s0"><transition target="s11" action="org.joda.time.format.DateTimeParserBucket.setZone(org.joda.time.DateTimeZone)" proba="0.11764705882352941"></transition><transition target="s6" action="org.joda.time.format.DateTimeParserBucket.getLocale()" proba="0.11764705882352941"></transition><transition target="s8" action="org.joda.time.format.DateTimeParserBucket.compareReverse(org.joda.time.DurationField,org.joda.time.DurationField)" proba="0.058823529411764705"></transition><transition target="s12" action="org.joda.time.format.DateTimeParserBucket.getChronology()" proba="0.058823529411764705"></transition><transition target="s23" action="org.joda.time.format.DateTimeParserBucket.access$000(org.joda.time.format.DateTimeParserBucket)" proba="0.058823529411764705"></transition><transition target="s9" action="org.joda.time.format.DateTimeParserBucket.saveState()" proba="0.058823529411764705"></transition><transition target="s14" action="org.joda.time.format.DateTimeParserBucket.saveField(org.joda.time.DateTimeFieldType,int)" proba="0.11764705882352941"></transition><transition target="s17" action="org.joda.time.format.DateTimeParserBucket.access$002(org.joda.time.format.DateTimeParserBucket,org.joda.time.DateTimeZone)" proba="0.058823529411764705"></transition><transition target="s16" action="org.joda.time.format.DateTimeParserBucket.setOffset(java.lang.Integer)" proba="0.058823529411764705"></transition><transition target="s1" action="org.joda.time.format.DateTimeParserBucket.&lt;init&gt;(long,org.joda.time.Chronology,java.util.Locale,java.lang.Integer,int)" proba="0.29411764705882354"></transition></state><state id="s1"><transition target="s2" action="org.joda.time.format.DateTimeParserBucket.computeMillis(boolean,java.lang.String)" proba="1.0"></transition></state><state id="s2"><transition target="s3" action="org.joda.time.format.DateTimeParserBucket.getOffsetInteger()" proba="0.8"></transition><transition target="sX" action="epsilon" proba="0.2"></transition></state><state id="s3"><transition target="s3" action="org.joda.time.format.DateTimeParserBucket.getOffsetInteger()" proba="0.5"></transition><transition target="s4" action="org.joda.time.format.DateTimeParserBucket.intValue()" proba="0.5"></transition></state><state id="s4"><transition target="s5" action="org.joda.time.format.DateTimeParserBucket.getZone()" proba="0.8"></transition><transition target="s14" action="org.joda.time.format.DateTimeParserBucket.saveField(org.joda.time.DateTimeFieldType,int)" proba="0.2"></transition></state><state id="s5"><transition target="s5" action="org.joda.time.format.DateTimeParserBucket.getZone()" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.5"></transition></state><state id="s6"><transition target="s7" action="org.joda.time.format.DateTimeParserBucket.saveField(org.joda.time.DateTimeFieldType,java.lang.String,java.util.Locale)" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.5"></transition></state><state id="s7"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="s8" action="org.joda.time.format.DateTimeParserBucket.compareReverse(org.joda.time.DurationField,org.joda.time.DurationField)" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.5"></transition></state><state id="s9"><transition target="s10" action="org.joda.time.format.DateTimeParserBucket.restoreState(java.lang.Object)" proba="0.5"></transition><transition target="s9" action="org.joda.time.format.DateTimeParserBucket.saveState()" proba="0.5"></transition></state><state id="s20"><transition target="s21" action="org.joda.time.format.DateTimeParserBucket.access$402(org.joda.time.format.DateTimeParserBucket,boolean)" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.5"></transition></state><state id="s22"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s21"><transition target="s22" action="org.joda.time.format.DateTimeParserBucket.access$302(org.joda.time.format.DateTimeParserBucket,int)" proba="1.0"></transition></state><state id="s24"><transition target="s25" action="org.joda.time.format.DateTimeParserBucket.access$200(org.joda.time.format.DateTimeParserBucket)" proba="1.0"></transition></state><state id="s23"><transition target="s24" action="org.joda.time.format.DateTimeParserBucket.access$100(org.joda.time.format.DateTimeParserBucket)" proba="1.0"></transition></state><state id="s25"><transition target="s20" action="org.joda.time.format.DateTimeParserBucket.access$300(org.joda.time.format.DateTimeParserBucket)" proba="1.0"></transition></state></states></ts>