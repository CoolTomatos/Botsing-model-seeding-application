<?xml version="1.0"?><ts><start>s0</start><states><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s31"><transition target="s31" action="org.joda.time.format.DateTimeFormatter.parseLocalTime(java.lang.String)" proba="0.4"></transition><transition target="sX" action="epsilon" proba="0.2"></transition><transition target="s18" action="org.joda.time.format.DateTimeFormatter.withChronology(org.joda.time.Chronology)" proba="0.2"></transition><transition target="s2" action="org.joda.time.format.DateTimeFormatter.parseDateTime(java.lang.String)" proba="0.2"></transition></state><state id="s30"><transition target="s22" action="org.joda.time.format.DateTimeFormatter.printTo(java.lang.StringBuffer,long)" proba="1.0"></transition></state><state id="s11"><transition target="s11" action="org.joda.time.format.DateTimeFormatter.withOffsetParsed()" proba="0.043478260869565216"></transition><transition target="s10" action="org.joda.time.format.DateTimeFormatter.withZone(org.joda.time.DateTimeZone)" proba="0.13043478260869565"></transition><transition target="s7" action="org.joda.time.format.DateTimeFormatter.parseInto(org.joda.time.ReadWritableInstant,java.lang.String,int)" proba="0.13043478260869565"></transition><transition target="sX" action="epsilon" proba="0.08695652173913043"></transition><transition target="s23" action="org.joda.time.format.DateTimeFormatter.parseLocalDateTime(java.lang.String)" proba="0.08695652173913043"></transition><transition target="s15" action="org.joda.time.format.DateTimeFormatter.parseMutableDateTime(java.lang.String)" proba="0.13043478260869565"></transition><transition target="s26" action="org.joda.time.format.DateTimeFormatter.isOffsetParsed()" proba="0.043478260869565216"></transition><transition target="s2" action="org.joda.time.format.DateTimeFormatter.parseDateTime(java.lang.String)" proba="0.34782608695652173"></transition></state><state id="s33"><transition target="s34" action="org.joda.time.format.DateTimeFormatter.printTo(java.lang.Appendable,long)" proba="1.0"></transition></state><state id="s10"><transition target="s11" action="org.joda.time.format.DateTimeFormatter.withOffsetParsed()" proba="0.04411764705882353"></transition><transition target="s10" action="org.joda.time.format.DateTimeFormatter.withZone(org.joda.time.DateTimeZone)" proba="0.014705882352941176"></transition><transition target="s6" action="org.joda.time.format.DateTimeFormatter.print(org.joda.time.ReadableInstant)" proba="0.3088235294117647"></transition><transition target="s7" action="org.joda.time.format.DateTimeFormatter.parseInto(org.joda.time.ReadWritableInstant,java.lang.String,int)" proba="0.14705882352941177"></transition><transition target="sX" action="epsilon" proba="0.029411764705882353"></transition><transition target="s23" action="org.joda.time.format.DateTimeFormatter.parseLocalDateTime(java.lang.String)" proba="0.058823529411764705"></transition><transition target="s15" action="org.joda.time.format.DateTimeFormatter.parseMutableDateTime(java.lang.String)" proba="0.14705882352941177"></transition><transition target="s26" action="org.joda.time.format.DateTimeFormatter.isOffsetParsed()" proba="0.014705882352941176"></transition><transition target="s27" action="org.joda.time.format.DateTimeFormatter.getZone()" proba="0.014705882352941176"></transition><transition target="s2" action="org.joda.time.format.DateTimeFormatter.parseDateTime(java.lang.String)" proba="0.22058823529411764"></transition></state><state id="s32"><transition target="s6" action="org.joda.time.format.DateTimeFormatter.print(org.joda.time.ReadableInstant)" proba="0.07692307692307693"></transition><transition target="s13" action="org.joda.time.format.DateTimeFormatter.parseMillis(java.lang.String)" proba="0.15384615384615385"></transition><transition target="s2" action="org.joda.time.format.DateTimeFormatter.parseDateTime(java.lang.String)" proba="0.7692307692307693"></transition></state><state id="s13"><transition target="s13" action="org.joda.time.format.DateTimeFormatter.parseMillis(java.lang.String)" proba="0.2857142857142857"></transition><transition target="sX" action="epsilon" proba="0.7142857142857143"></transition></state><state id="s35"><transition target="s36" action="org.joda.time.format.DateTimeFormatter.printTo(java.io.Writer,long)" proba="1.0"></transition></state><state id="s34"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s12"><transition target="s6" action="org.joda.time.format.DateTimeFormatter.print(org.joda.time.ReadableInstant)" proba="0.8571428571428571"></transition><transition target="sX" action="epsilon" proba="0.04081632653061224"></transition><transition target="s12" action="org.joda.time.format.DateTimeFormatter.withLocale(java.util.Locale)" proba="0.02040816326530612"></transition><transition target="s28" action="org.joda.time.format.DateTimeFormatter.getLocale()" proba="0.02040816326530612"></transition><transition target="s2" action="org.joda.time.format.DateTimeFormatter.parseDateTime(java.lang.String)" proba="0.061224489795918366"></transition></state><state id="s15"><transition target="s11" action="org.joda.time.format.DateTimeFormatter.withOffsetParsed()" proba="0.10526315789473684"></transition><transition target="s10" action="org.joda.time.format.DateTimeFormatter.withZone(org.joda.time.DateTimeZone)" proba="0.3684210526315789"></transition><transition target="sX" action="epsilon" proba="0.3157894736842105"></transition><transition target="s15" action="org.joda.time.format.DateTimeFormatter.parseMutableDateTime(java.lang.String)" proba="0.05263157894736842"></transition><transition target="s18" action="org.joda.time.format.DateTimeFormatter.withChronology(org.joda.time.Chronology)" proba="0.15789473684210525"></transition></state><state id="s37"><transition target="s24" action="org.joda.time.format.DateTimeFormatter.withPivotYear(int)" proba="0.3333333333333333"></transition><transition target="s25" action="org.joda.time.format.DateTimeFormatter.withPivotYear(java.lang.Integer)" proba="0.6666666666666666"></transition></state><state id="s36"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s14"><transition target="s2" action="org.joda.time.format.DateTimeFormatter.parseDateTime(java.lang.String)" proba="1.0"></transition></state><state id="s17"><transition target="s18" action="org.joda.time.format.DateTimeFormatter.withChronology(org.joda.time.Chronology)" proba="1.0"></transition></state><state id="s16"><transition target="sX" action="epsilon" proba="0.25"></transition><transition target="s2" action="org.joda.time.format.DateTimeFormatter.parseDateTime(java.lang.String)" proba="0.75"></transition></state><state id="s19"><transition target="s20" action="org.joda.time.format.DateTimeFormatter.getPrinter()" proba="1.0"></transition></state><state id="s18"><transition target="s6" action="org.joda.time.format.DateTimeFormatter.print(org.joda.time.ReadableInstant)" proba="0.14893617021276595"></transition><transition target="s7" action="org.joda.time.format.DateTimeFormatter.parseInto(org.joda.time.ReadWritableInstant,java.lang.String,int)" proba="0.0851063829787234"></transition><transition target="sX" action="epsilon" proba="0.0425531914893617"></transition><transition target="s9" action="org.joda.time.format.DateTimeFormatter.parseLocalDate(java.lang.String)" proba="0.02127659574468085"></transition><transition target="s31" action="org.joda.time.format.DateTimeFormatter.parseLocalTime(java.lang.String)" proba="0.02127659574468085"></transition><transition target="s22" action="org.joda.time.format.DateTimeFormatter.printTo(java.lang.StringBuffer,long)" proba="0.06382978723404255"></transition><transition target="s10" action="org.joda.time.format.DateTimeFormatter.withZone(org.joda.time.DateTimeZone)" proba="0.3191489361702128"></transition><transition target="s13" action="org.joda.time.format.DateTimeFormatter.parseMillis(java.lang.String)" proba="0.0425531914893617"></transition><transition target="s23" action="org.joda.time.format.DateTimeFormatter.parseLocalDateTime(java.lang.String)" proba="0.02127659574468085"></transition><transition target="s15" action="org.joda.time.format.DateTimeFormatter.parseMutableDateTime(java.lang.String)" proba="0.0851063829787234"></transition><transition target="s17" action="org.joda.time.format.DateTimeFormatter.getChronology()" proba="0.02127659574468085"></transition><transition target="s18" action="org.joda.time.format.DateTimeFormatter.withChronology(org.joda.time.Chronology)" proba="0.02127659574468085"></transition><transition target="s2" action="org.joda.time.format.DateTimeFormatter.parseDateTime(java.lang.String)" proba="0.10638297872340426"></transition></state><state id="s0"><transition target="s31" action="org.joda.time.format.DateTimeFormatter.parseLocalTime(java.lang.String)" proba="0.0078125"></transition><transition target="s30" action="org.joda.time.format.DateTimeFormatter.printTo(java.lang.StringBuffer,org.joda.time.ReadableInstant)" proba="0.00390625"></transition><transition target="s11" action="org.joda.time.format.DateTimeFormatter.withOffsetParsed()" proba="0.015625"></transition><transition target="s33" action="org.joda.time.format.DateTimeFormatter.printTo(java.lang.Appendable,org.joda.time.ReadableInstant)" proba="0.00390625"></transition><transition target="s10" action="org.joda.time.format.DateTimeFormatter.withZone(org.joda.time.DateTimeZone)" proba="0.046875"></transition><transition target="s13" action="org.joda.time.format.DateTimeFormatter.parseMillis(java.lang.String)" proba="0.01953125"></transition><transition target="s35" action="org.joda.time.format.DateTimeFormatter.printTo(java.io.Writer,org.joda.time.ReadableInstant)" proba="0.00390625"></transition><transition target="s12" action="org.joda.time.format.DateTimeFormatter.withLocale(java.util.Locale)" proba="0.0078125"></transition><transition target="s15" action="org.joda.time.format.DateTimeFormatter.parseMutableDateTime(java.lang.String)" proba="0.00390625"></transition><transition target="s37" action="org.joda.time.format.DateTimeFormatter.getPivotYear()" proba="0.00390625"></transition><transition target="s17" action="org.joda.time.format.DateTimeFormatter.getChronology()" proba="0.00390625"></transition><transition target="s19" action="org.joda.time.format.DateTimeFormatter.&lt;init&gt;(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser)" proba="0.00390625"></transition><transition target="s18" action="org.joda.time.format.DateTimeFormatter.withChronology(org.joda.time.Chronology)" proba="0.04296875"></transition><transition target="s1" action="org.joda.time.format.DateTimeFormatter.print(org.joda.time.ReadablePartial)" proba="0.15625"></transition><transition target="s2" action="org.joda.time.format.DateTimeFormatter.parseDateTime(java.lang.String)" proba="0.1484375"></transition><transition target="s4" action="org.joda.time.format.DateTimeFormatter.isPrinter()" proba="0.03125"></transition><transition target="s6" action="org.joda.time.format.DateTimeFormatter.print(org.joda.time.ReadableInstant)" proba="0.28515625"></transition><transition target="s7" action="org.joda.time.format.DateTimeFormatter.parseInto(org.joda.time.ReadWritableInstant,java.lang.String,int)" proba="0.078125"></transition><transition target="s9" action="org.joda.time.format.DateTimeFormatter.parseLocalDate(java.lang.String)" proba="0.0703125"></transition><transition target="s20" action="org.joda.time.format.DateTimeFormatter.getPrinter()" proba="0.01171875"></transition><transition target="s24" action="org.joda.time.format.DateTimeFormatter.withPivotYear(int)" proba="0.00390625"></transition><transition target="s23" action="org.joda.time.format.DateTimeFormatter.parseLocalDateTime(java.lang.String)" proba="0.01953125"></transition><transition target="s26" action="org.joda.time.format.DateTimeFormatter.isOffsetParsed()" proba="0.00390625"></transition><transition target="s28" action="org.joda.time.format.DateTimeFormatter.getLocale()" proba="0.00390625"></transition><transition target="s27" action="org.joda.time.format.DateTimeFormatter.getZone()" proba="0.01953125"></transition></state><state id="s1"><transition target="sX" action="epsilon" proba="0.3076923076923077"></transition><transition target="s1" action="org.joda.time.format.DateTimeFormatter.print(org.joda.time.ReadablePartial)" proba="0.6923076923076923"></transition></state><state id="s2"><transition target="s3" action="org.joda.time.format.DateTimeFormatter.toMutableDateTime()" proba="0.0051813471502590676"></transition><transition target="s6" action="org.joda.time.format.DateTimeFormatter.print(org.joda.time.ReadableInstant)" proba="0.0051813471502590676"></transition><transition target="sX" action="epsilon" proba="0.3471502590673575"></transition><transition target="s8" action="org.joda.time.format.DateTimeFormatter.toDateMidnight()" proba="0.0051813471502590676"></transition><transition target="s11" action="org.joda.time.format.DateTimeFormatter.withOffsetParsed()" proba="0.03626943005181347"></transition><transition target="s10" action="org.joda.time.format.DateTimeFormatter.withZone(org.joda.time.DateTimeZone)" proba="0.05181347150259067"></transition><transition target="s32" action="org.joda.time.format.DateTimeFormatter.withZoneUTC()" proba="0.03626943005181347"></transition><transition target="s14" action="org.joda.time.format.DateTimeFormatter.getYear()" proba="0.02072538860103627"></transition><transition target="s25" action="org.joda.time.format.DateTimeFormatter.withPivotYear(java.lang.Integer)" proba="0.015544041450777202"></transition><transition target="s27" action="org.joda.time.format.DateTimeFormatter.getZone()" proba="0.010362694300518135"></transition><transition target="s19" action="org.joda.time.format.DateTimeFormatter.&lt;init&gt;(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser)" proba="0.010362694300518135"></transition><transition target="s29" action="org.joda.time.format.DateTimeFormatter.toInstant()" proba="0.0051813471502590676"></transition><transition target="s18" action="org.joda.time.format.DateTimeFormatter.withChronology(org.joda.time.Chronology)" proba="0.015544041450777202"></transition><transition target="s2" action="org.joda.time.format.DateTimeFormatter.parseDateTime(java.lang.String)" proba="0.43523316062176165"></transition></state><state id="s3"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s4"><transition target="s5" action="org.joda.time.format.DateTimeFormatter.isParser()" proba="1.0"></transition></state><state id="s5"><transition target="s6" action="org.joda.time.format.DateTimeFormatter.print(org.joda.time.ReadableInstant)" proba="0.45454545454545453"></transition><transition target="s32" action="org.joda.time.format.DateTimeFormatter.withZoneUTC()" proba="0.18181818181818182"></transition><transition target="s16" action="org.joda.time.format.DateTimeFormatter.print(long)" proba="0.36363636363636365"></transition></state><state id="s6"><transition target="s6" action="org.joda.time.format.DateTimeFormatter.print(org.joda.time.ReadableInstant)" proba="0.3951612903225806"></transition><transition target="s10" action="org.joda.time.format.DateTimeFormatter.withZone(org.joda.time.DateTimeZone)" proba="0.028225806451612902"></transition><transition target="s32" action="org.joda.time.format.DateTimeFormatter.withZoneUTC()" proba="0.016129032258064516"></transition><transition target="sX" action="epsilon" proba="0.23387096774193547"></transition><transition target="s12" action="org.joda.time.format.DateTimeFormatter.withLocale(java.util.Locale)" proba="0.1774193548387097"></transition><transition target="s23" action="org.joda.time.format.DateTimeFormatter.parseLocalDateTime(java.lang.String)" proba="0.008064516129032258"></transition><transition target="s18" action="org.joda.time.format.DateTimeFormatter.withChronology(org.joda.time.Chronology)" proba="0.08064516129032258"></transition><transition target="s2" action="org.joda.time.format.DateTimeFormatter.parseDateTime(java.lang.String)" proba="0.06048387096774194"></transition></state><state id="s7"><transition target="s11" action="org.joda.time.format.DateTimeFormatter.withOffsetParsed()" proba="0.04878048780487805"></transition><transition target="s10" action="org.joda.time.format.DateTimeFormatter.withZone(org.joda.time.DateTimeZone)" proba="0.17073170731707318"></transition><transition target="s7" action="org.joda.time.format.DateTimeFormatter.parseInto(org.joda.time.ReadWritableInstant,java.lang.String,int)" proba="0.0975609756097561"></transition><transition target="sX" action="epsilon" proba="0.6097560975609756"></transition><transition target="s18" action="org.joda.time.format.DateTimeFormatter.withChronology(org.joda.time.Chronology)" proba="0.07317073170731707"></transition></state><state id="s8"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s9"><transition target="sX" action="epsilon" proba="0.7083333333333334"></transition><transition target="s9" action="org.joda.time.format.DateTimeFormatter.parseLocalDate(java.lang.String)" proba="0.20833333333333334"></transition><transition target="s18" action="org.joda.time.format.DateTimeFormatter.withChronology(org.joda.time.Chronology)" proba="0.041666666666666664"></transition><transition target="s2" action="org.joda.time.format.DateTimeFormatter.parseDateTime(java.lang.String)" proba="0.041666666666666664"></transition></state><state id="s20"><transition target="s20" action="org.joda.time.format.DateTimeFormatter.getPrinter()" proba="0.1111111111111111"></transition><transition target="s21" action="org.joda.time.format.DateTimeFormatter.getParser()" proba="0.7777777777777778"></transition><transition target="sX" action="epsilon" proba="0.1111111111111111"></transition></state><state id="s22"><transition target="s22" action="org.joda.time.format.DateTimeFormatter.printTo(java.lang.StringBuffer,long)" proba="0.3333333333333333"></transition><transition target="sX" action="epsilon" proba="0.6666666666666666"></transition></state><state id="s21"><transition target="s20" action="org.joda.time.format.DateTimeFormatter.getPrinter()" proba="0.25"></transition><transition target="s4" action="org.joda.time.format.DateTimeFormatter.isPrinter()" proba="0.375"></transition><transition target="s21" action="org.joda.time.format.DateTimeFormatter.getParser()" proba="0.125"></transition><transition target="sX" action="epsilon" proba="0.25"></transition></state><state id="s24"><transition target="s37" action="org.joda.time.format.DateTimeFormatter.getPivotYear()" proba="0.5"></transition><transition target="s25" action="org.joda.time.format.DateTimeFormatter.withPivotYear(java.lang.Integer)" proba="0.5"></transition></state><state id="s23"><transition target="s11" action="org.joda.time.format.DateTimeFormatter.withOffsetParsed()" proba="0.125"></transition><transition target="s10" action="org.joda.time.format.DateTimeFormatter.withZone(org.joda.time.DateTimeZone)" proba="0.1875"></transition><transition target="sX" action="epsilon" proba="0.4375"></transition><transition target="s23" action="org.joda.time.format.DateTimeFormatter.parseLocalDateTime(java.lang.String)" proba="0.125"></transition><transition target="s18" action="org.joda.time.format.DateTimeFormatter.withChronology(org.joda.time.Chronology)" proba="0.0625"></transition><transition target="s2" action="org.joda.time.format.DateTimeFormatter.parseDateTime(java.lang.String)" proba="0.0625"></transition></state><state id="s26"><transition target="s27" action="org.joda.time.format.DateTimeFormatter.getZone()" proba="1.0"></transition></state><state id="s25"><transition target="sX" action="epsilon" proba="0.2857142857142857"></transition><transition target="s37" action="org.joda.time.format.DateTimeFormatter.getPivotYear()" proba="0.14285714285714285"></transition><transition target="s25" action="org.joda.time.format.DateTimeFormatter.withPivotYear(java.lang.Integer)" proba="0.14285714285714285"></transition><transition target="s2" action="org.joda.time.format.DateTimeFormatter.parseDateTime(java.lang.String)" proba="0.42857142857142855"></transition></state><state id="s28"><transition target="s12" action="org.joda.time.format.DateTimeFormatter.withLocale(java.util.Locale)" proba="1.0"></transition></state><state id="s27"><transition target="s11" action="org.joda.time.format.DateTimeFormatter.withOffsetParsed()" proba="0.15384615384615385"></transition><transition target="s10" action="org.joda.time.format.DateTimeFormatter.withZone(org.joda.time.DateTimeZone)" proba="0.23076923076923078"></transition><transition target="s13" action="org.joda.time.format.DateTimeFormatter.parseMillis(java.lang.String)" proba="0.07692307692307693"></transition><transition target="sX" action="epsilon" proba="0.15384615384615385"></transition><transition target="s26" action="org.joda.time.format.DateTimeFormatter.isOffsetParsed()" proba="0.07692307692307693"></transition><transition target="s27" action="org.joda.time.format.DateTimeFormatter.getZone()" proba="0.07692307692307693"></transition><transition target="s18" action="org.joda.time.format.DateTimeFormatter.withChronology(org.joda.time.Chronology)" proba="0.07692307692307693"></transition><transition target="s2" action="org.joda.time.format.DateTimeFormatter.parseDateTime(java.lang.String)" proba="0.15384615384615385"></transition></state><state id="s29"><transition target="sX" action="epsilon" proba="1.0"></transition></state></states></ts>