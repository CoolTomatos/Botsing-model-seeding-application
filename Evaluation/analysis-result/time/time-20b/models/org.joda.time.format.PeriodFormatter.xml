<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="org.joda.time.format.PeriodFormatter.getPrinter()" proba="0.005076142131979695"></transition><transition target="s4" action="org.joda.time.format.PeriodFormatter.calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale)" proba="0.47715736040609136"></transition><transition target="s5" action="org.joda.time.format.PeriodFormatter.countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale)" proba="0.47715736040609136"></transition><transition target="s7" action="org.joda.time.format.PeriodFormatter.getParser()" proba="0.04060913705583756"></transition></state><state id="s4"><transition target="s3" action="org.joda.time.format.PeriodFormatter.getPrinter()" proba="1.0"></transition></state><state id="s5"><transition target="sX" action="epsilon" proba="0.35106382978723405"></transition><transition target="s2" action="org.joda.time.format.PeriodFormatter.print(org.joda.time.ReadablePeriod)" proba="0.648936170212766"></transition></state><state id="s6"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s7"><transition target="s3" action="org.joda.time.format.PeriodFormatter.getPrinter()" proba="0.2222222222222222"></transition><transition target="s7" action="org.joda.time.format.PeriodFormatter.getParser()" proba="0.1111111111111111"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition><transition target="s9" action="org.joda.time.format.PeriodFormatter.isPrinter()" proba="0.3333333333333333"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="s3" action="org.joda.time.format.PeriodFormatter.getPrinter()" proba="1.0"></transition></state><state id="s9"><transition target="s10" action="org.joda.time.format.PeriodFormatter.isParser()" proba="1.0"></transition></state><state id="s11"><transition target="s11" action="org.joda.time.format.PeriodFormatter.withParseType(org.joda.time.PeriodType)" proba="0.1111111111111111"></transition><transition target="sX" action="epsilon" proba="0.2222222222222222"></transition><transition target="s16" action="org.joda.time.format.PeriodFormatter.parseMutablePeriod(java.lang.String)" proba="0.1111111111111111"></transition><transition target="s18" action="org.joda.time.format.PeriodFormatter.getParseType()" proba="0.1111111111111111"></transition><transition target="s1" action="org.joda.time.format.PeriodFormatter.parsePeriod(java.lang.String)" proba="0.4444444444444444"></transition></state><state id="s10"><transition target="s2" action="org.joda.time.format.PeriodFormatter.print(org.joda.time.ReadablePeriod)" proba="1.0"></transition></state><state id="s13"><transition target="s14" action="org.joda.time.format.PeriodFormatter.withLocale(java.util.Locale)" proba="1.0"></transition></state><state id="s12"><transition target="s11" action="org.joda.time.format.PeriodFormatter.withParseType(org.joda.time.PeriodType)" proba="0.25"></transition><transition target="s12" action="org.joda.time.format.PeriodFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int)" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.25"></transition></state><state id="s15"><transition target="sX" action="epsilon" proba="0.5"></transition><transition target="s15" action="org.joda.time.format.PeriodFormatter.printTo(java.io.Writer,org.joda.time.ReadablePeriod)" proba="0.5"></transition></state><state id="s14"><transition target="s13" action="org.joda.time.format.PeriodFormatter.getLocale()" proba="0.25"></transition><transition target="sX" action="epsilon" proba="0.5"></transition><transition target="s14" action="org.joda.time.format.PeriodFormatter.withLocale(java.util.Locale)" proba="0.25"></transition></state><state id="s17"><transition target="sX" action="epsilon" proba="0.5"></transition><transition target="s17" action="org.joda.time.format.PeriodFormatter.printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod)" proba="0.5"></transition></state><state id="s16"><transition target="sX" action="epsilon" proba="0.6666666666666666"></transition><transition target="s16" action="org.joda.time.format.PeriodFormatter.parseMutablePeriod(java.lang.String)" proba="0.3333333333333333"></transition></state><state id="s18"><transition target="s11" action="org.joda.time.format.PeriodFormatter.withParseType(org.joda.time.PeriodType)" proba="1.0"></transition></state><state id="s0"><transition target="s3" action="org.joda.time.format.PeriodFormatter.getPrinter()" proba="0.03409090909090909"></transition><transition target="s11" action="org.joda.time.format.PeriodFormatter.withParseType(org.joda.time.PeriodType)" proba="0.03409090909090909"></transition><transition target="s13" action="org.joda.time.format.PeriodFormatter.getLocale()" proba="0.011363636363636364"></transition><transition target="s8" action="org.joda.time.format.PeriodFormatter.&lt;init&gt;(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser)" proba="0.011363636363636364"></transition><transition target="s12" action="org.joda.time.format.PeriodFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int)" proba="0.022727272727272728"></transition><transition target="s15" action="org.joda.time.format.PeriodFormatter.printTo(java.io.Writer,org.joda.time.ReadablePeriod)" proba="0.011363636363636364"></transition><transition target="s14" action="org.joda.time.format.PeriodFormatter.withLocale(java.util.Locale)" proba="0.011363636363636364"></transition><transition target="s17" action="org.joda.time.format.PeriodFormatter.printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod)" proba="0.011363636363636364"></transition><transition target="s16" action="org.joda.time.format.PeriodFormatter.parseMutablePeriod(java.lang.String)" proba="0.011363636363636364"></transition><transition target="s18" action="org.joda.time.format.PeriodFormatter.getParseType()" proba="0.011363636363636364"></transition><transition target="s1" action="org.joda.time.format.PeriodFormatter.parsePeriod(java.lang.String)" proba="0.3068181818181818"></transition><transition target="s2" action="org.joda.time.format.PeriodFormatter.print(org.joda.time.ReadablePeriod)" proba="0.5227272727272727"></transition></state><state id="s1"><transition target="s11" action="org.joda.time.format.PeriodFormatter.withParseType(org.joda.time.PeriodType)" proba="0.04"></transition><transition target="s6" action="org.joda.time.format.PeriodFormatter.toMutablePeriod()" proba="0.02"></transition><transition target="sX" action="epsilon" proba="0.66"></transition><transition target="s8" action="org.joda.time.format.PeriodFormatter.&lt;init&gt;(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser)" proba="0.04"></transition><transition target="s1" action="org.joda.time.format.PeriodFormatter.parsePeriod(java.lang.String)" proba="0.18"></transition><transition target="s2" action="org.joda.time.format.PeriodFormatter.print(org.joda.time.ReadablePeriod)" proba="0.06"></transition></state><state id="s2"><transition target="s3" action="org.joda.time.format.PeriodFormatter.getPrinter()" proba="0.831858407079646"></transition><transition target="sX" action="epsilon" proba="0.07964601769911504"></transition><transition target="s1" action="org.joda.time.format.PeriodFormatter.parsePeriod(java.lang.String)" proba="0.08849557522123894"></transition></state></states></ts>