<?xml version="1.0"?><ts><start>s0</start><states><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s31"><transition target="s31" action="org.joda.time.DateTimeZone.isLocalDateTimeGap(org.joda.time.LocalDateTime)" proba="0.9090909090909091"></transition><transition target="sX" action="epsilon" proba="0.09090909090909091"></transition></state><state id="s30"><transition target="s11" action="org.joda.time.DateTimeZone.getID()" proba="0.14285714285714285"></transition><transition target="sX" action="epsilon" proba="0.8571428571428571"></transition></state><state id="s11"><transition target="s11" action="org.joda.time.DateTimeZone.getID()" proba="0.25"></transition><transition target="s21" action="org.joda.time.DateTimeZone.previousTransition(long)" proba="0.03125"></transition><transition target="sX" action="epsilon" proba="0.40625"></transition><transition target="s9" action="org.joda.time.DateTimeZone.getOffset(long)" proba="0.21875"></transition><transition target="s18" action="org.joda.time.DateTimeZone.isFixed()" proba="0.09375"></transition></state><state id="s33"><transition target="sX" action="epsilon" proba="0.25"></transition><transition target="s15" action="org.joda.time.DateTimeZone.getNameProvider()" proba="0.75"></transition></state><state id="s10"><transition target="s22" action="org.joda.time.DateTimeZone.getOffsetFromLocal(long)" proba="0.2"></transition><transition target="s10" action="org.joda.time.DateTimeZone.getStandardOffset(long)" proba="0.2"></transition><transition target="s24" action="org.joda.time.DateTimeZone.nextTransition(long)" proba="0.1"></transition><transition target="sX" action="epsilon" proba="0.2"></transition><transition target="s9" action="org.joda.time.DateTimeZone.getOffset(long)" proba="0.3"></transition></state><state id="s32"><transition target="s32" action="org.joda.time.DateTimeZone.setProvider(org.joda.time.tz.Provider)" proba="0.26666666666666666"></transition><transition target="s35" action="org.joda.time.DateTimeZone.getProvider()" proba="0.6666666666666666"></transition><transition target="sX" action="epsilon" proba="0.06666666666666667"></transition></state><state id="s35"><transition target="s32" action="org.joda.time.DateTimeZone.setProvider(org.joda.time.tz.Provider)" proba="0.08333333333333333"></transition><transition target="s35" action="org.joda.time.DateTimeZone.getProvider()" proba="0.08333333333333333"></transition><transition target="s36" action="org.joda.time.DateTimeZone.getAvailableIDs()" proba="0.08333333333333333"></transition><transition target="s17" action="org.joda.time.DateTimeZone.getClass()" proba="0.75"></transition></state><state id="s13"><transition target="s5" action="org.joda.time.DateTimeZone.forID(java.lang.String)" proba="0.12"></transition><transition target="s13" action="org.joda.time.DateTimeZone.forOffsetHours(int)" proba="0.04"></transition><transition target="sX" action="epsilon" proba="0.56"></transition><transition target="s1" action="org.joda.time.DateTimeZone.getDefault()" proba="0.2"></transition><transition target="s2" action="org.joda.time.DateTimeZone.setDefault(org.joda.time.DateTimeZone)" proba="0.08"></transition></state><state id="s12"><transition target="sX" action="epsilon" proba="0.5833333333333334"></transition><transition target="s12" action="org.joda.time.DateTimeZone.getMillisKeepLocal(org.joda.time.DateTimeZone,long)" proba="0.4166666666666667"></transition></state><state id="s34"><transition target="sX" action="epsilon" proba="0.2"></transition><transition target="s34" action="org.joda.time.DateTimeZone.hashCode()" proba="0.4"></transition><transition target="s28" action="org.joda.time.DateTimeZone.equals(java.lang.Object)" proba="0.4"></transition></state><state id="s15"><transition target="s20" action="org.joda.time.DateTimeZone.getShortName(java.util.Locale,java.lang.String,java.lang.String)" proba="0.2222222222222222"></transition><transition target="s33" action="org.joda.time.DateTimeZone.getName(java.util.Locale,java.lang.String,java.lang.String)" proba="0.2222222222222222"></transition><transition target="s15" action="org.joda.time.DateTimeZone.getNameProvider()" proba="0.05555555555555555"></transition><transition target="s17" action="org.joda.time.DateTimeZone.getClass()" proba="0.3888888888888889"></transition><transition target="s16" action="org.joda.time.DateTimeZone.setNameProvider(org.joda.time.tz.NameProvider)" proba="0.1111111111111111"></transition></state><state id="s37"><transition target="s36" action="org.joda.time.DateTimeZone.getAvailableIDs()" proba="1.0"></transition></state><state id="s36"><transition target="s37" action="org.joda.time.DateTimeZone.size()" proba="0.25"></transition><transition target="s38" action="org.joda.time.DateTimeZone.contains(java.lang.Object)" proba="0.75"></transition></state><state id="s14"><transition target="s5" action="org.joda.time.DateTimeZone.forID(java.lang.String)" proba="0.15"></transition><transition target="sX" action="epsilon" proba="0.55"></transition><transition target="s1" action="org.joda.time.DateTimeZone.getDefault()" proba="0.3"></transition></state><state id="s17"><transition target="s32" action="org.joda.time.DateTimeZone.setProvider(org.joda.time.tz.Provider)" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.125"></transition><transition target="s16" action="org.joda.time.DateTimeZone.setNameProvider(org.joda.time.tz.NameProvider)" proba="0.375"></transition></state><state id="s39"><transition target="sX" action="epsilon" proba="0.375"></transition><transition target="s39" action="org.joda.time.DateTimeZone.getShortName(long,java.util.Locale)" proba="0.625"></transition></state><state id="s16"><transition target="sX" action="epsilon" proba="0.09090909090909091"></transition><transition target="s15" action="org.joda.time.DateTimeZone.getNameProvider()" proba="0.7272727272727273"></transition><transition target="s16" action="org.joda.time.DateTimeZone.setNameProvider(org.joda.time.tz.NameProvider)" proba="0.18181818181818182"></transition></state><state id="s38"><transition target="s32" action="org.joda.time.DateTimeZone.setProvider(org.joda.time.tz.Provider)" proba="0.3333333333333333"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition><transition target="s36" action="org.joda.time.DateTimeZone.getAvailableIDs()" proba="0.3333333333333333"></transition></state><state id="s19"><transition target="s5" action="org.joda.time.DateTimeZone.forID(java.lang.String)" proba="0.3"></transition><transition target="sX" action="epsilon" proba="0.2"></transition><transition target="s19" action="org.joda.time.DateTimeZone.forOffsetHoursMinutes(int,int)" proba="0.5"></transition></state><state id="s18"><transition target="sX" action="epsilon" proba="0.875"></transition><transition target="s9" action="org.joda.time.DateTimeZone.getOffset(long)" proba="0.125"></transition></state><state id="s0"><transition target="s31" action="org.joda.time.DateTimeZone.isLocalDateTimeGap(org.joda.time.LocalDateTime)" proba="0.0018001800180018"></transition><transition target="s11" action="org.joda.time.DateTimeZone.getID()" proba="0.0153015301530153"></transition><transition target="s32" action="org.joda.time.DateTimeZone.setProvider(org.joda.time.tz.Provider)" proba="9.000900090009E-4"></transition><transition target="s10" action="org.joda.time.DateTimeZone.getStandardOffset(long)" proba="9.000900090009E-4"></transition><transition target="s13" action="org.joda.time.DateTimeZone.forOffsetHours(int)" proba="0.009900990099009901"></transition><transition target="s35" action="org.joda.time.DateTimeZone.getProvider()" proba="9.000900090009E-4"></transition><transition target="s12" action="org.joda.time.DateTimeZone.getMillisKeepLocal(org.joda.time.DateTimeZone,long)" proba="0.0063006300630063005"></transition><transition target="s34" action="org.joda.time.DateTimeZone.hashCode()" proba="9.000900090009E-4"></transition><transition target="s15" action="org.joda.time.DateTimeZone.getNameProvider()" proba="0.0027002700270027003"></transition><transition target="s14" action="org.joda.time.DateTimeZone.forOffsetMillis(int)" proba="0.004500450045004501"></transition><transition target="s36" action="org.joda.time.DateTimeZone.getAvailableIDs()" proba="9.000900090009E-4"></transition><transition target="s39" action="org.joda.time.DateTimeZone.getShortName(long,java.util.Locale)" proba="9.000900090009E-4"></transition><transition target="s16" action="org.joda.time.DateTimeZone.setNameProvider(org.joda.time.tz.NameProvider)" proba="9.000900090009E-4"></transition><transition target="s19" action="org.joda.time.DateTimeZone.forOffsetHoursMinutes(int,int)" proba="0.0018001800180018"></transition><transition target="s18" action="org.joda.time.DateTimeZone.isFixed()" proba="0.004500450045004501"></transition><transition target="s1" action="org.joda.time.DateTimeZone.getDefault()" proba="0.7218721872187218"></transition><transition target="s2" action="org.joda.time.DateTimeZone.setDefault(org.joda.time.DateTimeZone)" proba="0.09810981098109811"></transition><transition target="s3" action="org.joda.time.DateTimeZone.convertUTCToLocal(long)" proba="0.0144014401440144"></transition><transition target="s4" action="org.joda.time.DateTimeZone.toTimeZone()" proba="0.013501350135013501"></transition><transition target="s5" action="org.joda.time.DateTimeZone.forID(java.lang.String)" proba="0.04950495049504951"></transition><transition target="s8" action="org.joda.time.DateTimeZone.getNameKey(long)" proba="0.0027002700270027003"></transition><transition target="s9" action="org.joda.time.DateTimeZone.getOffset(long)" proba="0.0063006300630063005"></transition><transition target="s40" action="org.joda.time.DateTimeZone.forTimeZone(java.util.TimeZone)" proba="0.0027002700270027003"></transition><transition target="s41" action="org.joda.time.DateTimeZone.toString()" proba="0.0018001800180018"></transition><transition target="s22" action="org.joda.time.DateTimeZone.getOffsetFromLocal(long)" proba="0.0054005400540054005"></transition><transition target="s21" action="org.joda.time.DateTimeZone.previousTransition(long)" proba="0.0018001800180018"></transition><transition target="s43" action="org.joda.time.DateTimeZone.convertLocalToUTC(long,boolean)" proba="9.000900090009E-4"></transition><transition target="s24" action="org.joda.time.DateTimeZone.nextTransition(long)" proba="0.0072007200720072"></transition><transition target="s26" action="org.joda.time.DateTimeZone.getName(long,java.util.Locale)" proba="0.0018001800180018"></transition><transition target="s25" action="org.joda.time.DateTimeZone.getName(long)" proba="0.004500450045004501"></transition><transition target="s28" action="org.joda.time.DateTimeZone.equals(java.lang.Object)" proba="0.010801080108010801"></transition><transition target="s27" action="org.joda.time.DateTimeZone.getShortName(long)" proba="0.0018001800180018"></transition><transition target="s29" action="org.joda.time.DateTimeZone.getOffset(org.joda.time.ReadableInstant)" proba="0.0018001800180018"></transition></state><state id="s1"><transition target="s5" action="org.joda.time.DateTimeZone.forID(java.lang.String)" proba="0.03836150845253576"></transition><transition target="s13" action="org.joda.time.DateTimeZone.forOffsetHours(int)" proba="0.002600780234070221"></transition><transition target="sX" action="epsilon" proba="0.435630689206762"></transition><transition target="s9" action="org.joda.time.DateTimeZone.getOffset(long)" proba="6.501950585175553E-4"></transition><transition target="s14" action="org.joda.time.DateTimeZone.forOffsetMillis(int)" proba="0.003250975292587776"></transition><transition target="s1" action="org.joda.time.DateTimeZone.getDefault()" proba="0.44148244473342"></transition><transition target="s40" action="org.joda.time.DateTimeZone.forTimeZone(java.util.TimeZone)" proba="6.501950585175553E-4"></transition><transition target="s2" action="org.joda.time.DateTimeZone.setDefault(org.joda.time.DateTimeZone)" proba="0.07737321196358908"></transition></state><state id="s2"><transition target="sX" action="epsilon" proba="0.760655737704918"></transition><transition target="s1" action="org.joda.time.DateTimeZone.getDefault()" proba="0.13114754098360656"></transition><transition target="s2" action="org.joda.time.DateTimeZone.setDefault(org.joda.time.DateTimeZone)" proba="0.10819672131147541"></transition></state><state id="s3"><transition target="s30" action="org.joda.time.DateTimeZone.convertLocalToUTC(long,boolean,long)" proba="0.4375"></transition><transition target="sX" action="epsilon" proba="0.5625"></transition></state><state id="s4"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s5"><transition target="s5" action="org.joda.time.DateTimeZone.forID(java.lang.String)" proba="0.1276595744680851"></transition><transition target="s6" action="org.joda.time.DateTimeZone.fromString(java.lang.String)" proba="0.2765957446808511"></transition><transition target="s13" action="org.joda.time.DateTimeZone.forOffsetHours(int)" proba="0.06382978723404255"></transition><transition target="sX" action="epsilon" proba="0.3829787234042553"></transition><transition target="s14" action="org.joda.time.DateTimeZone.forOffsetMillis(int)" proba="0.07092198581560284"></transition><transition target="s19" action="org.joda.time.DateTimeZone.forOffsetHoursMinutes(int,int)" proba="0.02127659574468085"></transition><transition target="s1" action="org.joda.time.DateTimeZone.getDefault()" proba="0.03546099290780142"></transition><transition target="s2" action="org.joda.time.DateTimeZone.setDefault(org.joda.time.DateTimeZone)" proba="0.02127659574468085"></transition></state><state id="s6"><transition target="s7" action="org.joda.time.DateTimeZone.getZone(java.lang.String)" proba="1.0"></transition></state><state id="s7"><transition target="s2" action="org.joda.time.DateTimeZone.setDefault(org.joda.time.DateTimeZone)" proba="1.0"></transition></state><state id="s8"><transition target="s11" action="org.joda.time.DateTimeZone.getID()" proba="0.1111111111111111"></transition><transition target="s10" action="org.joda.time.DateTimeZone.getStandardOffset(long)" proba="0.3333333333333333"></transition><transition target="s24" action="org.joda.time.DateTimeZone.nextTransition(long)" proba="0.1111111111111111"></transition><transition target="s8" action="org.joda.time.DateTimeZone.getNameKey(long)" proba="0.1111111111111111"></transition><transition target="sX" action="epsilon" proba="0.2222222222222222"></transition><transition target="s9" action="org.joda.time.DateTimeZone.getOffset(long)" proba="0.1111111111111111"></transition></state><state id="s9"><transition target="s4" action="org.joda.time.DateTimeZone.toTimeZone()" proba="0.037037037037037035"></transition><transition target="s11" action="org.joda.time.DateTimeZone.getID()" proba="0.14814814814814814"></transition><transition target="s10" action="org.joda.time.DateTimeZone.getStandardOffset(long)" proba="0.14814814814814814"></transition><transition target="sX" action="epsilon" proba="0.4074074074074074"></transition><transition target="s8" action="org.joda.time.DateTimeZone.getNameKey(long)" proba="0.1111111111111111"></transition><transition target="s9" action="org.joda.time.DateTimeZone.getOffset(long)" proba="0.07407407407407407"></transition><transition target="s29" action="org.joda.time.DateTimeZone.getOffset(org.joda.time.ReadableInstant)" proba="0.07407407407407407"></transition></state><state id="s40"><transition target="sX" action="epsilon" proba="0.23076923076923078"></transition><transition target="s1" action="org.joda.time.DateTimeZone.getDefault()" proba="0.07692307692307693"></transition><transition target="s40" action="org.joda.time.DateTimeZone.forTimeZone(java.util.TimeZone)" proba="0.6923076923076923"></transition></state><state id="s20"><transition target="sX" action="epsilon" proba="0.25"></transition><transition target="s15" action="org.joda.time.DateTimeZone.getNameProvider()" proba="0.75"></transition></state><state id="s42"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s41"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s22"><transition target="s22" action="org.joda.time.DateTimeZone.getOffsetFromLocal(long)" proba="0.2"></transition><transition target="s23" action="org.joda.time.DateTimeZone.isStandardOffset(long)" proba="0.2"></transition><transition target="sX" action="epsilon" proba="0.4"></transition><transition target="s9" action="org.joda.time.DateTimeZone.getOffset(long)" proba="0.2"></transition></state><state id="s21"><transition target="s11" action="org.joda.time.DateTimeZone.getID()" proba="0.16666666666666666"></transition><transition target="s21" action="org.joda.time.DateTimeZone.previousTransition(long)" proba="0.16666666666666666"></transition><transition target="sX" action="epsilon" proba="0.5"></transition><transition target="s8" action="org.joda.time.DateTimeZone.getNameKey(long)" proba="0.16666666666666666"></transition></state><state id="s43"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s24"><transition target="s21" action="org.joda.time.DateTimeZone.previousTransition(long)" proba="0.18181818181818182"></transition><transition target="s24" action="org.joda.time.DateTimeZone.nextTransition(long)" proba="0.09090909090909091"></transition><transition target="s8" action="org.joda.time.DateTimeZone.getNameKey(long)" proba="0.09090909090909091"></transition><transition target="sX" action="epsilon" proba="0.5454545454545454"></transition><transition target="s9" action="org.joda.time.DateTimeZone.getOffset(long)" proba="0.09090909090909091"></transition></state><state id="s23"><transition target="s23" action="org.joda.time.DateTimeZone.isStandardOffset(long)" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.5"></transition></state><state id="s26"><transition target="sX" action="epsilon" proba="0.25"></transition><transition target="s26" action="org.joda.time.DateTimeZone.getName(long,java.util.Locale)" proba="0.625"></transition><transition target="s39" action="org.joda.time.DateTimeZone.getShortName(long,java.util.Locale)" proba="0.125"></transition></state><state id="s25"><transition target="sX" action="epsilon" proba="0.45454545454545453"></transition><transition target="s26" action="org.joda.time.DateTimeZone.getName(long,java.util.Locale)" proba="0.09090909090909091"></transition><transition target="s25" action="org.joda.time.DateTimeZone.getName(long)" proba="0.45454545454545453"></transition></state><state id="s28"><transition target="s42" action="org.joda.time.DateTimeZone.putAll(java.util.Map)" proba="0.03125"></transition><transition target="sX" action="epsilon" proba="0.28125"></transition><transition target="s34" action="org.joda.time.DateTimeZone.hashCode()" proba="0.25"></transition><transition target="s28" action="org.joda.time.DateTimeZone.equals(java.lang.Object)" proba="0.4375"></transition></state><state id="s27"><transition target="s25" action="org.joda.time.DateTimeZone.getName(long)" proba="0.3333333333333333"></transition><transition target="s39" action="org.joda.time.DateTimeZone.getShortName(long,java.util.Locale)" proba="0.3333333333333333"></transition><transition target="s27" action="org.joda.time.DateTimeZone.getShortName(long)" proba="0.3333333333333333"></transition></state><state id="s29"><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition><transition target="s9" action="org.joda.time.DateTimeZone.getOffset(long)" proba="0.3333333333333333"></transition><transition target="s29" action="org.joda.time.DateTimeZone.getOffset(org.joda.time.ReadableInstant)" proba="0.3333333333333333"></transition></state></states></ts>