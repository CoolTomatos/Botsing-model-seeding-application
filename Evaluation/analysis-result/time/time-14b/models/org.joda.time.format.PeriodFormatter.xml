<?xml version="1.0"?><ts><start>s0</start><states><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s11"><transition target="s11" action="org.joda.time.format.PeriodFormatter.parseMutablePeriod(java.lang.String)" proba="0.3333333333333333"></transition><transition target="sX" action="epsilon" proba="0.6666666666666666"></transition></state><state id="s10"><transition target="s10" action="org.joda.time.format.PeriodFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int)" proba="0.5"></transition><transition target="s8" action="org.joda.time.format.PeriodFormatter.withParseType(org.joda.time.PeriodType)" proba="0.25"></transition><transition target="sX" action="epsilon" proba="0.25"></transition></state><state id="s13"><transition target="s13" action="org.joda.time.format.PeriodFormatter.withLocale(java.util.Locale)" proba="0.25"></transition><transition target="sX" action="epsilon" proba="0.5"></transition><transition target="s15" action="org.joda.time.format.PeriodFormatter.getLocale()" proba="0.25"></transition></state><state id="s12"><transition target="s8" action="org.joda.time.format.PeriodFormatter.withParseType(org.joda.time.PeriodType)" proba="1.0"></transition></state><state id="s15"><transition target="s13" action="org.joda.time.format.PeriodFormatter.withLocale(java.util.Locale)" proba="1.0"></transition></state><state id="s14"><transition target="s8" action="org.joda.time.format.PeriodFormatter.withParseType(org.joda.time.PeriodType)" proba="1.0"></transition></state><state id="s17"><transition target="sX" action="epsilon" proba="0.5"></transition><transition target="s17" action="org.joda.time.format.PeriodFormatter.printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod)" proba="0.5"></transition></state><state id="s16"><transition target="s8" action="org.joda.time.format.PeriodFormatter.withParseType(org.joda.time.PeriodType)" proba="1.0"></transition></state><state id="s19"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s18"><transition target="s8" action="org.joda.time.format.PeriodFormatter.withParseType(org.joda.time.PeriodType)" proba="1.0"></transition></state><state id="s0"><transition target="s5" action="org.joda.time.format.PeriodFormatter.printTo(java.io.Writer,org.joda.time.ReadablePeriod)" proba="0.010526315789473684"></transition><transition target="s6" action="org.joda.time.format.PeriodFormatter.standard()" proba="0.07368421052631578"></transition><transition target="s8" action="org.joda.time.format.PeriodFormatter.withParseType(org.joda.time.PeriodType)" proba="0.031578947368421054"></transition><transition target="s9" action="org.joda.time.format.PeriodFormatter.parsePeriod(java.lang.String)" proba="0.28421052631578947"></transition><transition target="s11" action="org.joda.time.format.PeriodFormatter.parseMutablePeriod(java.lang.String)" proba="0.010526315789473684"></transition><transition target="s10" action="org.joda.time.format.PeriodFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int)" proba="0.021052631578947368"></transition><transition target="s21" action="org.joda.time.format.PeriodFormatter.&lt;init&gt;(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser)" proba="0.010526315789473684"></transition><transition target="s13" action="org.joda.time.format.PeriodFormatter.withLocale(java.util.Locale)" proba="0.010526315789473684"></transition><transition target="s24" action="org.joda.time.format.PeriodFormatter.getParseType()" proba="0.010526315789473684"></transition><transition target="s15" action="org.joda.time.format.PeriodFormatter.getLocale()" proba="0.010526315789473684"></transition><transition target="s17" action="org.joda.time.format.PeriodFormatter.printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod)" proba="0.010526315789473684"></transition><transition target="s1" action="org.joda.time.format.PeriodFormatter.print(org.joda.time.ReadablePeriod)" proba="0.4842105263157895"></transition><transition target="s2" action="org.joda.time.format.PeriodFormatter.getPrinter()" proba="0.031578947368421054"></transition></state><state id="s1"><transition target="sX" action="epsilon" proba="0.07964601769911504"></transition><transition target="s9" action="org.joda.time.format.PeriodFormatter.parsePeriod(java.lang.String)" proba="0.08849557522123894"></transition><transition target="s2" action="org.joda.time.format.PeriodFormatter.getPrinter()" proba="0.831858407079646"></transition></state><state id="s2"><transition target="s3" action="org.joda.time.format.PeriodFormatter.calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale)" proba="0.47715736040609136"></transition><transition target="s20" action="org.joda.time.format.PeriodFormatter.getParser()" proba="0.04060913705583756"></transition><transition target="s4" action="org.joda.time.format.PeriodFormatter.countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale)" proba="0.47715736040609136"></transition><transition target="s2" action="org.joda.time.format.PeriodFormatter.getPrinter()" proba="0.005076142131979695"></transition></state><state id="s3"><transition target="s2" action="org.joda.time.format.PeriodFormatter.getPrinter()" proba="1.0"></transition></state><state id="s4"><transition target="sX" action="epsilon" proba="0.35106382978723405"></transition><transition target="s1" action="org.joda.time.format.PeriodFormatter.print(org.joda.time.ReadablePeriod)" proba="0.648936170212766"></transition></state><state id="s5"><transition target="s5" action="org.joda.time.format.PeriodFormatter.printTo(java.io.Writer,org.joda.time.ReadablePeriod)" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.5"></transition></state><state id="s6"><transition target="s7" action="org.joda.time.format.PeriodFormatter.weeks()" proba="0.14285714285714285"></transition><transition target="s12" action="org.joda.time.format.PeriodFormatter.months()" proba="0.14285714285714285"></transition><transition target="s26" action="org.joda.time.format.PeriodFormatter.days()" proba="0.14285714285714285"></transition><transition target="s14" action="org.joda.time.format.PeriodFormatter.seconds()" proba="0.14285714285714285"></transition><transition target="s25" action="org.joda.time.format.PeriodFormatter.years()" proba="0.14285714285714285"></transition><transition target="s16" action="org.joda.time.format.PeriodFormatter.minutes()" proba="0.14285714285714285"></transition><transition target="s18" action="org.joda.time.format.PeriodFormatter.hours()" proba="0.14285714285714285"></transition></state><state id="s7"><transition target="s8" action="org.joda.time.format.PeriodFormatter.withParseType(org.joda.time.PeriodType)" proba="1.0"></transition></state><state id="s8"><transition target="s11" action="org.joda.time.format.PeriodFormatter.parseMutablePeriod(java.lang.String)" proba="0.0625"></transition><transition target="s24" action="org.joda.time.format.PeriodFormatter.getParseType()" proba="0.0625"></transition><transition target="s8" action="org.joda.time.format.PeriodFormatter.withParseType(org.joda.time.PeriodType)" proba="0.0625"></transition><transition target="sX" action="epsilon" proba="0.125"></transition><transition target="s9" action="org.joda.time.format.PeriodFormatter.parsePeriod(java.lang.String)" proba="0.6875"></transition></state><state id="s9"><transition target="s21" action="org.joda.time.format.PeriodFormatter.&lt;init&gt;(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser)" proba="0.03508771929824561"></transition><transition target="sX" action="epsilon" proba="0.7017543859649122"></transition><transition target="s8" action="org.joda.time.format.PeriodFormatter.withParseType(org.joda.time.PeriodType)" proba="0.03508771929824561"></transition><transition target="s9" action="org.joda.time.format.PeriodFormatter.parsePeriod(java.lang.String)" proba="0.15789473684210525"></transition><transition target="s19" action="org.joda.time.format.PeriodFormatter.toMutablePeriod()" proba="0.017543859649122806"></transition><transition target="s1" action="org.joda.time.format.PeriodFormatter.print(org.joda.time.ReadablePeriod)" proba="0.05263157894736842"></transition></state><state id="s20"><transition target="s20" action="org.joda.time.format.PeriodFormatter.getParser()" proba="0.1111111111111111"></transition><transition target="s22" action="org.joda.time.format.PeriodFormatter.isPrinter()" proba="0.3333333333333333"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition><transition target="s2" action="org.joda.time.format.PeriodFormatter.getPrinter()" proba="0.2222222222222222"></transition></state><state id="s22"><transition target="s23" action="org.joda.time.format.PeriodFormatter.isParser()" proba="1.0"></transition></state><state id="s21"><transition target="s2" action="org.joda.time.format.PeriodFormatter.getPrinter()" proba="1.0"></transition></state><state id="s24"><transition target="s8" action="org.joda.time.format.PeriodFormatter.withParseType(org.joda.time.PeriodType)" proba="1.0"></transition></state><state id="s23"><transition target="s1" action="org.joda.time.format.PeriodFormatter.print(org.joda.time.ReadablePeriod)" proba="1.0"></transition></state><state id="s26"><transition target="s8" action="org.joda.time.format.PeriodFormatter.withParseType(org.joda.time.PeriodType)" proba="1.0"></transition></state><state id="s25"><transition target="s8" action="org.joda.time.format.PeriodFormatter.withParseType(org.joda.time.PeriodType)" proba="1.0"></transition></state></states></ts>