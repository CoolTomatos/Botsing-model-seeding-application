<?xml version="1.0"?><ts><start>s0</start><states><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s11"><transition target="s12" action="org.joda.time.field.OffsetDateTimeField.monthOfYear()" proba="1.0"></transition></state><state id="s10"><transition target="s11" action="org.joda.time.field.OffsetDateTimeField.dayOfYear()" proba="1.0"></transition></state><state id="s13"><transition target="s14" action="org.joda.time.field.OffsetDateTimeField.weekOfWeekyear()" proba="1.0"></transition></state><state id="s12"><transition target="s13" action="org.joda.time.field.OffsetDateTimeField.weekyear()" proba="1.0"></transition></state><state id="s15"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s14"><transition target="s15" action="org.joda.time.field.OffsetDateTimeField.weekyearOfCentury()" proba="1.0"></transition></state><state id="s17"><transition target="s17" action="org.joda.time.field.OffsetDateTimeField.getMinimumValue()" proba="0.3333333333333333"></transition><transition target="s18" action="org.joda.time.field.OffsetDateTimeField.getMaximumValue()" proba="0.6666666666666666"></transition></state><state id="s16"><transition target="s7" action="org.joda.time.field.OffsetDateTimeField.isSupported()" proba="1.0"></transition></state><state id="s19"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s18"><transition target="s23" action="org.joda.time.field.OffsetDateTimeField.year()" proba="0.3333333333333333"></transition><transition target="s19" action="org.joda.time.field.OffsetDateTimeField.yearOfCentury()" proba="0.3333333333333333"></transition><transition target="s18" action="org.joda.time.field.OffsetDateTimeField.getMaximumValue()" proba="0.3333333333333333"></transition></state><state id="s0"><transition target="s4" action="org.joda.time.field.OffsetDateTimeField.&lt;init&gt;(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int)" proba="0.2"></transition><transition target="s6" action="org.joda.time.field.OffsetDateTimeField.fromString(java.lang.String)" proba="0.26666666666666666"></transition><transition target="s16" action="org.joda.time.field.OffsetDateTimeField.&lt;init&gt;(org.joda.time.field.DividedDateTimeField)" proba="0.06666666666666667"></transition><transition target="s1" action="org.joda.time.field.OffsetDateTimeField.&lt;init&gt;(org.joda.time.DateTimeField,int)" proba="0.4666666666666667"></transition></state><state id="s1"><transition target="s3" action="org.joda.time.field.OffsetDateTimeField.toString()" proba="0.09090909090909091"></transition><transition target="s5" action="org.joda.time.field.OffsetDateTimeField.getOffset()" proba="0.09090909090909091"></transition><transition target="s7" action="org.joda.time.field.OffsetDateTimeField.isSupported()" proba="0.09090909090909091"></transition><transition target="sX" action="epsilon" proba="0.2727272727272727"></transition><transition target="s26" action="org.joda.time.field.OffsetDateTimeField.getName()" proba="0.09090909090909091"></transition><transition target="s1" action="org.joda.time.field.OffsetDateTimeField.&lt;init&gt;(org.joda.time.DateTimeField,int)" proba="0.18181818181818182"></transition><transition target="s2" action="org.joda.time.field.OffsetDateTimeField.getType()" proba="0.18181818181818182"></transition></state><state id="s2"><transition target="s5" action="org.joda.time.field.OffsetDateTimeField.getOffset()" proba="0.4"></transition><transition target="s21" action="org.joda.time.field.OffsetDateTimeField.getWrappedField()" proba="0.2"></transition><transition target="s7" action="org.joda.time.field.OffsetDateTimeField.isSupported()" proba="0.2"></transition><transition target="sX" action="epsilon" proba="0.2"></transition></state><state id="s3"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s4"><transition target="s4" action="org.joda.time.field.OffsetDateTimeField.&lt;init&gt;(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int)" proba="0.3333333333333333"></transition><transition target="s6" action="org.joda.time.field.OffsetDateTimeField.fromString(java.lang.String)" proba="0.16666666666666666"></transition><transition target="sX" action="epsilon" proba="0.16666666666666666"></transition><transition target="s2" action="org.joda.time.field.OffsetDateTimeField.getType()" proba="0.3333333333333333"></transition></state><state id="s5"><transition target="s4" action="org.joda.time.field.OffsetDateTimeField.&lt;init&gt;(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int)" proba="0.3333333333333333"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition><transition target="s1" action="org.joda.time.field.OffsetDateTimeField.&lt;init&gt;(org.joda.time.DateTimeField,int)" proba="0.3333333333333333"></transition></state><state id="s6"><transition target="s20" action="org.joda.time.field.OffsetDateTimeField.isLenient()" proba="0.5454545454545454"></transition><transition target="s7" action="org.joda.time.field.OffsetDateTimeField.isSupported()" proba="0.09090909090909091"></transition><transition target="s28" action="org.joda.time.field.OffsetDateTimeField.getZone()" proba="0.09090909090909091"></transition><transition target="s27" action="org.joda.time.field.OffsetDateTimeField.getLeapDurationField()" proba="0.18181818181818182"></transition><transition target="s2" action="org.joda.time.field.OffsetDateTimeField.getType()" proba="0.09090909090909091"></transition></state><state id="s7"><transition target="s22" action="org.joda.time.field.OffsetDateTimeField.getDurationField()" proba="0.2"></transition><transition target="s21" action="org.joda.time.field.OffsetDateTimeField.getWrappedField()" proba="0.2"></transition><transition target="s8" action="org.joda.time.field.OffsetDateTimeField.era()" proba="0.2"></transition><transition target="sX" action="epsilon" proba="0.2"></transition><transition target="s17" action="org.joda.time.field.OffsetDateTimeField.getMinimumValue()" proba="0.2"></transition></state><state id="s8"><transition target="s9" action="org.joda.time.field.OffsetDateTimeField.dayOfWeek()" proba="1.0"></transition></state><state id="s9"><transition target="s10" action="org.joda.time.field.OffsetDateTimeField.dayOfMonth()" proba="1.0"></transition></state><state id="s20"><transition target="s20" action="org.joda.time.field.OffsetDateTimeField.isLenient()" proba="0.8125"></transition><transition target="s6" action="org.joda.time.field.OffsetDateTimeField.fromString(java.lang.String)" proba="0.125"></transition><transition target="sX" action="epsilon" proba="0.0625"></transition></state><state id="s22"><transition target="s17" action="org.joda.time.field.OffsetDateTimeField.getMinimumValue()" proba="1.0"></transition></state><state id="s21"><transition target="s21" action="org.joda.time.field.OffsetDateTimeField.getWrappedField()" proba="0.3333333333333333"></transition><transition target="s7" action="org.joda.time.field.OffsetDateTimeField.isSupported()" proba="0.3333333333333333"></transition><transition target="s1" action="org.joda.time.field.OffsetDateTimeField.&lt;init&gt;(org.joda.time.DateTimeField,int)" proba="0.3333333333333333"></transition></state><state id="s24"><transition target="s25" action="org.joda.time.field.OffsetDateTimeField.centuryOfEra()" proba="1.0"></transition></state><state id="s23"><transition target="s24" action="org.joda.time.field.OffsetDateTimeField.yearOfEra()" proba="1.0"></transition></state><state id="s26"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s25"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s28"><transition target="sX" action="epsilon" proba="0.030303030303030304"></transition><transition target="s28" action="org.joda.time.field.OffsetDateTimeField.getZone()" proba="0.9696969696969697"></transition></state><state id="s27"><transition target="s6" action="org.joda.time.field.OffsetDateTimeField.fromString(java.lang.String)" proba="1.0"></transition></state></states></ts>