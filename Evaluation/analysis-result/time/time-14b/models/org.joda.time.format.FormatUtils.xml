<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s4" action="org.joda.time.format.FormatUtils.appendPaddedInteger(java.lang.StringBuffer,int,int)" proba="0.8"></transition><transition target="s7" action="org.joda.time.format.FormatUtils.appendUnpaddedInteger(java.lang.StringBuffer,int)" proba="0.16666666666666666"></transition><transition target="s8" action="org.joda.time.format.FormatUtils.appendUnpaddedInteger(java.lang.StringBuffer,long)" proba="0.03333333333333333"></transition></state><state id="s4"><transition target="s3" action="org.joda.time.format.FormatUtils.fromString(java.lang.String)" proba="0.08888888888888889"></transition><transition target="s4" action="org.joda.time.format.FormatUtils.appendPaddedInteger(java.lang.StringBuffer,int,int)" proba="0.6333333333333333"></transition><transition target="sX" action="epsilon" proba="0.2777777777777778"></transition></state><state id="s5"><transition target="s6" action="org.joda.time.format.FormatUtils.writePaddedInteger(java.io.Writer,int,int)" proba="0.3333333333333333"></transition><transition target="sX" action="epsilon" proba="0.6666666666666666"></transition></state><state id="s6"><transition target="s6" action="org.joda.time.format.FormatUtils.writePaddedInteger(java.io.Writer,int,int)" proba="0.4"></transition><transition target="sX" action="epsilon" proba="0.6"></transition></state><state id="s7"><transition target="s3" action="org.joda.time.format.FormatUtils.fromString(java.lang.String)" proba="0.13043478260869565"></transition><transition target="s4" action="org.joda.time.format.FormatUtils.appendPaddedInteger(java.lang.StringBuffer,int,int)" proba="0.13043478260869565"></transition><transition target="s7" action="org.joda.time.format.FormatUtils.appendUnpaddedInteger(java.lang.StringBuffer,int)" proba="0.6521739130434783"></transition><transition target="sX" action="epsilon" proba="0.08695652173913043"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s9"><transition target="s3" action="org.joda.time.format.FormatUtils.fromString(java.lang.String)" proba="0.13333333333333333"></transition><transition target="sX" action="epsilon" proba="0.06666666666666667"></transition><transition target="s9" action="org.joda.time.format.FormatUtils.calculateDigitCount(long)" proba="0.8"></transition></state><state id="s0"><transition target="s3" action="org.joda.time.format.FormatUtils.fromString(java.lang.String)" proba="0.38636363636363635"></transition><transition target="s4" action="org.joda.time.format.FormatUtils.appendPaddedInteger(java.lang.StringBuffer,int,int)" proba="0.13636363636363635"></transition><transition target="s5" action="org.joda.time.format.FormatUtils.writeUnpaddedInteger(java.io.Writer,int)" proba="0.06818181818181818"></transition><transition target="s6" action="org.joda.time.format.FormatUtils.writePaddedInteger(java.io.Writer,int,int)" proba="0.11363636363636363"></transition><transition target="s7" action="org.joda.time.format.FormatUtils.appendUnpaddedInteger(java.lang.StringBuffer,int)" proba="0.06818181818181818"></transition><transition target="s8" action="org.joda.time.format.FormatUtils.appendUnpaddedInteger(java.lang.StringBuffer,long)" proba="0.022727272727272728"></transition><transition target="s9" action="org.joda.time.format.FormatUtils.calculateDigitCount(long)" proba="0.06818181818181818"></transition><transition target="s1" action="org.joda.time.format.FormatUtils.createErrorMessage(java.lang.String,int)" proba="0.11363636363636363"></transition><transition target="s2" action="org.joda.time.format.FormatUtils.parseTwoDigits(java.lang.String,int)" proba="0.022727272727272728"></transition></state><state id="s1"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s2"><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition><transition target="s2" action="org.joda.time.format.FormatUtils.parseTwoDigits(java.lang.String,int)" proba="0.6666666666666666"></transition></state></states></ts>