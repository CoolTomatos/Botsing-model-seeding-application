<?xml version="1.0"?><ts><start>s0</start><states><state id="s31"><transition target="s27" action="org.joda.time.format.DateTimeFormatter.year()" proba="1.0"></transition></state><state id="s30"><transition target="s31" action="org.joda.time.format.DateTimeFormatter.weekyear()" proba="0.25"></transition><transition target="s37" action="org.joda.time.format.DateTimeFormatter.months()" proba="0.75"></transition></state><state id="s33"><transition target="s34" action="org.joda.time.format.DateTimeFormatter.minuteOfHour()" proba="1.0"></transition></state><state id="s32"><transition target="s33" action="org.joda.time.format.DateTimeFormatter.hourOfDay()" proba="1.0"></transition></state><state id="s35"><transition target="s36" action="org.joda.time.format.DateTimeFormatter.secondOfDay()" proba="1.0"></transition></state><state id="s34"><transition target="s35" action="org.joda.time.format.DateTimeFormatter.secondOfMinute()" proba="1.0"></transition></state><state id="s37"><transition target="s37" action="org.joda.time.format.DateTimeFormatter.months()" proba="0.18181818181818182"></transition><transition target="s25" action="org.joda.time.format.DateTimeFormatter.withUTC()" proba="0.09090909090909091"></transition><transition target="s38" action="org.joda.time.format.DateTimeFormatter.days()" proba="0.7272727272727273"></transition></state><state id="s36"><transition target="s37" action="org.joda.time.format.DateTimeFormatter.months()" proba="1.0"></transition></state><state id="s39"><transition target="sX" action="epsilon" proba="0.25"></transition><transition target="s15" action="org.joda.time.format.DateTimeFormatter.getPrinter()" proba="0.75"></transition></state><state id="s38"><transition target="s42" action="org.joda.time.format.DateTimeFormatter.years()" proba="0.125"></transition><transition target="s11" action="org.joda.time.format.DateTimeFormatter.withChronology(org.joda.time.Chronology)" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.25"></transition><transition target="s37" action="org.joda.time.format.DateTimeFormatter.months()" proba="0.125"></transition></state><state id="s0"><transition target="s51" action="org.joda.time.format.DateTimeFormatter.getChronology()" proba="0.0035842293906810036"></transition><transition target="s53" action="org.joda.time.format.DateTimeFormatter.printTo(java.lang.StringBuffer,org.joda.time.ReadableInstant)" proba="0.0035842293906810036"></transition><transition target="s11" action="org.joda.time.format.DateTimeFormatter.withChronology(org.joda.time.Chronology)" proba="0.03942652329749104"></transition><transition target="s10" action="org.joda.time.format.DateTimeFormatter.print(org.joda.time.ReadablePartial)" proba="0.14336917562724014"></transition><transition target="s54" action="org.joda.time.format.DateTimeFormatter.parseLocalTime(java.lang.String)" proba="0.007168458781362007"></transition><transition target="s13" action="org.joda.time.format.DateTimeFormatter.isPrinter()" proba="0.02867383512544803"></transition><transition target="s12" action="org.joda.time.format.DateTimeFormatter.parseMutableDateTime(java.lang.String)" proba="0.0035842293906810036"></transition><transition target="s15" action="org.joda.time.format.DateTimeFormatter.getPrinter()" proba="0.010752688172043012"></transition><transition target="s58" action="org.joda.time.format.DateTimeFormatter.printTo(java.io.Writer,org.joda.time.ReadableInstant)" proba="0.0035842293906810036"></transition><transition target="s17" action="org.joda.time.format.DateTimeFormatter.dateTimeParser()" proba="0.06451612903225806"></transition><transition target="s39" action="org.joda.time.format.DateTimeFormatter.&lt;init&gt;(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser)" proba="0.007168458781362007"></transition><transition target="s18" action="org.joda.time.format.DateTimeFormatter.parseMillis(java.lang.String)" proba="0.017921146953405017"></transition><transition target="s1" action="org.joda.time.format.DateTimeFormatter.print(org.joda.time.ReadableInstant)" proba="0.2616487455197133"></transition><transition target="s2" action="org.joda.time.format.DateTimeFormatter.withLocale(java.util.Locale)" proba="0.007168458781362007"></transition><transition target="s3" action="org.joda.time.format.DateTimeFormatter.parseLocalDate(java.lang.String)" proba="0.06451612903225806"></transition><transition target="s4" action="org.joda.time.format.DateTimeFormatter.parseDateTime(java.lang.String)" proba="0.13620071684587814"></transition><transition target="s5" action="org.joda.time.format.DateTimeFormatter.withZone(org.joda.time.DateTimeZone)" proba="0.043010752688172046"></transition><transition target="s6" action="org.joda.time.format.DateTimeFormatter.withOffsetParsed()" proba="0.014336917562724014"></transition><transition target="s7" action="org.joda.time.format.DateTimeFormatter.localDateParser()" proba="0.0035842293906810036"></transition><transition target="s60" action="org.joda.time.format.DateTimeFormatter.isOffsetParsed()" proba="0.0035842293906810036"></transition><transition target="s40" action="org.joda.time.format.DateTimeFormatter.parseLocalDateTime(java.lang.String)" proba="0.017921146953405017"></transition><transition target="s62" action="org.joda.time.format.DateTimeFormatter.getPivotYear()" proba="0.0035842293906810036"></transition><transition target="s61" action="org.joda.time.format.DateTimeFormatter.withPivotYear(int)" proba="0.0035842293906810036"></transition><transition target="s20" action="org.joda.time.format.DateTimeFormatter.getZone()" proba="0.017921146953405017"></transition><transition target="s41" action="org.joda.time.format.DateTimeFormatter.parseInto(org.joda.time.ReadWritableInstant,java.lang.String,int)" proba="0.035842293906810034"></transition><transition target="s63" action="org.joda.time.format.DateTimeFormatter.getLocale()" proba="0.0035842293906810036"></transition><transition target="s43" action="org.joda.time.format.DateTimeFormatter.printTo(java.lang.Appendable,org.joda.time.ReadableInstant)" proba="0.0035842293906810036"></transition><transition target="s46" action="org.joda.time.format.DateTimeFormatter.forPattern(java.lang.String)" proba="0.014336917562724014"></transition><transition target="s23" action="org.joda.time.format.DateTimeFormatter.dateOptionalTimeParser()" proba="0.03225806451612903"></transition></state><state id="s1"><transition target="s4" action="org.joda.time.format.DateTimeFormatter.parseDateTime(java.lang.String)" proba="0.05952380952380952"></transition><transition target="s5" action="org.joda.time.format.DateTimeFormatter.withZone(org.joda.time.DateTimeZone)" proba="0.027777777777777776"></transition><transition target="s11" action="org.joda.time.format.DateTimeFormatter.withChronology(org.joda.time.Chronology)" proba="0.07936507936507936"></transition><transition target="sX" action="epsilon" proba="0.24603174603174602"></transition><transition target="s9" action="org.joda.time.format.DateTimeFormatter.withZoneUTC()" proba="0.015873015873015872"></transition><transition target="s1" action="org.joda.time.format.DateTimeFormatter.print(org.joda.time.ReadableInstant)" proba="0.3888888888888889"></transition><transition target="s40" action="org.joda.time.format.DateTimeFormatter.parseLocalDateTime(java.lang.String)" proba="0.007936507936507936"></transition><transition target="s2" action="org.joda.time.format.DateTimeFormatter.withLocale(java.util.Locale)" proba="0.1746031746031746"></transition></state><state id="s2"><transition target="s4" action="org.joda.time.format.DateTimeFormatter.parseDateTime(java.lang.String)" proba="0.061224489795918366"></transition><transition target="s63" action="org.joda.time.format.DateTimeFormatter.getLocale()" proba="0.02040816326530612"></transition><transition target="sX" action="epsilon" proba="0.04081632653061224"></transition><transition target="s1" action="org.joda.time.format.DateTimeFormatter.print(org.joda.time.ReadableInstant)" proba="0.8571428571428571"></transition><transition target="s2" action="org.joda.time.format.DateTimeFormatter.withLocale(java.util.Locale)" proba="0.02040816326530612"></transition></state><state id="s3"><transition target="s3" action="org.joda.time.format.DateTimeFormatter.parseLocalDate(java.lang.String)" proba="0.20833333333333334"></transition><transition target="s4" action="org.joda.time.format.DateTimeFormatter.parseDateTime(java.lang.String)" proba="0.041666666666666664"></transition><transition target="s11" action="org.joda.time.format.DateTimeFormatter.withChronology(org.joda.time.Chronology)" proba="0.041666666666666664"></transition><transition target="sX" action="epsilon" proba="0.7083333333333334"></transition></state><state id="s4"><transition target="s4" action="org.joda.time.format.DateTimeFormatter.parseDateTime(java.lang.String)" proba="0.4271356783919598"></transition><transition target="s5" action="org.joda.time.format.DateTimeFormatter.withZone(org.joda.time.DateTimeZone)" proba="0.05025125628140704"></transition><transition target="s6" action="org.joda.time.format.DateTimeFormatter.withOffsetParsed()" proba="0.04020100502512563"></transition><transition target="sX" action="epsilon" proba="0.34673366834170855"></transition><transition target="s9" action="org.joda.time.format.DateTimeFormatter.withZoneUTC()" proba="0.035175879396984924"></transition><transition target="s20" action="org.joda.time.format.DateTimeFormatter.getZone()" proba="0.010050251256281407"></transition><transition target="s52" action="org.joda.time.format.DateTimeFormatter.toInstant()" proba="0.005025125628140704"></transition><transition target="s22" action="org.joda.time.format.DateTimeFormatter.toDateMidnight()" proba="0.005025125628140704"></transition><transition target="s11" action="org.joda.time.format.DateTimeFormatter.withChronology(org.joda.time.Chronology)" proba="0.02512562814070352"></transition><transition target="s57" action="org.joda.time.format.DateTimeFormatter.toMutableDateTime()" proba="0.005025125628140704"></transition><transition target="s45" action="org.joda.time.format.DateTimeFormatter.withPivotYear(java.lang.Integer)" proba="0.01507537688442211"></transition><transition target="s39" action="org.joda.time.format.DateTimeFormatter.&lt;init&gt;(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser)" proba="0.010050251256281407"></transition><transition target="s49" action="org.joda.time.format.DateTimeFormatter.getYear()" proba="0.020100502512562814"></transition><transition target="s1" action="org.joda.time.format.DateTimeFormatter.print(org.joda.time.ReadableInstant)" proba="0.005025125628140704"></transition></state><state id="s5"><transition target="s20" action="org.joda.time.format.DateTimeFormatter.getZone()" proba="0.014705882352941176"></transition><transition target="s4" action="org.joda.time.format.DateTimeFormatter.parseDateTime(java.lang.String)" proba="0.22058823529411764"></transition><transition target="s41" action="org.joda.time.format.DateTimeFormatter.parseInto(org.joda.time.ReadWritableInstant,java.lang.String,int)" proba="0.14705882352941177"></transition><transition target="s5" action="org.joda.time.format.DateTimeFormatter.withZone(org.joda.time.DateTimeZone)" proba="0.014705882352941176"></transition><transition target="s6" action="org.joda.time.format.DateTimeFormatter.withOffsetParsed()" proba="0.04411764705882353"></transition><transition target="s12" action="org.joda.time.format.DateTimeFormatter.parseMutableDateTime(java.lang.String)" proba="0.14705882352941177"></transition><transition target="sX" action="epsilon" proba="0.029411764705882353"></transition><transition target="s60" action="org.joda.time.format.DateTimeFormatter.isOffsetParsed()" proba="0.014705882352941176"></transition><transition target="s1" action="org.joda.time.format.DateTimeFormatter.print(org.joda.time.ReadableInstant)" proba="0.3088235294117647"></transition><transition target="s40" action="org.joda.time.format.DateTimeFormatter.parseLocalDateTime(java.lang.String)" proba="0.058823529411764705"></transition></state><state id="s6"><transition target="s4" action="org.joda.time.format.DateTimeFormatter.parseDateTime(java.lang.String)" proba="0.4"></transition><transition target="s41" action="org.joda.time.format.DateTimeFormatter.parseInto(org.joda.time.ReadWritableInstant,java.lang.String,int)" proba="0.12"></transition><transition target="s5" action="org.joda.time.format.DateTimeFormatter.withZone(org.joda.time.DateTimeZone)" proba="0.12"></transition><transition target="s6" action="org.joda.time.format.DateTimeFormatter.withOffsetParsed()" proba="0.04"></transition><transition target="s12" action="org.joda.time.format.DateTimeFormatter.parseMutableDateTime(java.lang.String)" proba="0.12"></transition><transition target="sX" action="epsilon" proba="0.08"></transition><transition target="s60" action="org.joda.time.format.DateTimeFormatter.isOffsetParsed()" proba="0.04"></transition><transition target="s40" action="org.joda.time.format.DateTimeFormatter.parseLocalDateTime(java.lang.String)" proba="0.08"></transition></state><state id="s7"><transition target="s8" action="org.joda.time.format.DateTimeFormatter.dateElementParser()" proba="1.0"></transition></state><state id="s8"><transition target="s9" action="org.joda.time.format.DateTimeFormatter.withZoneUTC()" proba="1.0"></transition></state><state id="s9"><transition target="s4" action="org.joda.time.format.DateTimeFormatter.parseDateTime(java.lang.String)" proba="0.7142857142857143"></transition><transition target="sX" action="epsilon" proba="0.07142857142857142"></transition><transition target="s18" action="org.joda.time.format.DateTimeFormatter.parseMillis(java.lang.String)" proba="0.14285714285714285"></transition><transition target="s1" action="org.joda.time.format.DateTimeFormatter.print(org.joda.time.ReadableInstant)" proba="0.07142857142857142"></transition></state><state id="s40"><transition target="s4" action="org.joda.time.format.DateTimeFormatter.parseDateTime(java.lang.String)" proba="0.0625"></transition><transition target="s5" action="org.joda.time.format.DateTimeFormatter.withZone(org.joda.time.DateTimeZone)" proba="0.1875"></transition><transition target="s11" action="org.joda.time.format.DateTimeFormatter.withChronology(org.joda.time.Chronology)" proba="0.0625"></transition><transition target="s6" action="org.joda.time.format.DateTimeFormatter.withOffsetParsed()" proba="0.125"></transition><transition target="sX" action="epsilon" proba="0.4375"></transition><transition target="s40" action="org.joda.time.format.DateTimeFormatter.parseLocalDateTime(java.lang.String)" proba="0.125"></transition></state><state id="s42"><transition target="s42" action="org.joda.time.format.DateTimeFormatter.years()" proba="0.6666666666666666"></transition><transition target="s25" action="org.joda.time.format.DateTimeFormatter.withUTC()" proba="0.3333333333333333"></transition></state><state id="s41"><transition target="s41" action="org.joda.time.format.DateTimeFormatter.parseInto(org.joda.time.ReadWritableInstant,java.lang.String,int)" proba="0.12903225806451613"></transition><transition target="s5" action="org.joda.time.format.DateTimeFormatter.withZone(org.joda.time.DateTimeZone)" proba="0.22580645161290322"></transition><transition target="s11" action="org.joda.time.format.DateTimeFormatter.withChronology(org.joda.time.Chronology)" proba="0.0967741935483871"></transition><transition target="s6" action="org.joda.time.format.DateTimeFormatter.withOffsetParsed()" proba="0.06451612903225806"></transition><transition target="sX" action="epsilon" proba="0.4838709677419355"></transition></state><state id="s44"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s43"><transition target="s44" action="org.joda.time.format.DateTimeFormatter.printTo(java.lang.Appendable,long)" proba="1.0"></transition></state><state id="s46"><transition target="s47" action="org.joda.time.format.DateTimeFormatter.&lt;init&gt;(long)" proba="1.0"></transition></state><state id="s45"><transition target="s4" action="org.joda.time.format.DateTimeFormatter.parseDateTime(java.lang.String)" proba="0.42857142857142855"></transition><transition target="s45" action="org.joda.time.format.DateTimeFormatter.withPivotYear(java.lang.Integer)" proba="0.14285714285714285"></transition><transition target="sX" action="epsilon" proba="0.2857142857142857"></transition><transition target="s62" action="org.joda.time.format.DateTimeFormatter.getPivotYear()" proba="0.14285714285714285"></transition></state><state id="s48"><transition target="s4" action="org.joda.time.format.DateTimeFormatter.parseDateTime(java.lang.String)" proba="0.75"></transition><transition target="sX" action="epsilon" proba="0.25"></transition></state><state id="s47"><transition target="s1" action="org.joda.time.format.DateTimeFormatter.print(org.joda.time.ReadableInstant)" proba="1.0"></transition></state><state id="s49"><transition target="s4" action="org.joda.time.format.DateTimeFormatter.parseDateTime(java.lang.String)" proba="1.0"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s51"><transition target="s11" action="org.joda.time.format.DateTimeFormatter.withChronology(org.joda.time.Chronology)" proba="1.0"></transition></state><state id="s50"><transition target="sX" action="epsilon" proba="0.6666666666666666"></transition><transition target="s50" action="org.joda.time.format.DateTimeFormatter.printTo(java.lang.StringBuffer,long)" proba="0.3333333333333333"></transition></state><state id="s53"><transition target="s50" action="org.joda.time.format.DateTimeFormatter.printTo(java.lang.StringBuffer,long)" proba="1.0"></transition></state><state id="s52"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s11"><transition target="s3" action="org.joda.time.format.DateTimeFormatter.parseLocalDate(java.lang.String)" proba="0.012345679012345678"></transition><transition target="s4" action="org.joda.time.format.DateTimeFormatter.parseDateTime(java.lang.String)" proba="0.09876543209876543"></transition><transition target="s5" action="org.joda.time.format.DateTimeFormatter.withZone(org.joda.time.DateTimeZone)" proba="0.18518518518518517"></transition><transition target="sX" action="epsilon" proba="0.024691358024691357"></transition><transition target="s40" action="org.joda.time.format.DateTimeFormatter.parseLocalDateTime(java.lang.String)" proba="0.012345679012345678"></transition><transition target="s51" action="org.joda.time.format.DateTimeFormatter.getChronology()" proba="0.012345679012345678"></transition><transition target="s50" action="org.joda.time.format.DateTimeFormatter.printTo(java.lang.StringBuffer,long)" proba="0.037037037037037035"></transition><transition target="s41" action="org.joda.time.format.DateTimeFormatter.parseInto(org.joda.time.ReadWritableInstant,java.lang.String,int)" proba="0.04938271604938271"></transition><transition target="s11" action="org.joda.time.format.DateTimeFormatter.withChronology(org.joda.time.Chronology)" proba="0.012345679012345678"></transition><transition target="s54" action="org.joda.time.format.DateTimeFormatter.parseLocalTime(java.lang.String)" proba="0.012345679012345678"></transition><transition target="s12" action="org.joda.time.format.DateTimeFormatter.parseMutableDateTime(java.lang.String)" proba="0.04938271604938271"></transition><transition target="s18" action="org.joda.time.format.DateTimeFormatter.parseMillis(java.lang.String)" proba="0.4074074074074074"></transition><transition target="s1" action="org.joda.time.format.DateTimeFormatter.print(org.joda.time.ReadableInstant)" proba="0.08641975308641975"></transition></state><state id="s55"><transition target="s56" action="org.joda.time.format.DateTimeFormatter.getInstantConverter(java.lang.Object)" proba="1.0"></transition></state><state id="s10"><transition target="s10" action="org.joda.time.format.DateTimeFormatter.print(org.joda.time.ReadablePartial)" proba="0.6923076923076923"></transition><transition target="sX" action="epsilon" proba="0.3076923076923077"></transition></state><state id="s54"><transition target="s4" action="org.joda.time.format.DateTimeFormatter.parseDateTime(java.lang.String)" proba="0.2"></transition><transition target="s11" action="org.joda.time.format.DateTimeFormatter.withChronology(org.joda.time.Chronology)" proba="0.2"></transition><transition target="s54" action="org.joda.time.format.DateTimeFormatter.parseLocalTime(java.lang.String)" proba="0.4"></transition><transition target="sX" action="epsilon" proba="0.2"></transition></state><state id="s13"><transition target="s14" action="org.joda.time.format.DateTimeFormatter.isParser()" proba="1.0"></transition></state><state id="s57"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s12"><transition target="s11" action="org.joda.time.format.DateTimeFormatter.withChronology(org.joda.time.Chronology)" proba="0.15789473684210525"></transition><transition target="s5" action="org.joda.time.format.DateTimeFormatter.withZone(org.joda.time.DateTimeZone)" proba="0.3684210526315789"></transition><transition target="s6" action="org.joda.time.format.DateTimeFormatter.withOffsetParsed()" proba="0.10526315789473684"></transition><transition target="sX" action="epsilon" proba="0.3157894736842105"></transition><transition target="s12" action="org.joda.time.format.DateTimeFormatter.parseMutableDateTime(java.lang.String)" proba="0.05263157894736842"></transition></state><state id="s56"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s15"><transition target="sX" action="epsilon" proba="0.1111111111111111"></transition><transition target="s15" action="org.joda.time.format.DateTimeFormatter.getPrinter()" proba="0.1111111111111111"></transition><transition target="s16" action="org.joda.time.format.DateTimeFormatter.getParser()" proba="0.7777777777777778"></transition></state><state id="s59"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s58"><transition target="s59" action="org.joda.time.format.DateTimeFormatter.printTo(java.io.Writer,long)" proba="1.0"></transition></state><state id="s14"><transition target="s9" action="org.joda.time.format.DateTimeFormatter.withZoneUTC()" proba="0.18181818181818182"></transition><transition target="s48" action="org.joda.time.format.DateTimeFormatter.print(long)" proba="0.36363636363636365"></transition><transition target="s1" action="org.joda.time.format.DateTimeFormatter.print(org.joda.time.ReadableInstant)" proba="0.45454545454545453"></transition></state><state id="s17"><transition target="s11" action="org.joda.time.format.DateTimeFormatter.withChronology(org.joda.time.Chronology)" proba="0.5"></transition><transition target="s6" action="org.joda.time.format.DateTimeFormatter.withOffsetParsed()" proba="0.05"></transition><transition target="s23" action="org.joda.time.format.DateTimeFormatter.dateOptionalTimeParser()" proba="0.1"></transition><transition target="s26" action="org.joda.time.format.DateTimeFormatter.getInstanceUTC()" proba="0.2"></transition><transition target="s19" action="org.joda.time.format.DateTimeFormatter.fromString(java.lang.String)" proba="0.15"></transition></state><state id="s16"><transition target="s13" action="org.joda.time.format.DateTimeFormatter.isPrinter()" proba="0.375"></transition><transition target="sX" action="epsilon" proba="0.25"></transition><transition target="s15" action="org.joda.time.format.DateTimeFormatter.getPrinter()" proba="0.25"></transition><transition target="s16" action="org.joda.time.format.DateTimeFormatter.getParser()" proba="0.125"></transition></state><state id="s19"><transition target="s20" action="org.joda.time.format.DateTimeFormatter.getZone()" proba="1.0"></transition></state><state id="s18"><transition target="s20" action="org.joda.time.format.DateTimeFormatter.getZone()" proba="0.13333333333333333"></transition><transition target="s21" action="org.joda.time.format.DateTimeFormatter.getChronology(org.joda.time.Chronology)" proba="0.022222222222222223"></transition><transition target="sX" action="epsilon" proba="0.7111111111111111"></transition><transition target="s17" action="org.joda.time.format.DateTimeFormatter.dateTimeParser()" proba="0.044444444444444446"></transition><transition target="s18" action="org.joda.time.format.DateTimeFormatter.parseMillis(java.lang.String)" proba="0.08888888888888889"></transition></state><state id="s60"><transition target="s20" action="org.joda.time.format.DateTimeFormatter.getZone()" proba="1.0"></transition></state><state id="s62"><transition target="s45" action="org.joda.time.format.DateTimeFormatter.withPivotYear(java.lang.Integer)" proba="0.6666666666666666"></transition><transition target="s61" action="org.joda.time.format.DateTimeFormatter.withPivotYear(int)" proba="0.3333333333333333"></transition></state><state id="s61"><transition target="s45" action="org.joda.time.format.DateTimeFormatter.withPivotYear(java.lang.Integer)" proba="0.5"></transition><transition target="s62" action="org.joda.time.format.DateTimeFormatter.getPivotYear()" proba="0.5"></transition></state><state id="s20"><transition target="s20" action="org.joda.time.format.DateTimeFormatter.getZone()" proba="0.10638297872340426"></transition><transition target="s4" action="org.joda.time.format.DateTimeFormatter.parseDateTime(java.lang.String)" proba="0.0425531914893617"></transition><transition target="s11" action="org.joda.time.format.DateTimeFormatter.withChronology(org.joda.time.Chronology)" proba="0.02127659574468085"></transition><transition target="s5" action="org.joda.time.format.DateTimeFormatter.withZone(org.joda.time.DateTimeZone)" proba="0.06382978723404255"></transition><transition target="s21" action="org.joda.time.format.DateTimeFormatter.getChronology(org.joda.time.Chronology)" proba="0.06382978723404255"></transition><transition target="s6" action="org.joda.time.format.DateTimeFormatter.withOffsetParsed()" proba="0.0425531914893617"></transition><transition target="s24" action="org.joda.time.format.DateTimeFormatter.setCurrentMillisFixed(long)" proba="0.19148936170212766"></transition><transition target="sX" action="epsilon" proba="0.0425531914893617"></transition><transition target="s25" action="org.joda.time.format.DateTimeFormatter.withUTC()" proba="0.19148936170212766"></transition><transition target="s19" action="org.joda.time.format.DateTimeFormatter.fromString(java.lang.String)" proba="0.19148936170212766"></transition><transition target="s18" action="org.joda.time.format.DateTimeFormatter.parseMillis(java.lang.String)" proba="0.02127659574468085"></transition><transition target="s60" action="org.joda.time.format.DateTimeFormatter.isOffsetParsed()" proba="0.02127659574468085"></transition></state><state id="s63"><transition target="s2" action="org.joda.time.format.DateTimeFormatter.withLocale(java.util.Locale)" proba="1.0"></transition></state><state id="s22"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s21"><transition target="s20" action="org.joda.time.format.DateTimeFormatter.getZone()" proba="0.043478260869565216"></transition><transition target="s11" action="org.joda.time.format.DateTimeFormatter.withChronology(org.joda.time.Chronology)" proba="0.13043478260869565"></transition><transition target="s21" action="org.joda.time.format.DateTimeFormatter.getChronology(org.joda.time.Chronology)" proba="0.43478260869565216"></transition><transition target="s25" action="org.joda.time.format.DateTimeFormatter.withUTC()" proba="0.391304347826087"></transition></state><state id="s24"><transition target="s21" action="org.joda.time.format.DateTimeFormatter.getChronology(org.joda.time.Chronology)" proba="1.0"></transition></state><state id="s23"><transition target="s20" action="org.joda.time.format.DateTimeFormatter.getZone()" proba="1.0"></transition></state><state id="s26"><transition target="s11" action="org.joda.time.format.DateTimeFormatter.withChronology(org.joda.time.Chronology)" proba="0.5"></transition><transition target="s27" action="org.joda.time.format.DateTimeFormatter.year()" proba="0.5"></transition></state><state id="s25"><transition target="s11" action="org.joda.time.format.DateTimeFormatter.withChronology(org.joda.time.Chronology)" proba="0.55"></transition><transition target="s55" action="org.joda.time.format.DateTimeFormatter.getInstance()" proba="0.05"></transition><transition target="s27" action="org.joda.time.format.DateTimeFormatter.year()" proba="0.4"></transition></state><state id="s28"><transition target="s28" action="org.joda.time.format.DateTimeFormatter.getDateTimeMillis(int,int,int,int,int,int,int)" proba="0.5"></transition><transition target="s27" action="org.joda.time.format.DateTimeFormatter.year()" proba="0.5"></transition></state><state id="s27"><transition target="s11" action="org.joda.time.format.DateTimeFormatter.withChronology(org.joda.time.Chronology)" proba="0.1111111111111111"></transition><transition target="s32" action="org.joda.time.format.DateTimeFormatter.dayOfYear()" proba="0.1111111111111111"></transition><transition target="s28" action="org.joda.time.format.DateTimeFormatter.getDateTimeMillis(int,int,int,int,int,int,int)" proba="0.1111111111111111"></transition><transition target="s27" action="org.joda.time.format.DateTimeFormatter.year()" proba="0.2222222222222222"></transition><transition target="s29" action="org.joda.time.format.DateTimeFormatter.monthOfYear()" proba="0.4444444444444444"></transition></state><state id="s29"><transition target="s30" action="org.joda.time.format.DateTimeFormatter.dayOfMonth()" proba="1.0"></transition></state></states></ts>