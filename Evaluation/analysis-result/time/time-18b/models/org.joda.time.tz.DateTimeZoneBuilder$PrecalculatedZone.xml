<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s4" action="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.setStandardOffset(int)" proba="1.0"></transition></state><state id="s4"><transition target="s5" action="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.addRecurringSavings(java.lang.String,int,int,int,char,int,int,int,boolean,int)" proba="1.0"></transition></state><state id="s5"><transition target="s5" action="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.addRecurringSavings(java.lang.String,int,int,int,char,int,int,int,boolean,int)" proba="0.5"></transition><transition target="s6" action="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.toDateTimeZone(java.lang.String,boolean)" proba="0.5"></transition></state><state id="s6"><transition target="s2" action="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.hashCode()" proba="1.0"></transition></state><state id="s7"><transition target="s8" action="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.convertUTCToLocal(long)" proba="1.0"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="s9" action="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.convertLocalToUTC(long,boolean,long)" proba="1.0"></transition></state><state id="s9"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s11"><transition target="s11" action="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getID()" proba="0.5"></transition><transition target="s1" action="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.fromString(java.lang.String)" proba="0.25"></transition><transition target="s2" action="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.hashCode()" proba="0.25"></transition></state><state id="s10"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s12"><transition target="s12" action="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.readFrom(java.io.DataInput,java.lang.String)" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.5"></transition></state><state id="s0"><transition target="s3" action="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.&lt;init&gt;()" proba="0.005128205128205128"></transition><transition target="s10" action="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" proba="0.005128205128205128"></transition><transition target="s12" action="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.readFrom(java.io.DataInput,java.lang.String)" proba="0.005128205128205128"></transition><transition target="s1" action="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.fromString(java.lang.String)" proba="0.9846153846153847"></transition></state><state id="s1"><transition target="s11" action="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getID()" proba="0.008968609865470852"></transition><transition target="s2" action="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.hashCode()" proba="0.9910313901345291"></transition></state><state id="s2"><transition target="s7" action="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.convertLocalToUTC(long,boolean)" proba="0.00141643059490085"></transition><transition target="sX" action="epsilon" proba="0.2719546742209632"></transition><transition target="s1" action="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.fromString(java.lang.String)" proba="0.042492917847025496"></transition><transition target="s2" action="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.hashCode()" proba="0.6841359773371105"></transition></state></states></ts>