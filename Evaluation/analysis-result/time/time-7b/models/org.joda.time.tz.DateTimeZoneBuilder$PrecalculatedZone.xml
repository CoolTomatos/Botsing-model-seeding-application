<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.readFrom(java.io.DataInput,java.lang.String)" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.5"></transition></state><state id="s4"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s0"><transition target="s3" action="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.readFrom(java.io.DataInput,java.lang.String)" proba="0.029411764705882353"></transition><transition target="s4" action="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" proba="0.029411764705882353"></transition><transition target="s1" action="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.fromString(java.lang.String)" proba="0.9411764705882353"></transition></state><state id="s1"><transition target="s2" action="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.hashCode()" proba="1.0"></transition></state><state id="s2"><transition target="sX" action="epsilon" proba="0.42105263157894735"></transition><transition target="s2" action="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.hashCode()" proba="0.5789473684210527"></transition></state></states></ts>