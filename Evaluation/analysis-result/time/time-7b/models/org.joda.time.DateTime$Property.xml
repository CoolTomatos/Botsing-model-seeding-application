<?xml version="1.0"?><ts><start>s0</start><states><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s31"><transition target="s25" action="org.joda.time.DateTime$Property.getChronology(org.joda.time.Chronology)" proba="1.0"></transition></state><state id="s30"><transition target="s25" action="org.joda.time.DateTime$Property.getChronology(org.joda.time.Chronology)" proba="1.0"></transition></state><state id="s11"><transition target="s11" action="org.joda.time.DateTime$Property.getInstanceUTC()" proba="0.3333333333333333"></transition><transition target="s12" action="org.joda.time.DateTime$Property.&lt;init&gt;(org.joda.time.Chronology)" proba="0.3333333333333333"></transition><transition target="s17" action="org.joda.time.DateTime$Property.hashCode()" proba="0.3333333333333333"></transition></state><state id="s33"><transition target="s25" action="org.joda.time.DateTime$Property.getChronology(org.joda.time.Chronology)" proba="1.0"></transition></state><state id="s10"><transition target="s1" action="org.joda.time.DateTime$Property.isLeap()" proba="1.0"></transition></state><state id="s32"><transition target="s11" action="org.joda.time.DateTime$Property.getInstanceUTC()" proba="0.3333333333333333"></transition><transition target="s25" action="org.joda.time.DateTime$Property.getChronology(org.joda.time.Chronology)" proba="0.3333333333333333"></transition><transition target="s14" action="org.joda.time.DateTime$Property.setCopy(int)" proba="0.3333333333333333"></transition></state><state id="s13"><transition target="s14" action="org.joda.time.DateTime$Property.setCopy(int)" proba="0.5"></transition><transition target="s25" action="org.joda.time.DateTime$Property.getChronology(org.joda.time.Chronology)" proba="0.5"></transition></state><state id="s35"><transition target="s32" action="org.joda.time.DateTime$Property.dayOfMonth()" proba="1.0"></transition></state><state id="s12"><transition target="s13" action="org.joda.time.DateTime$Property.year()" proba="1.0"></transition></state><state id="s34"><transition target="s35" action="org.joda.time.DateTime$Property.&lt;init&gt;(java.lang.Object,org.joda.time.Chronology)" proba="1.0"></transition></state><state id="s15"><transition target="s22" action="org.joda.time.DateTime$Property.getMinimumDaysInFirstWeek()" proba="0.5"></transition><transition target="s16" action="org.joda.time.DateTime$Property.getZone(java.lang.String)" proba="0.5"></transition></state><state id="s14"><transition target="sX" action="epsilon" proba="0.6666666666666666"></transition><transition target="s36" action="org.joda.time.DateTime$Property.getChronology()" proba="0.3333333333333333"></transition></state><state id="s36"><transition target="s32" action="org.joda.time.DateTime$Property.dayOfMonth()" proba="1.0"></transition></state><state id="s17"><transition target="s17" action="org.joda.time.DateTime$Property.hashCode()" proba="0.3333333333333333"></transition><transition target="s18" action="org.joda.time.DateTime$Property.getOffsetFromLocal(long)" proba="0.6666666666666666"></transition></state><state id="s16"><transition target="s17" action="org.joda.time.DateTime$Property.hashCode()" proba="1.0"></transition></state><state id="s19"><transition target="s20" action="org.joda.time.DateTime$Property.&lt;init&gt;(int,int,int,int,int,int,int,org.joda.time.DateTimeZone)" proba="1.0"></transition></state><state id="s18"><transition target="sX" action="epsilon" proba="0.5"></transition><transition target="s19" action="org.joda.time.DateTime$Property.getOffset(long)" proba="0.5"></transition></state><state id="s0"><transition target="s11" action="org.joda.time.DateTime$Property.getInstanceUTC()" proba="0.125"></transition><transition target="s15" action="org.joda.time.DateTime$Property.fromString(java.lang.String)" proba="0.25"></transition><transition target="s1" action="org.joda.time.DateTime$Property.isLeap()" proba="0.625"></transition></state><state id="s1"><transition target="s2" action="org.joda.time.DateTime$Property.getLeapAmount()" proba="1.0"></transition></state><state id="s2"><transition target="s3" action="org.joda.time.DateTime$Property.getLeapDurationField()" proba="1.0"></transition></state><state id="s3"><transition target="s4" action="org.joda.time.DateTime$Property.getType()" proba="0.4"></transition><transition target="s6" action="org.joda.time.DateTime$Property.getMinimumValue()" proba="0.6"></transition></state><state id="s4"><transition target="s5" action="org.joda.time.DateTime$Property.addToCopy(int)" proba="0.3"></transition><transition target="s6" action="org.joda.time.DateTime$Property.getMinimumValue()" proba="0.5"></transition><transition target="s1" action="org.joda.time.DateTime$Property.isLeap()" proba="0.2"></transition></state><state id="s5"><transition target="s10" action="org.joda.time.DateTime$Property.addWrapFieldToCopy(int)" proba="0.2"></transition><transition target="sX" action="epsilon" proba="0.2"></transition><transition target="s1" action="org.joda.time.DateTime$Property.isLeap()" proba="0.6"></transition></state><state id="s6"><transition target="s7" action="org.joda.time.DateTime$Property.getMinimumValueOverall()" proba="1.0"></transition></state><state id="s7"><transition target="s8" action="org.joda.time.DateTime$Property.getMaximumValue()" proba="1.0"></transition></state><state id="s8"><transition target="s9" action="org.joda.time.DateTime$Property.getMaximumValueOverall()" proba="1.0"></transition></state><state id="s9"><transition target="s5" action="org.joda.time.DateTime$Property.addToCopy(int)" proba="0.6"></transition><transition target="sX" action="epsilon" proba="0.1"></transition><transition target="s1" action="org.joda.time.DateTime$Property.isLeap()" proba="0.3"></transition></state><state id="s20"><transition target="s21" action="org.joda.time.DateTime$Property.hourOfDay()" proba="1.0"></transition></state><state id="s22"><transition target="s23" action="org.joda.time.DateTime$Property.getGregorianCutover()" proba="1.0"></transition></state><state id="s21"><transition target="s14" action="org.joda.time.DateTime$Property.setCopy(int)" proba="1.0"></transition></state><state id="s24"><transition target="s25" action="org.joda.time.DateTime$Property.getChronology(org.joda.time.Chronology)" proba="1.0"></transition></state><state id="s23"><transition target="s24" action="org.joda.time.DateTime$Property.getZone(org.joda.time.DateTimeZone)" proba="1.0"></transition></state><state id="s26"><transition target="s27" action="org.joda.time.DateTime$Property.getInstantConverter(java.lang.Object)" proba="1.0"></transition></state><state id="s25"><transition target="s31" action="org.joda.time.DateTime$Property.monthOfYear()" proba="0.1"></transition><transition target="s33" action="org.joda.time.DateTime$Property.months()" proba="0.1"></transition><transition target="s32" action="org.joda.time.DateTime$Property.dayOfMonth()" proba="0.1"></transition><transition target="s13" action="org.joda.time.DateTime$Property.year()" proba="0.1"></transition><transition target="s34" action="org.joda.time.DateTime$Property.days()" proba="0.1"></transition><transition target="s26" action="org.joda.time.DateTime$Property.getInstance()" proba="0.1"></transition><transition target="s25" action="org.joda.time.DateTime$Property.getChronology(org.joda.time.Chronology)" proba="0.3"></transition><transition target="s29" action="org.joda.time.DateTime$Property.getZone()" proba="0.1"></transition></state><state id="s28"><transition target="s25" action="org.joda.time.DateTime$Property.getChronology(org.joda.time.Chronology)" proba="1.0"></transition></state><state id="s27"><transition target="s28" action="org.joda.time.DateTime$Property.getChronology(java.lang.Object,org.joda.time.Chronology)" proba="1.0"></transition></state><state id="s29"><transition target="s30" action="org.joda.time.DateTime$Property.withUTC()" proba="1.0"></transition></state></states></ts>