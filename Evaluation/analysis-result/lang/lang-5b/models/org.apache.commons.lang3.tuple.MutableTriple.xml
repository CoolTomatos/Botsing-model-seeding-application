<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s4" action="org.apache.commons.lang3.tuple.MutableTriple.getMiddle()" proba="1.0"></transition></state><state id="s4"><transition target="s5" action="org.apache.commons.lang3.tuple.MutableTriple.getRight()" proba="1.0"></transition></state><state id="s5"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s6"><transition target="s3" action="org.apache.commons.lang3.tuple.MutableTriple.getLeft()" proba="1.0"></transition></state><state id="s7"><transition target="sX" action="epsilon" proba="0.75"></transition><transition target="s1" action="org.apache.commons.lang3.tuple.MutableTriple.of(java.lang.Object,java.lang.Object,java.lang.Object)" proba="0.25"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="sX" action="epsilon" proba="0.25"></transition><transition target="s1" action="org.apache.commons.lang3.tuple.MutableTriple.of(java.lang.Object,java.lang.Object,java.lang.Object)" proba="0.75"></transition></state><state id="s9"><transition target="sX" action="epsilon" proba="0.5"></transition><transition target="s9" action="org.apache.commons.lang3.tuple.MutableTriple.equals(java.lang.Object)" proba="0.5"></transition></state><state id="s11"><transition target="s12" action="org.apache.commons.lang3.tuple.MutableTriple.setRight(java.lang.Object)" proba="1.0"></transition></state><state id="s10"><transition target="s11" action="org.apache.commons.lang3.tuple.MutableTriple.setMiddle(java.lang.Object)" proba="1.0"></transition></state><state id="s12"><transition target="s3" action="org.apache.commons.lang3.tuple.MutableTriple.getLeft()" proba="1.0"></transition></state><state id="s0"><transition target="s3" action="org.apache.commons.lang3.tuple.MutableTriple.getLeft()" proba="0.125"></transition><transition target="s6" action="org.apache.commons.lang3.tuple.MutableTriple.&lt;init&gt;()" proba="0.0625"></transition><transition target="s7" action="org.apache.commons.lang3.tuple.MutableTriple.hashCode()" proba="0.125"></transition><transition target="s9" action="org.apache.commons.lang3.tuple.MutableTriple.equals(java.lang.Object)" proba="0.0625"></transition><transition target="s1" action="org.apache.commons.lang3.tuple.MutableTriple.of(java.lang.Object,java.lang.Object,java.lang.Object)" proba="0.4375"></transition><transition target="s2" action="org.apache.commons.lang3.tuple.MutableTriple.&lt;init&gt;(java.lang.Object,java.lang.Object,java.lang.Object)" proba="0.1875"></transition></state><state id="s1"><transition target="s7" action="org.apache.commons.lang3.tuple.MutableTriple.hashCode()" proba="0.08695652173913043"></transition><transition target="sX" action="epsilon" proba="0.17391304347826086"></transition><transition target="s8" action="org.apache.commons.lang3.tuple.MutableTriple.toString()" proba="0.34782608695652173"></transition><transition target="s1" action="org.apache.commons.lang3.tuple.MutableTriple.of(java.lang.Object,java.lang.Object,java.lang.Object)" proba="0.391304347826087"></transition></state><state id="s2"><transition target="s3" action="org.apache.commons.lang3.tuple.MutableTriple.getLeft()" proba="0.6666666666666666"></transition><transition target="s10" action="org.apache.commons.lang3.tuple.MutableTriple.setLeft(java.lang.Object)" proba="0.3333333333333333"></transition></state></states></ts>