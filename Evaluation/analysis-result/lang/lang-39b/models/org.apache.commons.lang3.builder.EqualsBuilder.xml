<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s4"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s5"><transition target="s5" action="org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(java.lang.Object,java.lang.Object)" proba="0.7"></transition><transition target="sX" action="epsilon" proba="0.2"></transition><transition target="s15" action="org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(java.lang.Object,java.lang.Object,java.lang.String[])" proba="0.1"></transition></state><state id="s6"><transition target="s6" action="org.apache.commons.lang3.builder.EqualsBuilder.splitByCharacterTypeCamelCase(java.lang.String)" proba="0.6666666666666666"></transition><transition target="s7" action="org.apache.commons.lang3.builder.EqualsBuilder.append(java.lang.Object,java.lang.Object)" proba="0.3333333333333333"></transition></state><state id="s7"><transition target="s8" action="org.apache.commons.lang3.builder.EqualsBuilder.isEquals()" proba="1.0"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="s13" action="org.apache.commons.lang3.builder.EqualsBuilder.setEquals(boolean)" proba="0.375"></transition><transition target="sX" action="epsilon" proba="0.5"></transition><transition target="s16" action="org.apache.commons.lang3.builder.EqualsBuilder.reset()" proba="0.125"></transition></state><state id="s9"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s11"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s10"><transition target="s10" action="org.apache.commons.lang3.builder.EqualsBuilder.splitByCharacterType(java.lang.String)" proba="0.6666666666666666"></transition><transition target="s7" action="org.apache.commons.lang3.builder.EqualsBuilder.append(java.lang.Object,java.lang.Object)" proba="0.3333333333333333"></transition></state><state id="s13"><transition target="s8" action="org.apache.commons.lang3.builder.EqualsBuilder.isEquals()" proba="1.0"></transition></state><state id="s12"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s15"><transition target="sX" action="epsilon" proba="0.125"></transition><transition target="s15" action="org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(java.lang.Object,java.lang.Object,java.lang.String[])" proba="0.875"></transition></state><state id="s14"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s17"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s16"><transition target="s8" action="org.apache.commons.lang3.builder.EqualsBuilder.isEquals()" proba="1.0"></transition></state><state id="s18"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s0"><transition target="s5" action="org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(java.lang.Object,java.lang.Object)" proba="0.09090909090909091"></transition><transition target="s1" action="org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(java.lang.Object,java.lang.Object,boolean)" proba="0.22727272727272727"></transition><transition target="s2" action="org.apache.commons.lang3.builder.EqualsBuilder.&lt;init&gt;()" proba="0.6818181818181818"></transition></state><state id="s1"><transition target="s5" action="org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(java.lang.Object,java.lang.Object)" proba="0.023255813953488372"></transition><transition target="sX" action="epsilon" proba="0.09302325581395349"></transition><transition target="s1" action="org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(java.lang.Object,java.lang.Object,boolean)" proba="0.8837209302325582"></transition></state><state id="s2"><transition target="s3" action="org.apache.commons.lang3.builder.EqualsBuilder.subarray(char[],int,int)" proba="0.06666666666666667"></transition><transition target="s4" action="org.apache.commons.lang3.builder.EqualsBuilder.subarray(float[],int,int)" proba="0.06666666666666667"></transition><transition target="s11" action="org.apache.commons.lang3.builder.EqualsBuilder.subarray(byte[],int,int)" proba="0.06666666666666667"></transition><transition target="s6" action="org.apache.commons.lang3.builder.EqualsBuilder.splitByCharacterTypeCamelCase(java.lang.String)" proba="0.06666666666666667"></transition><transition target="s10" action="org.apache.commons.lang3.builder.EqualsBuilder.splitByCharacterType(java.lang.String)" proba="0.06666666666666667"></transition><transition target="sX" action="epsilon" proba="0.2"></transition><transition target="s12" action="org.apache.commons.lang3.builder.EqualsBuilder.subarray(short[],int,int)" proba="0.06666666666666667"></transition><transition target="s8" action="org.apache.commons.lang3.builder.EqualsBuilder.isEquals()" proba="0.13333333333333333"></transition><transition target="s9" action="org.apache.commons.lang3.builder.EqualsBuilder.subarray(double[],int,int)" proba="0.06666666666666667"></transition><transition target="s14" action="org.apache.commons.lang3.builder.EqualsBuilder.subarray(boolean[],int,int)" proba="0.06666666666666667"></transition><transition target="s17" action="org.apache.commons.lang3.builder.EqualsBuilder.subarray(long[],int,int)" proba="0.06666666666666667"></transition><transition target="s18" action="org.apache.commons.lang3.builder.EqualsBuilder.subarray(int[],int,int)" proba="0.06666666666666667"></transition></state></states></ts>