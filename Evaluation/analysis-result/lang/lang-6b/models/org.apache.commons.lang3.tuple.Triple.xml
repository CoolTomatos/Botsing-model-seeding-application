<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="org.apache.commons.lang3.tuple.Triple.of(java.lang.Object,java.lang.Object,java.lang.Object)" proba="0.35714285714285715"></transition><transition target="sX" action="epsilon" proba="0.6428571428571429"></transition></state><state id="s4"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s5"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s0"><transition target="s3" action="org.apache.commons.lang3.tuple.Triple.of(java.lang.Object,java.lang.Object,java.lang.Object)" proba="0.42857142857142855"></transition><transition target="s4" action="org.apache.commons.lang3.tuple.Triple.hashCode()" proba="0.09523809523809523"></transition><transition target="s5" action="org.apache.commons.lang3.tuple.Triple.toString()" proba="0.047619047619047616"></transition><transition target="s1" action="org.apache.commons.lang3.tuple.Triple.compareTo(org.apache.commons.lang3.tuple.Triple)" proba="0.38095238095238093"></transition><transition target="s2" action="org.apache.commons.lang3.tuple.Triple.toString(java.lang.String)" proba="0.047619047619047616"></transition></state><state id="s1"><transition target="sX" action="epsilon" proba="0.5"></transition><transition target="s1" action="org.apache.commons.lang3.tuple.Triple.compareTo(org.apache.commons.lang3.tuple.Triple)" proba="0.5"></transition></state><state id="s2"><transition target="sX" action="epsilon" proba="1.0"></transition></state></states></ts>