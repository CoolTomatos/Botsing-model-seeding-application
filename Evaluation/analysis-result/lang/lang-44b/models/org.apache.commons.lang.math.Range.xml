<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s4" action="org.apache.commons.lang.math.Range.getMaximumFloat()" proba="0.3333333333333333"></transition><transition target="sX" action="epsilon" proba="0.6666666666666666"></transition></state><state id="s4"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s5"><transition target="s5" action="org.apache.commons.lang.math.Range.containsNumber(java.lang.Number)" proba="0.9473684210526315"></transition><transition target="sX" action="epsilon" proba="0.05263157894736842"></transition></state><state id="s6"><transition target="s6" action="org.apache.commons.lang.math.Range.containsInteger(int)" proba="0.7142857142857143"></transition><transition target="s7" action="org.apache.commons.lang.math.Range.getMinimumInteger()" proba="0.14285714285714285"></transition><transition target="sX" action="epsilon" proba="0.14285714285714285"></transition></state><state id="s7"><transition target="s10" action="org.apache.commons.lang.math.Range.getMaximumInteger()" proba="0.3333333333333333"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition><transition target="s14" action="org.apache.commons.lang.math.Range.getMinimumDouble()" proba="0.3333333333333333"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="s6" action="org.apache.commons.lang.math.Range.containsInteger(int)" proba="0.045454545454545456"></transition><transition target="s8" action="org.apache.commons.lang.math.Range.containsInteger(java.lang.Number)" proba="0.9545454545454546"></transition></state><state id="s9"><transition target="s10" action="org.apache.commons.lang.math.Range.getMaximumInteger()" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.5"></transition></state><state id="s20"><transition target="s20" action="org.apache.commons.lang.math.Range.containsRange(org.apache.commons.lang.math.Range)" proba="0.9545454545454546"></transition><transition target="sX" action="epsilon" proba="0.045454545454545456"></transition></state><state id="s11"><transition target="s4" action="org.apache.commons.lang.math.Range.getMaximumFloat()" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.5"></transition></state><state id="s22"><transition target="s22" action="org.apache.commons.lang.math.Range.hashCode()" proba="0.6666666666666666"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition></state><state id="s10"><transition target="s11" action="org.apache.commons.lang.math.Range.getMaximumDouble()" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.5"></transition></state><state id="s21"><transition target="s21" action="org.apache.commons.lang.math.Range.containsDouble(java.lang.Number)" proba="0.9545454545454546"></transition><transition target="s19" action="org.apache.commons.lang.math.Range.containsDouble(double)" proba="0.045454545454545456"></transition></state><state id="s13"><transition target="s13" action="org.apache.commons.lang.math.Range.toString()" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.5"></transition></state><state id="s12"><transition target="s12" action="org.apache.commons.lang.math.Range.equals(java.lang.Object)" proba="0.9166666666666666"></transition><transition target="sX" action="epsilon" proba="0.08333333333333333"></transition></state><state id="s15"><transition target="s7" action="org.apache.commons.lang.math.Range.getMinimumInteger()" proba="0.3333333333333333"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition><transition target="s9" action="org.apache.commons.lang.math.Range.getMaximumLong()" proba="0.3333333333333333"></transition></state><state id="s14"><transition target="s3" action="org.apache.commons.lang.math.Range.getMinimumFloat()" proba="0.3333333333333333"></transition><transition target="s11" action="org.apache.commons.lang.math.Range.getMaximumDouble()" proba="0.3333333333333333"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition></state><state id="s17"><transition target="s17" action="org.apache.commons.lang.math.Range.containsFloat(java.lang.Number)" proba="0.9545454545454546"></transition><transition target="s18" action="org.apache.commons.lang.math.Range.containsFloat(float)" proba="0.045454545454545456"></transition></state><state id="s16"><transition target="sX" action="epsilon" proba="0.045454545454545456"></transition><transition target="s16" action="org.apache.commons.lang.math.Range.overlapsRange(org.apache.commons.lang.math.Range)" proba="0.9545454545454546"></transition></state><state id="s19"><transition target="sX" action="epsilon" proba="0.14285714285714285"></transition><transition target="s14" action="org.apache.commons.lang.math.Range.getMinimumDouble()" proba="0.14285714285714285"></transition><transition target="s19" action="org.apache.commons.lang.math.Range.containsDouble(double)" proba="0.7142857142857143"></transition></state><state id="s18"><transition target="s3" action="org.apache.commons.lang.math.Range.getMinimumFloat()" proba="0.14285714285714285"></transition><transition target="sX" action="epsilon" proba="0.14285714285714285"></transition><transition target="s18" action="org.apache.commons.lang.math.Range.containsFloat(float)" proba="0.7142857142857143"></transition></state><state id="s0"><transition target="s3" action="org.apache.commons.lang.math.Range.getMinimumFloat()" proba="0.038461538461538464"></transition><transition target="s5" action="org.apache.commons.lang.math.Range.containsNumber(java.lang.Number)" proba="0.19230769230769232"></transition><transition target="s6" action="org.apache.commons.lang.math.Range.containsInteger(int)" proba="0.038461538461538464"></transition><transition target="s7" action="org.apache.commons.lang.math.Range.getMinimumInteger()" proba="0.038461538461538464"></transition><transition target="s8" action="org.apache.commons.lang.math.Range.containsInteger(java.lang.Number)" proba="0.038461538461538464"></transition><transition target="s9" action="org.apache.commons.lang.math.Range.getMaximumLong()" proba="0.038461538461538464"></transition><transition target="s20" action="org.apache.commons.lang.math.Range.containsRange(org.apache.commons.lang.math.Range)" proba="0.038461538461538464"></transition><transition target="s22" action="org.apache.commons.lang.math.Range.hashCode()" proba="0.038461538461538464"></transition><transition target="s21" action="org.apache.commons.lang.math.Range.containsDouble(java.lang.Number)" proba="0.038461538461538464"></transition><transition target="s13" action="org.apache.commons.lang.math.Range.toString()" proba="0.11538461538461539"></transition><transition target="s12" action="org.apache.commons.lang.math.Range.equals(java.lang.Object)" proba="0.038461538461538464"></transition><transition target="s15" action="org.apache.commons.lang.math.Range.getMinimumLong()" proba="0.07692307692307693"></transition><transition target="s14" action="org.apache.commons.lang.math.Range.getMinimumDouble()" proba="0.038461538461538464"></transition><transition target="s17" action="org.apache.commons.lang.math.Range.containsFloat(java.lang.Number)" proba="0.038461538461538464"></transition><transition target="s16" action="org.apache.commons.lang.math.Range.overlapsRange(org.apache.commons.lang.math.Range)" proba="0.038461538461538464"></transition><transition target="s19" action="org.apache.commons.lang.math.Range.containsDouble(double)" proba="0.038461538461538464"></transition><transition target="s18" action="org.apache.commons.lang.math.Range.containsFloat(float)" proba="0.038461538461538464"></transition><transition target="s1" action="org.apache.commons.lang.math.Range.containsLong(java.lang.Number)" proba="0.038461538461538464"></transition><transition target="s2" action="org.apache.commons.lang.math.Range.containsLong(long)" proba="0.038461538461538464"></transition></state><state id="s1"><transition target="s1" action="org.apache.commons.lang.math.Range.containsLong(java.lang.Number)" proba="0.9545454545454546"></transition><transition target="s2" action="org.apache.commons.lang.math.Range.containsLong(long)" proba="0.045454545454545456"></transition></state><state id="s2"><transition target="sX" action="epsilon" proba="0.14285714285714285"></transition><transition target="s15" action="org.apache.commons.lang.math.Range.getMinimumLong()" proba="0.14285714285714285"></transition><transition target="s2" action="org.apache.commons.lang.math.Range.containsLong(long)" proba="0.7142857142857143"></transition></state></states></ts>