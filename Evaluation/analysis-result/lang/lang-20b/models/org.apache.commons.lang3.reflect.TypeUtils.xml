<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type,java.lang.reflect.Type)" proba="0.9545454545454546"></transition><transition target="sX" action="epsilon" proba="0.045454545454545456"></transition></state><state id="s4"><transition target="s4" action="org.apache.commons.lang3.reflect.TypeUtils.getRawType(java.lang.reflect.Type,java.lang.reflect.Type)" proba="0.8888888888888888"></transition><transition target="sX" action="epsilon" proba="0.1111111111111111"></transition></state><state id="s5"><transition target="s5" action="org.apache.commons.lang3.reflect.TypeUtils.isInstance(java.lang.Object,java.lang.reflect.Type)" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.5"></transition></state><state id="s6"><transition target="s6" action="org.apache.commons.lang3.reflect.TypeUtils.isArrayType(java.lang.reflect.Type)" proba="0.9411764705882353"></transition><transition target="sX" action="epsilon" proba="0.058823529411764705"></transition></state><state id="s7"><transition target="s7" action="org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(java.lang.reflect.Type,java.lang.Class)" proba="0.75"></transition><transition target="sX" action="epsilon" proba="0.25"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="s8" action="org.apache.commons.lang3.reflect.TypeUtils.getArrayComponentType(java.lang.reflect.Type)" proba="0.9333333333333333"></transition><transition target="sX" action="epsilon" proba="0.06666666666666667"></transition></state><state id="s0"><transition target="s3" action="org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type,java.lang.reflect.Type)" proba="0.18181818181818182"></transition><transition target="s4" action="org.apache.commons.lang3.reflect.TypeUtils.getRawType(java.lang.reflect.Type,java.lang.reflect.Type)" proba="0.09090909090909091"></transition><transition target="s5" action="org.apache.commons.lang3.reflect.TypeUtils.isInstance(java.lang.Object,java.lang.reflect.Type)" proba="0.09090909090909091"></transition><transition target="s6" action="org.apache.commons.lang3.reflect.TypeUtils.isArrayType(java.lang.reflect.Type)" proba="0.18181818181818182"></transition><transition target="s7" action="org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(java.lang.reflect.Type,java.lang.Class)" proba="0.09090909090909091"></transition><transition target="s8" action="org.apache.commons.lang3.reflect.TypeUtils.getArrayComponentType(java.lang.reflect.Type)" proba="0.18181818181818182"></transition><transition target="s1" action="org.apache.commons.lang3.reflect.TypeUtils.determineTypeArguments(java.lang.Class,java.lang.reflect.ParameterizedType)" proba="0.09090909090909091"></transition><transition target="s2" action="org.apache.commons.lang3.reflect.TypeUtils.typesSatisfyVariables(java.util.Map)" proba="0.09090909090909091"></transition></state><state id="s1"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s2"><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition><transition target="s2" action="org.apache.commons.lang3.reflect.TypeUtils.typesSatisfyVariables(java.util.Map)" proba="0.6666666666666666"></transition></state></states></ts>