<?xml version="1.0"?><ts><start>s0</start><states><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s31"><transition target="s31" action="java.lang.String.endsWith(java.lang.String)" proba="0.25"></transition><transition target="s1" action="java.lang.String.length()" proba="0.75"></transition></state><state id="s30"><transition target="s1" action="java.lang.String.length()" proba="1.0"></transition></state><state id="s11"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s33"><transition target="s1" action="java.lang.String.length()" proba="1.0"></transition></state><state id="s10"><transition target="s4" action="java.lang.String.substring(int)" proba="0.14285714285714285"></transition><transition target="s10" action="java.lang.String.substring(int,int)" proba="0.12857142857142856"></transition><transition target="s7" action="java.lang.String.trim()" proba="0.014285714285714285"></transition><transition target="sX" action="epsilon" proba="0.44285714285714284"></transition><transition target="s12" action="java.lang.String.indexOf(java.lang.String,int)" proba="0.014285714285714285"></transition><transition target="s15" action="java.lang.String.concat(java.lang.String)" proba="0.014285714285714285"></transition><transition target="s28" action="java.lang.String.indexOf(int,int)" proba="0.014285714285714285"></transition><transition target="s18" action="java.lang.String.toCharArray()" proba="0.014285714285714285"></transition><transition target="s1" action="java.lang.String.length()" proba="0.15714285714285714"></transition><transition target="s2" action="java.lang.String.charAt(int)" proba="0.05714285714285714"></transition></state><state id="s32"><transition target="s10" action="java.lang.String.substring(int,int)" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.5"></transition></state><state id="s13"><transition target="sX" action="epsilon" proba="0.6666666666666666"></transition><transition target="s14" action="java.lang.String.startsWith(java.lang.String)" proba="0.3333333333333333"></transition></state><state id="s35"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s12"><transition target="s4" action="java.lang.String.substring(int)" proba="0.2"></transition><transition target="s10" action="java.lang.String.substring(int,int)" proba="0.2"></transition><transition target="sX" action="epsilon" proba="0.4"></transition><transition target="s12" action="java.lang.String.indexOf(java.lang.String,int)" proba="0.1"></transition><transition target="s1" action="java.lang.String.length()" proba="0.1"></transition></state><state id="s34"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s15"><transition target="s10" action="java.lang.String.substring(int,int)" proba="0.16666666666666666"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition><transition target="s15" action="java.lang.String.concat(java.lang.String)" proba="0.3333333333333333"></transition><transition target="s18" action="java.lang.String.toCharArray()" proba="0.16666666666666666"></transition></state><state id="s14"><transition target="s4" action="java.lang.String.substring(int)" proba="0.02857142857142857"></transition><transition target="s13" action="java.lang.String.toLowerCase()" proba="0.02857142857142857"></transition><transition target="sX" action="epsilon" proba="0.37142857142857144"></transition><transition target="s9" action="java.lang.String.indexOf(java.lang.String)" proba="0.11428571428571428"></transition><transition target="s14" action="java.lang.String.startsWith(java.lang.String)" proba="0.4"></transition><transition target="s1" action="java.lang.String.length()" proba="0.05714285714285714"></transition></state><state id="s17"><transition target="s10" action="java.lang.String.substring(int,int)" proba="0.20833333333333334"></transition><transition target="sX" action="epsilon" proba="0.4583333333333333"></transition><transition target="s17" action="java.lang.String.indexOf(int)" proba="0.20833333333333334"></transition><transition target="s18" action="java.lang.String.toCharArray()" proba="0.08333333333333333"></transition><transition target="s1" action="java.lang.String.length()" proba="0.041666666666666664"></transition></state><state id="s16"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s19"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s18"><transition target="sX" action="epsilon" proba="0.9166666666666666"></transition><transition target="s17" action="java.lang.String.indexOf(int)" proba="0.041666666666666664"></transition><transition target="s1" action="java.lang.String.length()" proba="0.041666666666666664"></transition></state><state id="s0"><transition target="s31" action="java.lang.String.endsWith(java.lang.String)" proba="0.009523809523809525"></transition><transition target="s30" action="java.lang.String.&lt;init&gt;(byte[],java.lang.String)" proba="0.0031746031746031746"></transition><transition target="s11" action="java.lang.String.&lt;init&gt;(char[])" proba="0.0031746031746031746"></transition><transition target="s33" action="java.lang.String.getBytes(java.lang.String)" proba="0.0031746031746031746"></transition><transition target="s10" action="java.lang.String.substring(int,int)" proba="0.022222222222222223"></transition><transition target="s32" action="java.lang.String.lastIndexOf(int)" proba="0.006349206349206349"></transition><transition target="s13" action="java.lang.String.toLowerCase()" proba="0.0031746031746031746"></transition><transition target="s35" action="java.lang.String.lastIndexOf(java.lang.String,int)" proba="0.0031746031746031746"></transition><transition target="s12" action="java.lang.String.indexOf(java.lang.String,int)" proba="0.012698412698412698"></transition><transition target="s34" action="java.lang.String.replace(char,char)" proba="0.0031746031746031746"></transition><transition target="s14" action="java.lang.String.startsWith(java.lang.String)" proba="0.06031746031746032"></transition><transition target="s17" action="java.lang.String.indexOf(int)" proba="0.03492063492063492"></transition><transition target="s16" action="java.lang.String.toUpperCase()" proba="0.009523809523809525"></transition><transition target="s19" action="java.lang.String.valueOf(char)" proba="0.012698412698412698"></transition><transition target="s18" action="java.lang.String.toCharArray()" proba="0.044444444444444446"></transition><transition target="s1" action="java.lang.String.length()" proba="0.5333333333333333"></transition><transition target="s2" action="java.lang.String.charAt(int)" proba="0.01904761904761905"></transition><transition target="s3" action="java.lang.String.lastIndexOf(java.lang.String)" proba="0.015873015873015872"></transition><transition target="s4" action="java.lang.String.substring(int)" proba="0.012698412698412698"></transition><transition target="s5" action="java.lang.String.equals(java.lang.Object)" proba="0.044444444444444446"></transition><transition target="s6" action="java.lang.String.valueOf(int)" proba="0.022222222222222223"></transition><transition target="s7" action="java.lang.String.trim()" proba="0.009523809523809525"></transition><transition target="s8" action="java.lang.String.valueOf(boolean)" proba="0.0031746031746031746"></transition><transition target="s9" action="java.lang.String.indexOf(java.lang.String)" proba="0.047619047619047616"></transition><transition target="s20" action="java.lang.String.equalsIgnoreCase(java.lang.String)" proba="0.0031746031746031746"></transition><transition target="s22" action="java.lang.String.hashCode()" proba="0.009523809523809525"></transition><transition target="s21" action="java.lang.String.&lt;init&gt;(char[],int,int)" proba="0.0031746031746031746"></transition><transition target="s24" action="java.lang.String.compareTo(java.lang.String)" proba="0.006349206349206349"></transition><transition target="s23" action="java.lang.String.lastIndexOf(int,int)" proba="0.0031746031746031746"></transition><transition target="s26" action="java.lang.String.valueOf(long)" proba="0.009523809523809525"></transition><transition target="s25" action="java.lang.String.getChars(int,int,char[],int)" proba="0.0031746031746031746"></transition><transition target="s28" action="java.lang.String.indexOf(int,int)" proba="0.0031746031746031746"></transition><transition target="s27" action="java.lang.String.valueOf(float)" proba="0.009523809523809525"></transition><transition target="s29" action="java.lang.String.valueOf(double)" proba="0.009523809523809525"></transition></state><state id="s1"><transition target="s4" action="java.lang.String.substring(int)" proba="0.038910505836575876"></transition><transition target="s5" action="java.lang.String.equals(java.lang.Object)" proba="0.01556420233463035"></transition><transition target="s7" action="java.lang.String.trim()" proba="0.0038910505836575876"></transition><transition target="sX" action="epsilon" proba="0.29961089494163423"></transition><transition target="s10" action="java.lang.String.substring(int,int)" proba="0.08560311284046693"></transition><transition target="s13" action="java.lang.String.toLowerCase()" proba="0.0038910505836575876"></transition><transition target="s12" action="java.lang.String.indexOf(java.lang.String,int)" proba="0.011673151750972763"></transition><transition target="s15" action="java.lang.String.concat(java.lang.String)" proba="0.007782101167315175"></transition><transition target="s14" action="java.lang.String.startsWith(java.lang.String)" proba="0.0038910505836575876"></transition><transition target="s25" action="java.lang.String.getChars(int,int,char[],int)" proba="0.019455252918287938"></transition><transition target="s17" action="java.lang.String.indexOf(int)" proba="0.007782101167315175"></transition><transition target="s18" action="java.lang.String.toCharArray()" proba="0.019455252918287938"></transition><transition target="s1" action="java.lang.String.length()" proba="0.17509727626459143"></transition><transition target="s2" action="java.lang.String.charAt(int)" proba="0.30739299610894943"></transition></state><state id="s2"><transition target="s4" action="java.lang.String.substring(int)" proba="0.059602649006622516"></transition><transition target="s5" action="java.lang.String.equals(java.lang.Object)" proba="0.039735099337748346"></transition><transition target="s10" action="java.lang.String.substring(int,int)" proba="0.0728476821192053"></transition><transition target="sX" action="epsilon" proba="0.31788079470198677"></transition><transition target="s23" action="java.lang.String.lastIndexOf(int,int)" proba="0.006622516556291391"></transition><transition target="s15" action="java.lang.String.concat(java.lang.String)" proba="0.006622516556291391"></transition><transition target="s17" action="java.lang.String.indexOf(int)" proba="0.019867549668874173"></transition><transition target="s28" action="java.lang.String.indexOf(int,int)" proba="0.006622516556291391"></transition><transition target="s18" action="java.lang.String.toCharArray()" proba="0.006622516556291391"></transition><transition target="s1" action="java.lang.String.length()" proba="0.052980132450331126"></transition><transition target="s2" action="java.lang.String.charAt(int)" proba="0.4105960264900662"></transition></state><state id="s3"><transition target="s10" action="java.lang.String.substring(int,int)" proba="0.3333333333333333"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition><transition target="s1" action="java.lang.String.length()" proba="0.3333333333333333"></transition></state><state id="s4"><transition target="s4" action="java.lang.String.substring(int)" proba="0.05"></transition><transition target="s10" action="java.lang.String.substring(int,int)" proba="0.1"></transition><transition target="sX" action="epsilon" proba="0.725"></transition><transition target="s17" action="java.lang.String.indexOf(int)" proba="0.05"></transition><transition target="s1" action="java.lang.String.length()" proba="0.075"></transition></state><state id="s5"><transition target="s5" action="java.lang.String.equals(java.lang.Object)" proba="0.1724137931034483"></transition><transition target="sX" action="epsilon" proba="0.5172413793103449"></transition><transition target="s1" action="java.lang.String.length()" proba="0.3103448275862069"></transition></state><state id="s6"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s7"><transition target="sX" action="epsilon" proba="0.8"></transition><transition target="s1" action="java.lang.String.length()" proba="0.2"></transition></state><state id="s8"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s9"><transition target="s3" action="java.lang.String.lastIndexOf(java.lang.String)" proba="0.03125"></transition><transition target="s4" action="java.lang.String.substring(int)" proba="0.0625"></transition><transition target="s10" action="java.lang.String.substring(int,int)" proba="0.09375"></transition><transition target="sX" action="epsilon" proba="0.375"></transition><transition target="s12" action="java.lang.String.indexOf(java.lang.String,int)" proba="0.03125"></transition><transition target="s9" action="java.lang.String.indexOf(java.lang.String)" proba="0.40625"></transition></state><state id="s20"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s22"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s21"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s24"><transition target="s24" action="java.lang.String.compareTo(java.lang.String)" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.5"></transition></state><state id="s23"><transition target="s10" action="java.lang.String.substring(int,int)" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.5"></transition></state><state id="s26"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s25"><transition target="sX" action="epsilon" proba="0.75"></transition><transition target="s25" action="java.lang.String.getChars(int,int,char[],int)" proba="0.25"></transition></state><state id="s28"><transition target="s10" action="java.lang.String.substring(int,int)" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.25"></transition><transition target="s28" action="java.lang.String.indexOf(int,int)" proba="0.25"></transition></state><state id="s27"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s29"><transition target="sX" action="epsilon" proba="1.0"></transition></state></states></ts>