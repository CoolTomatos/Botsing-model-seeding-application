<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s4" action="org.apache.commons.lang3.concurrent.BackgroundInitializerTest$BackgroundInitializerTestImpl.getFuture()" proba="0.16666666666666666"></transition><transition target="sX" action="epsilon" proba="0.8333333333333334"></transition></state><state id="s4"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s5"><transition target="s3" action="org.apache.commons.lang3.concurrent.BackgroundInitializerTest$BackgroundInitializerTestImpl.get()" proba="0.15384615384615385"></transition><transition target="s5" action="org.apache.commons.lang3.concurrent.BackgroundInitializerTest$BackgroundInitializerTestImpl.start()" proba="0.07692307692307693"></transition><transition target="s6" action="org.apache.commons.lang3.concurrent.BackgroundInitializerTest$BackgroundInitializerTestImpl.getActiveExecutor()" proba="0.3076923076923077"></transition><transition target="s8" action="org.apache.commons.lang3.concurrent.BackgroundInitializerTest$BackgroundInitializerTestImpl.setExternalExecutor(java.util.concurrent.ExecutorService)" proba="0.07692307692307693"></transition><transition target="sX" action="epsilon" proba="0.23076923076923078"></transition><transition target="s2" action="org.apache.commons.lang3.concurrent.BackgroundInitializerTest$BackgroundInitializerTestImpl.isStarted()" proba="0.15384615384615385"></transition></state><state id="s6"><transition target="s7" action="org.apache.commons.lang3.concurrent.BackgroundInitializerTest$BackgroundInitializerTestImpl.isShutdown()" proba="0.2"></transition><transition target="sX" action="epsilon" proba="0.8"></transition></state><state id="s10"><transition target="s5" action="org.apache.commons.lang3.concurrent.BackgroundInitializerTest$BackgroundInitializerTestImpl.start()" proba="1.0"></transition></state><state id="s7"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="s3" action="org.apache.commons.lang3.concurrent.BackgroundInitializerTest$BackgroundInitializerTestImpl.get()" proba="0.5"></transition><transition target="s10" action="org.apache.commons.lang3.concurrent.BackgroundInitializerTest$BackgroundInitializerTestImpl.getExternalExecutor()" proba="0.5"></transition></state><state id="s9"><transition target="s5" action="org.apache.commons.lang3.concurrent.BackgroundInitializerTest$BackgroundInitializerTestImpl.start()" proba="1.0"></transition></state><state id="s0"><transition target="s3" action="org.apache.commons.lang3.concurrent.BackgroundInitializerTest$BackgroundInitializerTestImpl.get()" proba="0.11764705882352941"></transition><transition target="s9" action="org.apache.commons.lang3.concurrent.BackgroundInitializerTest$BackgroundInitializerTestImpl.&lt;init&gt;(java.util.concurrent.ExecutorService)" proba="0.11764705882352941"></transition><transition target="s1" action="org.apache.commons.lang3.concurrent.BackgroundInitializerTest$BackgroundInitializerTestImpl.&lt;init&gt;()" proba="0.7647058823529411"></transition></state><state id="s1"><transition target="s3" action="org.apache.commons.lang3.concurrent.BackgroundInitializerTest$BackgroundInitializerTestImpl.get()" proba="0.07692307692307693"></transition><transition target="s5" action="org.apache.commons.lang3.concurrent.BackgroundInitializerTest$BackgroundInitializerTestImpl.start()" proba="0.6923076923076923"></transition><transition target="s6" action="org.apache.commons.lang3.concurrent.BackgroundInitializerTest$BackgroundInitializerTestImpl.getActiveExecutor()" proba="0.07692307692307693"></transition><transition target="s8" action="org.apache.commons.lang3.concurrent.BackgroundInitializerTest$BackgroundInitializerTestImpl.setExternalExecutor(java.util.concurrent.ExecutorService)" proba="0.07692307692307693"></transition><transition target="s2" action="org.apache.commons.lang3.concurrent.BackgroundInitializerTest$BackgroundInitializerTestImpl.isStarted()" proba="0.07692307692307693"></transition></state><state id="s2"><transition target="sX" action="epsilon" proba="1.0"></transition></state></states></ts>