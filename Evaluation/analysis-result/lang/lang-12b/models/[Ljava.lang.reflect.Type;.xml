<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s4" action="[Ljava.lang.reflect.Type;.normalizeUpperBounds(java.lang.reflect.Type[])" proba="1.0"></transition></state><state id="s4"><transition target="s4" action="[Ljava.lang.reflect.Type;.normalizeUpperBounds(java.lang.reflect.Type[])" proba="0.25"></transition><transition target="s5" action="[Ljava.lang.reflect.Type;.fromString(java.lang.String)" proba="0.75"></transition></state><state id="s5"><transition target="s5" action="[Ljava.lang.reflect.Type;.fromString(java.lang.String)" proba="0.42857142857142855"></transition><transition target="s6" action="[Ljava.lang.reflect.Type;.notNull(T,java.lang.String,java.lang.Object[])" proba="0.14285714285714285"></transition><transition target="sX" action="epsilon" proba="0.2857142857142857"></transition><transition target="s1" action="[Ljava.lang.reflect.Type;.&lt;init&gt;()" proba="0.14285714285714285"></transition></state><state id="s6"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s0"><transition target="s5" action="[Ljava.lang.reflect.Type;.fromString(java.lang.String)" proba="0.3333333333333333"></transition><transition target="s1" action="[Ljava.lang.reflect.Type;.&lt;init&gt;()" proba="0.6666666666666666"></transition></state><state id="s1"><transition target="s2" action="[Ljava.lang.reflect.Type;.put(K,V)" proba="1.0"></transition></state><state id="s2"><transition target="s3" action="[Ljava.lang.reflect.Type;.typesSatisfyVariables(java.util.Map&lt;java.lang.reflect.TypeVariable&lt;?&gt;, java.lang.reflect.Type&gt;)" proba="1.0"></transition></state></states></ts>