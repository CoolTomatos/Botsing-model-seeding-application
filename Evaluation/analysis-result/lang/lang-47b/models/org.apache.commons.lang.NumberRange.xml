<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s4"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s5"><transition target="s5" action="org.apache.commons.lang.NumberRange.includesNumber(java.lang.Number)" proba="0.6666666666666666"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition></state><state id="s6"><transition target="s7" action="org.apache.commons.lang.NumberRange.getMinimum()" proba="1.0"></transition></state><state id="s10"><transition target="s10" action="org.apache.commons.lang.NumberRange.hashCode()" proba="0.25"></transition><transition target="sX" action="epsilon" proba="0.75"></transition></state><state id="s7"><transition target="s8" action="org.apache.commons.lang.NumberRange.getMaximum()" proba="0.6666666666666666"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="s7" action="org.apache.commons.lang.NumberRange.getMinimum()" proba="0.3333333333333333"></transition><transition target="sX" action="epsilon" proba="0.6666666666666666"></transition></state><state id="s9"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s0"><transition target="s3" action="org.apache.commons.lang.NumberRange.equals(java.lang.Object)" proba="0.014925373134328358"></transition><transition target="s6" action="org.apache.commons.lang.NumberRange.&lt;init&gt;(java.lang.Number)" proba="0.014925373134328358"></transition><transition target="s9" action="org.apache.commons.lang.NumberRange.overlaps(org.apache.commons.lang.NumberRange)" proba="0.014925373134328358"></transition><transition target="s1" action="org.apache.commons.lang.NumberRange.&lt;init&gt;(java.lang.Number,java.lang.Number)" proba="0.9402985074626866"></transition><transition target="s2" action="org.apache.commons.lang.NumberRange.includesRange(org.apache.commons.lang.NumberRange)" proba="0.014925373134328358"></transition></state><state id="s1"><transition target="s3" action="org.apache.commons.lang.NumberRange.equals(java.lang.Object)" proba="0.09523809523809523"></transition><transition target="s4" action="org.apache.commons.lang.NumberRange.toString()" proba="0.047619047619047616"></transition><transition target="s5" action="org.apache.commons.lang.NumberRange.includesNumber(java.lang.Number)" proba="0.031746031746031744"></transition><transition target="s10" action="org.apache.commons.lang.NumberRange.hashCode()" proba="0.047619047619047616"></transition><transition target="s7" action="org.apache.commons.lang.NumberRange.getMinimum()" proba="0.015873015873015872"></transition><transition target="sX" action="epsilon" proba="0.6031746031746031"></transition><transition target="s8" action="org.apache.commons.lang.NumberRange.getMaximum()" proba="0.015873015873015872"></transition><transition target="s9" action="org.apache.commons.lang.NumberRange.overlaps(org.apache.commons.lang.NumberRange)" proba="0.031746031746031744"></transition><transition target="s2" action="org.apache.commons.lang.NumberRange.includesRange(org.apache.commons.lang.NumberRange)" proba="0.1111111111111111"></transition></state><state id="s2"><transition target="sX" action="epsilon" proba="1.0"></transition></state></states></ts>