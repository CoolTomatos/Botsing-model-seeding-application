<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s4" action="java.math.BigInteger.divide(java.math.BigInteger)" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.5"></transition></state><state id="s4"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s5"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s6"><transition target="s3" action="java.math.BigInteger.intValue()" proba="1.0"></transition></state><state id="s7"><transition target="s8" action="java.math.BigInteger.subtract(java.math.BigInteger)" proba="1.0"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s0"><transition target="s6" action="java.math.BigInteger.bitLength()" proba="0.2"></transition><transition target="s7" action="java.math.BigInteger.add(java.math.BigInteger)" proba="0.2"></transition><transition target="s1" action="java.math.BigInteger.valueOf(long)" proba="0.4"></transition><transition target="s2" action="java.math.BigInteger.mod(java.math.BigInteger)" proba="0.2"></transition></state><state id="s1"><transition target="s5" action="java.math.BigInteger.signum()" proba="0.14285714285714285"></transition><transition target="sX" action="epsilon" proba="0.14285714285714285"></transition><transition target="s1" action="java.math.BigInteger.valueOf(long)" proba="0.7142857142857143"></transition></state><state id="s2"><transition target="s3" action="java.math.BigInteger.intValue()" proba="1.0"></transition></state></states></ts>