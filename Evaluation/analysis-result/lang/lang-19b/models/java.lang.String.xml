<?xml version="1.0"?><ts><start>s0</start><states><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s31"><transition target="s31" action="java.lang.String.contains(java.lang.CharSequence)" proba="0.6666666666666666"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition></state><state id="s30"><transition target="s3" action="java.lang.String.length()" proba="0.5"></transition><transition target="s31" action="java.lang.String.contains(java.lang.CharSequence)" proba="0.125"></transition><transition target="s30" action="java.lang.String.endsWith(java.lang.String)" proba="0.25"></transition><transition target="sX" action="epsilon" proba="0.125"></transition></state><state id="s11"><transition target="s3" action="java.lang.String.length()" proba="0.011363636363636364"></transition><transition target="s4" action="java.lang.String.substring(int,int)" proba="0.022727272727272728"></transition><transition target="s11" action="java.lang.String.indexOf(java.lang.String)" proba="0.5681818181818182"></transition><transition target="s7" action="java.lang.String.substring(int)" proba="0.011363636363636364"></transition><transition target="sX" action="epsilon" proba="0.36363636363636365"></transition><transition target="s15" action="java.lang.String.indexOf(java.lang.String,int)" proba="0.011363636363636364"></transition><transition target="s16" action="java.lang.String.lastIndexOf(java.lang.String)" proba="0.011363636363636364"></transition></state><state id="s33"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s10"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s32"><transition target="s3" action="java.lang.String.length()" proba="0.16666666666666666"></transition><transition target="s7" action="java.lang.String.substring(int)" proba="0.16666666666666666"></transition><transition target="sX" action="epsilon" proba="0.6666666666666666"></transition></state><state id="s13"><transition target="s3" action="java.lang.String.length()" proba="0.38095238095238093"></transition><transition target="s13" action="java.lang.String.equals(java.lang.Object)" proba="0.14285714285714285"></transition><transition target="sX" action="epsilon" proba="0.47619047619047616"></transition></state><state id="s35"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s12"><transition target="s12" action="java.lang.String.valueOf(char)" proba="0.2857142857142857"></transition><transition target="sX" action="epsilon" proba="0.7142857142857143"></transition></state><state id="s34"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s15"><transition target="s3" action="java.lang.String.length()" proba="0.2857142857142857"></transition><transition target="s4" action="java.lang.String.substring(int,int)" proba="0.2857142857142857"></transition><transition target="s7" action="java.lang.String.substring(int)" proba="0.2857142857142857"></transition><transition target="s15" action="java.lang.String.indexOf(java.lang.String,int)" proba="0.14285714285714285"></transition></state><state id="s37"><transition target="s4" action="java.lang.String.substring(int,int)" proba="1.0"></transition></state><state id="s14"><transition target="s3" action="java.lang.String.length()" proba="0.125"></transition><transition target="s4" action="java.lang.String.substring(int,int)" proba="0.25"></transition><transition target="sX" action="epsilon" proba="0.3125"></transition><transition target="s9" action="java.lang.String.toCharArray()" proba="0.125"></transition><transition target="s14" action="java.lang.String.indexOf(int)" proba="0.1875"></transition></state><state id="s36"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s17"><transition target="sX" action="epsilon" proba="0.75"></transition><transition target="s17" action="java.lang.String.getChars(int,int,char[],int)" proba="0.25"></transition></state><state id="s39"><transition target="s3" action="java.lang.String.length()" proba="1.0"></transition></state><state id="s16"><transition target="s3" action="java.lang.String.length()" proba="0.3333333333333333"></transition><transition target="s4" action="java.lang.String.substring(int,int)" proba="0.6666666666666666"></transition></state><state id="s38"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s19"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s18"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s0"><transition target="s30" action="java.lang.String.endsWith(java.lang.String)" proba="0.013114754098360656"></transition><transition target="s11" action="java.lang.String.indexOf(java.lang.String)" proba="0.12131147540983607"></transition><transition target="s33" action="java.lang.String.valueOf(boolean)" proba="0.003278688524590164"></transition><transition target="s10" action="java.lang.String.valueOf(int)" proba="0.022950819672131147"></transition><transition target="s32" action="java.lang.String.trim()" proba="0.006557377049180328"></transition><transition target="s13" action="java.lang.String.equals(java.lang.Object)" proba="0.029508196721311476"></transition><transition target="s35" action="java.lang.String.replaceAll(java.lang.String,java.lang.String)" proba="0.003278688524590164"></transition><transition target="s12" action="java.lang.String.valueOf(char)" proba="0.01639344262295082"></transition><transition target="s34" action="java.lang.String.toUpperCase()" proba="0.003278688524590164"></transition><transition target="s15" action="java.lang.String.indexOf(java.lang.String,int)" proba="0.003278688524590164"></transition><transition target="s14" action="java.lang.String.indexOf(int)" proba="0.019672131147540985"></transition><transition target="s36" action="java.lang.String.valueOf(double)" proba="0.009836065573770493"></transition><transition target="s17" action="java.lang.String.getChars(int,int,char[],int)" proba="0.003278688524590164"></transition><transition target="s39" action="java.lang.String.getBytes(java.lang.String)" proba="0.003278688524590164"></transition><transition target="s16" action="java.lang.String.lastIndexOf(java.lang.String)" proba="0.006557377049180328"></transition><transition target="s38" action="java.lang.String.toUpperCase(java.util.Locale)" proba="0.003278688524590164"></transition><transition target="s19" action="java.lang.String.&lt;init&gt;(char[])" proba="0.003278688524590164"></transition><transition target="s18" action="java.lang.String.hashCode()" proba="0.006557377049180328"></transition><transition target="s1" action="java.lang.String.format(java.lang.String,java.lang.Object[])" proba="0.10819672131147541"></transition><transition target="s2" action="java.lang.String.valueOf(long)" proba="0.009836065573770493"></transition><transition target="s3" action="java.lang.String.length()" proba="0.42950819672131146"></transition><transition target="s4" action="java.lang.String.substring(int,int)" proba="0.006557377049180328"></transition><transition target="s5" action="java.lang.String.&lt;init&gt;(java.lang.String)" proba="0.006557377049180328"></transition><transition target="s6" action="java.lang.String.charAt(int)" proba="0.01639344262295082"></transition><transition target="s7" action="java.lang.String.substring(int)" proba="0.01639344262295082"></transition><transition target="s9" action="java.lang.String.toCharArray()" proba="0.04590163934426229"></transition><transition target="s20" action="java.lang.String.startsWith(java.lang.String)" proba="0.036065573770491806"></transition><transition target="s22" action="java.lang.String.valueOf(float)" proba="0.009836065573770493"></transition><transition target="s21" action="java.lang.String.valueOf(java.lang.Object)" proba="0.009836065573770493"></transition><transition target="s24" action="java.lang.String.toLowerCase()" proba="0.003278688524590164"></transition><transition target="s23" action="java.lang.String.&lt;init&gt;(char[],int,int)" proba="0.003278688524590164"></transition><transition target="s26" action="java.lang.String.lastIndexOf(int)" proba="0.003278688524590164"></transition><transition target="s25" action="java.lang.String.replace(char,char)" proba="0.006557377049180328"></transition><transition target="s28" action="java.lang.String.toLowerCase(java.util.Locale)" proba="0.003278688524590164"></transition><transition target="s29" action="java.lang.String.&lt;init&gt;(byte[],java.lang.String)" proba="0.006557377049180328"></transition></state><state id="s1"><transition target="sX" action="epsilon" proba="0.8717948717948718"></transition><transition target="s1" action="java.lang.String.format(java.lang.String,java.lang.Object[])" proba="0.1282051282051282"></transition></state><state id="s2"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s3"><transition target="s3" action="java.lang.String.length()" proba="0.2146118721461187"></transition><transition target="s4" action="java.lang.String.substring(int,int)" proba="0.0958904109589041"></transition><transition target="s6" action="java.lang.String.charAt(int)" proba="0.2694063926940639"></transition><transition target="s7" action="java.lang.String.substring(int)" proba="0.0410958904109589"></transition><transition target="sX" action="epsilon" proba="0.273972602739726"></transition><transition target="s8" action="java.lang.String.concat(java.lang.String)" proba="0.0091324200913242"></transition><transition target="s9" action="java.lang.String.toCharArray()" proba="0.0228310502283105"></transition><transition target="s20" action="java.lang.String.startsWith(java.lang.String)" proba="0.0045662100456621"></transition><transition target="s11" action="java.lang.String.indexOf(java.lang.String)" proba="0.0045662100456621"></transition><transition target="s32" action="java.lang.String.trim()" proba="0.0045662100456621"></transition><transition target="s13" action="java.lang.String.equals(java.lang.Object)" proba="0.0136986301369863"></transition><transition target="s24" action="java.lang.String.toLowerCase()" proba="0.0045662100456621"></transition><transition target="s15" action="java.lang.String.indexOf(java.lang.String,int)" proba="0.0091324200913242"></transition><transition target="s14" action="java.lang.String.indexOf(int)" proba="0.0091324200913242"></transition><transition target="s17" action="java.lang.String.getChars(int,int,char[],int)" proba="0.0228310502283105"></transition></state><state id="s4"><transition target="s3" action="java.lang.String.length()" proba="0.1016949152542373"></transition><transition target="s4" action="java.lang.String.substring(int,int)" proba="0.0847457627118644"></transition><transition target="s6" action="java.lang.String.charAt(int)" proba="0.06779661016949153"></transition><transition target="s32" action="java.lang.String.trim()" proba="0.03389830508474576"></transition><transition target="s7" action="java.lang.String.substring(int)" proba="0.1864406779661017"></transition><transition target="sX" action="epsilon" proba="0.4406779661016949"></transition><transition target="s8" action="java.lang.String.concat(java.lang.String)" proba="0.01694915254237288"></transition><transition target="s26" action="java.lang.String.lastIndexOf(int)" proba="0.01694915254237288"></transition><transition target="s15" action="java.lang.String.indexOf(java.lang.String,int)" proba="0.01694915254237288"></transition><transition target="s9" action="java.lang.String.toCharArray()" proba="0.01694915254237288"></transition><transition target="s27" action="java.lang.String.indexOf(int,int)" proba="0.01694915254237288"></transition></state><state id="s5"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s6"><transition target="s3" action="java.lang.String.length()" proba="0.06666666666666667"></transition><transition target="s4" action="java.lang.String.substring(int,int)" proba="0.10833333333333334"></transition><transition target="s6" action="java.lang.String.charAt(int)" proba="0.4"></transition><transition target="s7" action="java.lang.String.substring(int)" proba="0.06666666666666667"></transition><transition target="s13" action="java.lang.String.equals(java.lang.Object)" proba="0.05"></transition><transition target="sX" action="epsilon" proba="0.25833333333333336"></transition><transition target="s8" action="java.lang.String.concat(java.lang.String)" proba="0.008333333333333333"></transition><transition target="s15" action="java.lang.String.indexOf(java.lang.String,int)" proba="0.008333333333333333"></transition><transition target="s37" action="java.lang.String.lastIndexOf(int,int)" proba="0.008333333333333333"></transition><transition target="s9" action="java.lang.String.toCharArray()" proba="0.008333333333333333"></transition><transition target="s14" action="java.lang.String.indexOf(int)" proba="0.016666666666666666"></transition></state><state id="s7"><transition target="s3" action="java.lang.String.length()" proba="0.047619047619047616"></transition><transition target="s20" action="java.lang.String.startsWith(java.lang.String)" proba="0.047619047619047616"></transition><transition target="s4" action="java.lang.String.substring(int,int)" proba="0.07142857142857142"></transition><transition target="s6" action="java.lang.String.charAt(int)" proba="0.07142857142857142"></transition><transition target="s32" action="java.lang.String.trim()" proba="0.023809523809523808"></transition><transition target="s7" action="java.lang.String.substring(int)" proba="0.047619047619047616"></transition><transition target="sX" action="epsilon" proba="0.6190476190476191"></transition><transition target="s26" action="java.lang.String.lastIndexOf(int)" proba="0.023809523809523808"></transition><transition target="s14" action="java.lang.String.indexOf(int)" proba="0.047619047619047616"></transition></state><state id="s8"><transition target="s4" action="java.lang.String.substring(int,int)" proba="0.16666666666666666"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition><transition target="s8" action="java.lang.String.concat(java.lang.String)" proba="0.3333333333333333"></transition><transition target="s9" action="java.lang.String.toCharArray()" proba="0.16666666666666666"></transition></state><state id="s9"><transition target="s3" action="java.lang.String.length()" proba="0.125"></transition><transition target="sX" action="epsilon" proba="0.8333333333333334"></transition><transition target="s14" action="java.lang.String.indexOf(int)" proba="0.041666666666666664"></transition></state><state id="s20"><transition target="s20" action="java.lang.String.startsWith(java.lang.String)" proba="0.4444444444444444"></transition><transition target="s3" action="java.lang.String.length()" proba="0.037037037037037035"></transition><transition target="s30" action="java.lang.String.endsWith(java.lang.String)" proba="0.07407407407407407"></transition><transition target="s6" action="java.lang.String.charAt(int)" proba="0.037037037037037035"></transition><transition target="s7" action="java.lang.String.substring(int)" proba="0.07407407407407407"></transition><transition target="sX" action="epsilon" proba="0.2962962962962963"></transition><transition target="s28" action="java.lang.String.toLowerCase(java.util.Locale)" proba="0.037037037037037035"></transition></state><state id="s22"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s21"><transition target="s21" action="java.lang.String.valueOf(java.lang.Object)" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition><transition target="s1" action="java.lang.String.format(java.lang.String,java.lang.Object[])" proba="0.16666666666666666"></transition></state><state id="s24"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s23"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s26"><transition target="s4" action="java.lang.String.substring(int,int)" proba="0.6666666666666666"></transition><transition target="s27" action="java.lang.String.indexOf(int,int)" proba="0.3333333333333333"></transition></state><state id="s25"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s28"><transition target="s20" action="java.lang.String.startsWith(java.lang.String)" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.5"></transition></state><state id="s27"><transition target="s4" action="java.lang.String.substring(int,int)" proba="0.5"></transition><transition target="s7" action="java.lang.String.substring(int)" proba="0.5"></transition></state><state id="s29"><transition target="s3" action="java.lang.String.length()" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.5"></transition></state></states></ts>