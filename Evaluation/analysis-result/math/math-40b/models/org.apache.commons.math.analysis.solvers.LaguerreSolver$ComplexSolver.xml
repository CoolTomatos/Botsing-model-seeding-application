<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s2" action="org.apache.commons.math.analysis.solvers.LaguerreSolver$ComplexSolver.isRoot(double,double,org.apache.commons.math.complex.Complex)" proba="1.0"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s0"><transition target="s1" action="org.apache.commons.math.analysis.solvers.LaguerreSolver$ComplexSolver.solve(org.apache.commons.math.complex.Complex[],org.apache.commons.math.complex.Complex)" proba="1.0"></transition></state><state id="s1"><transition target="s2" action="org.apache.commons.math.analysis.solvers.LaguerreSolver$ComplexSolver.isRoot(double,double,org.apache.commons.math.complex.Complex)" proba="1.0"></transition></state><state id="s2"><transition target="s3" action="org.apache.commons.math.analysis.solvers.LaguerreSolver$ComplexSolver.solveAll(org.apache.commons.math.complex.Complex[],org.apache.commons.math.complex.Complex)" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.5"></transition></state></states></ts>