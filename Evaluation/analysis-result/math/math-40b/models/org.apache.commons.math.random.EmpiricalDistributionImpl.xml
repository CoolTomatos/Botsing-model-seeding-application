<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s4" action="org.apache.commons.math.random.EmpiricalDistributionImpl.getGeneratorUpperBounds()" proba="1.0"></transition></state><state id="s4"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s5"><transition target="sX" action="epsilon" proba="0.75"></transition><transition target="s17" action="org.apache.commons.math.random.EmpiricalDistributionImpl.&lt;init&gt;(int,org.apache.commons.math.random.RandomGenerator)" proba="0.125"></transition><transition target="s18" action="org.apache.commons.math.random.EmpiricalDistributionImpl.reSeed(long)" proba="0.125"></transition></state><state id="s6"><transition target="s7" action="org.apache.commons.math.random.EmpiricalDistributionImpl.getSampleStats()" proba="0.3333333333333333"></transition><transition target="s18" action="org.apache.commons.math.random.EmpiricalDistributionImpl.reSeed(long)" proba="0.6666666666666666"></transition></state><state id="s7"><transition target="s10" action="org.apache.commons.math.random.EmpiricalDistributionImpl.getStandardDeviation()" proba="0.3333333333333333"></transition><transition target="s8" action="org.apache.commons.math.random.EmpiricalDistributionImpl.getN()" proba="0.3333333333333333"></transition><transition target="s9" action="org.apache.commons.math.random.EmpiricalDistributionImpl.getMean()" proba="0.3333333333333333"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="s7" action="org.apache.commons.math.random.EmpiricalDistributionImpl.getSampleStats()" proba="1.0"></transition></state><state id="s9"><transition target="s7" action="org.apache.commons.math.random.EmpiricalDistributionImpl.getSampleStats()" proba="1.0"></transition></state><state id="s11"><transition target="s12" action="org.apache.commons.math.random.EmpiricalDistributionImpl.access$100(org.apache.commons.math.random.EmpiricalDistributionImpl,double)" proba="1.0"></transition></state><state id="s10"><transition target="s4" action="org.apache.commons.math.random.EmpiricalDistributionImpl.getGeneratorUpperBounds()" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.5"></transition></state><state id="s13"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s12"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s15"><transition target="s16" action="org.apache.commons.math.random.EmpiricalDistributionImpl.addValue(double)" proba="1.0"></transition></state><state id="s14"><transition target="s15" action="org.apache.commons.math.random.EmpiricalDistributionImpl.access$300(org.apache.commons.math.random.EmpiricalDistributionImpl)" proba="1.0"></transition></state><state id="s17"><transition target="s2" action="org.apache.commons.math.random.EmpiricalDistributionImpl.load(double[])" proba="1.0"></transition></state><state id="s16"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s18"><transition target="s5" action="org.apache.commons.math.random.EmpiricalDistributionImpl.getNextValue()" proba="1.0"></transition></state><state id="s0"><transition target="s5" action="org.apache.commons.math.random.EmpiricalDistributionImpl.getNextValue()" proba="0.13333333333333333"></transition><transition target="s11" action="org.apache.commons.math.random.EmpiricalDistributionImpl.access$200(org.apache.commons.math.random.EmpiricalDistributionImpl)" proba="0.13333333333333333"></transition><transition target="s6" action="org.apache.commons.math.random.EmpiricalDistributionImpl.load(java.net.URL)" proba="0.2"></transition><transition target="s13" action="org.apache.commons.math.random.EmpiricalDistributionImpl.&lt;init&gt;()" proba="0.06666666666666667"></transition><transition target="s14" action="org.apache.commons.math.random.EmpiricalDistributionImpl.access$302(org.apache.commons.math.random.EmpiricalDistributionImpl,org.apache.commons.math.stat.descriptive.SummaryStatistics)" proba="0.13333333333333333"></transition><transition target="s17" action="org.apache.commons.math.random.EmpiricalDistributionImpl.&lt;init&gt;(int,org.apache.commons.math.random.RandomGenerator)" proba="0.06666666666666667"></transition><transition target="s1" action="org.apache.commons.math.random.EmpiricalDistributionImpl.&lt;init&gt;(int)" proba="0.06666666666666667"></transition><transition target="s2" action="org.apache.commons.math.random.EmpiricalDistributionImpl.load(double[])" proba="0.2"></transition></state><state id="s1"><transition target="s2" action="org.apache.commons.math.random.EmpiricalDistributionImpl.load(double[])" proba="1.0"></transition></state><state id="s2"><transition target="s3" action="org.apache.commons.math.random.EmpiricalDistributionImpl.getUpperBounds()" proba="0.16666666666666666"></transition><transition target="s5" action="org.apache.commons.math.random.EmpiricalDistributionImpl.getNextValue()" proba="0.3333333333333333"></transition><transition target="s7" action="org.apache.commons.math.random.EmpiricalDistributionImpl.getSampleStats()" proba="0.16666666666666666"></transition><transition target="sX" action="epsilon" proba="0.16666666666666666"></transition><transition target="s18" action="org.apache.commons.math.random.EmpiricalDistributionImpl.reSeed(long)" proba="0.16666666666666666"></transition></state></states></ts>