<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s4" action="org.apache.commons.math.geometry.partitioning.BSPTree.getMinus()" proba="0.25"></transition><transition target="s5" action="org.apache.commons.math.geometry.partitioning.BSPTree.getPlus()" proba="0.5"></transition><transition target="s1" action="org.apache.commons.math.geometry.partitioning.BSPTree.getCut()" proba="0.125"></transition><transition target="s2" action="org.apache.commons.math.geometry.partitioning.BSPTree.getAttribute()" proba="0.125"></transition></state><state id="s4"><transition target="s4" action="org.apache.commons.math.geometry.partitioning.BSPTree.getMinus()" proba="0.12121212121212122"></transition><transition target="s5" action="org.apache.commons.math.geometry.partitioning.BSPTree.getPlus()" proba="0.30303030303030304"></transition><transition target="sX" action="epsilon" proba="0.30303030303030304"></transition><transition target="s9" action="org.apache.commons.math.geometry.partitioning.BSPTree.setAttribute(java.lang.Object)" proba="0.09090909090909091"></transition><transition target="s1" action="org.apache.commons.math.geometry.partitioning.BSPTree.getCut()" proba="0.09090909090909091"></transition><transition target="s2" action="org.apache.commons.math.geometry.partitioning.BSPTree.getAttribute()" proba="0.09090909090909091"></transition></state><state id="s5"><transition target="s4" action="org.apache.commons.math.geometry.partitioning.BSPTree.getMinus()" proba="0.48484848484848486"></transition><transition target="s5" action="org.apache.commons.math.geometry.partitioning.BSPTree.getPlus()" proba="0.12121212121212122"></transition><transition target="sX" action="epsilon" proba="0.09090909090909091"></transition><transition target="s9" action="org.apache.commons.math.geometry.partitioning.BSPTree.setAttribute(java.lang.Object)" proba="0.09090909090909091"></transition><transition target="s1" action="org.apache.commons.math.geometry.partitioning.BSPTree.getCut()" proba="0.12121212121212122"></transition><transition target="s2" action="org.apache.commons.math.geometry.partitioning.BSPTree.getAttribute()" proba="0.09090909090909091"></transition></state><state id="s6"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s7"><transition target="s5" action="org.apache.commons.math.geometry.partitioning.BSPTree.getPlus()" proba="0.3333333333333333"></transition><transition target="s9" action="org.apache.commons.math.geometry.partitioning.BSPTree.setAttribute(java.lang.Object)" proba="0.6666666666666666"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="s5" action="org.apache.commons.math.geometry.partitioning.BSPTree.getPlus()" proba="1.0"></transition></state><state id="s9"><transition target="s4" action="org.apache.commons.math.geometry.partitioning.BSPTree.getMinus()" proba="0.18181818181818182"></transition><transition target="s5" action="org.apache.commons.math.geometry.partitioning.BSPTree.getPlus()" proba="0.2727272727272727"></transition><transition target="s7" action="org.apache.commons.math.geometry.partitioning.BSPTree.insertCut(org.apache.commons.math.geometry.partitioning.Hyperplane)" proba="0.18181818181818182"></transition><transition target="sX" action="epsilon" proba="0.36363636363636365"></transition></state><state id="s11"><transition target="s11" action="org.apache.commons.math.geometry.partitioning.BSPTree.insertInTree(org.apache.commons.math.geometry.partitioning.BSPTree,boolean)" proba="0.14285714285714285"></transition><transition target="sX" action="epsilon" proba="0.8571428571428571"></transition></state><state id="s10"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s13"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s12"><transition target="s4" action="org.apache.commons.math.geometry.partitioning.BSPTree.getMinus()" proba="0.3333333333333333"></transition><transition target="s5" action="org.apache.commons.math.geometry.partitioning.BSPTree.getPlus()" proba="0.3333333333333333"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition></state><state id="s14"><transition target="s6" action="org.apache.commons.math.geometry.partitioning.BSPTree.&lt;init&gt;(org.apache.commons.math.geometry.partitioning.SubHyperplane,org.apache.commons.math.geometry.partitioning.BSPTree,org.apache.commons.math.geometry.partitioning.BSPTree,java.lang.Object)" proba="1.0"></transition></state><state id="s0"><transition target="s5" action="org.apache.commons.math.geometry.partitioning.BSPTree.getPlus()" proba="0.03125"></transition><transition target="s11" action="org.apache.commons.math.geometry.partitioning.BSPTree.insertInTree(org.apache.commons.math.geometry.partitioning.BSPTree,boolean)" proba="0.0625"></transition><transition target="s6" action="org.apache.commons.math.geometry.partitioning.BSPTree.&lt;init&gt;(org.apache.commons.math.geometry.partitioning.SubHyperplane,org.apache.commons.math.geometry.partitioning.BSPTree,org.apache.commons.math.geometry.partitioning.BSPTree,java.lang.Object)" proba="0.328125"></transition><transition target="s10" action="org.apache.commons.math.geometry.partitioning.BSPTree.visit(org.apache.commons.math.geometry.partitioning.BSPTreeVisitor)" proba="0.078125"></transition><transition target="s7" action="org.apache.commons.math.geometry.partitioning.BSPTree.insertCut(org.apache.commons.math.geometry.partitioning.Hyperplane)" proba="0.015625"></transition><transition target="s13" action="org.apache.commons.math.geometry.partitioning.BSPTree.getCell(org.apache.commons.math.geometry.Vector)" proba="0.015625"></transition><transition target="s8" action="org.apache.commons.math.geometry.partitioning.BSPTree.getParent()" proba="0.015625"></transition><transition target="s12" action="org.apache.commons.math.geometry.partitioning.BSPTree.copySelf()" proba="0.015625"></transition><transition target="s9" action="org.apache.commons.math.geometry.partitioning.BSPTree.setAttribute(java.lang.Object)" proba="0.046875"></transition><transition target="s14" action="org.apache.commons.math.geometry.partitioning.BSPTree.&lt;init&gt;(java.lang.Object)" proba="0.015625"></transition><transition target="s1" action="org.apache.commons.math.geometry.partitioning.BSPTree.getCut()" proba="0.234375"></transition><transition target="s2" action="org.apache.commons.math.geometry.partitioning.BSPTree.getAttribute()" proba="0.140625"></transition></state><state id="s1"><transition target="s3" action="org.apache.commons.math.geometry.partitioning.BSPTree.getHyperplane()" proba="0.25"></transition><transition target="s4" action="org.apache.commons.math.geometry.partitioning.BSPTree.getMinus()" proba="0.125"></transition><transition target="s5" action="org.apache.commons.math.geometry.partitioning.BSPTree.getPlus()" proba="0.15625"></transition><transition target="s12" action="org.apache.commons.math.geometry.partitioning.BSPTree.copySelf()" proba="0.0625"></transition><transition target="s1" action="org.apache.commons.math.geometry.partitioning.BSPTree.getCut()" proba="0.0625"></transition><transition target="s2" action="org.apache.commons.math.geometry.partitioning.BSPTree.getAttribute()" proba="0.34375"></transition></state><state id="s2"><transition target="s4" action="org.apache.commons.math.geometry.partitioning.BSPTree.getMinus()" proba="0.13793103448275862"></transition><transition target="s5" action="org.apache.commons.math.geometry.partitioning.BSPTree.getPlus()" proba="0.06896551724137931"></transition><transition target="s11" action="org.apache.commons.math.geometry.partitioning.BSPTree.insertInTree(org.apache.commons.math.geometry.partitioning.BSPTree,boolean)" proba="0.06896551724137931"></transition><transition target="sX" action="epsilon" proba="0.41379310344827586"></transition><transition target="s1" action="org.apache.commons.math.geometry.partitioning.BSPTree.getCut()" proba="0.2413793103448276"></transition><transition target="s2" action="org.apache.commons.math.geometry.partitioning.BSPTree.getAttribute()" proba="0.06896551724137931"></transition></state></states></ts>