<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="org.apache.commons.math.distribution.NormalDistributionImpl.cumulativeProbability(double,double)" proba="0.375"></transition><transition target="s4" action="org.apache.commons.math.distribution.NormalDistributionImpl.cumulativeProbability(double)" proba="0.5"></transition><transition target="s2" action="org.apache.commons.math.distribution.NormalDistributionImpl.inverseCumulativeProbability(double)" proba="0.125"></transition></state><state id="s4"><transition target="s3" action="org.apache.commons.math.distribution.NormalDistributionImpl.cumulativeProbability(double,double)" proba="0.061224489795918366"></transition><transition target="s4" action="org.apache.commons.math.distribution.NormalDistributionImpl.cumulativeProbability(double)" proba="0.8163265306122449"></transition><transition target="s5" action="org.apache.commons.math.distribution.NormalDistributionImpl.setStandardDeviation(double)" proba="0.02040816326530612"></transition><transition target="sX" action="epsilon" proba="0.10204081632653061"></transition></state><state id="s5"><transition target="s6" action="org.apache.commons.math.distribution.NormalDistributionImpl.getStandardDeviation()" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.5"></transition></state><state id="s6"><transition target="s4" action="org.apache.commons.math.distribution.NormalDistributionImpl.cumulativeProbability(double)" proba="0.6666666666666666"></transition><transition target="s7" action="org.apache.commons.math.distribution.NormalDistributionImpl.getMean()" proba="0.16666666666666666"></transition><transition target="sX" action="epsilon" proba="0.16666666666666666"></transition></state><state id="s7"><transition target="s6" action="org.apache.commons.math.distribution.NormalDistributionImpl.getStandardDeviation()" proba="0.8"></transition><transition target="sX" action="epsilon" proba="0.2"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="s7" action="org.apache.commons.math.distribution.NormalDistributionImpl.getMean()" proba="1.0"></transition></state><state id="s0"><transition target="s1" action="org.apache.commons.math.distribution.NormalDistributionImpl.&lt;init&gt;(double,double)" proba="1.0"></transition></state><state id="s1"><transition target="s3" action="org.apache.commons.math.distribution.NormalDistributionImpl.cumulativeProbability(double,double)" proba="0.18181818181818182"></transition><transition target="s4" action="org.apache.commons.math.distribution.NormalDistributionImpl.cumulativeProbability(double)" proba="0.09090909090909091"></transition><transition target="s5" action="org.apache.commons.math.distribution.NormalDistributionImpl.setStandardDeviation(double)" proba="0.09090909090909091"></transition><transition target="s6" action="org.apache.commons.math.distribution.NormalDistributionImpl.getStandardDeviation()" proba="0.09090909090909091"></transition><transition target="s7" action="org.apache.commons.math.distribution.NormalDistributionImpl.getMean()" proba="0.2727272727272727"></transition><transition target="s8" action="org.apache.commons.math.distribution.NormalDistributionImpl.setMean(double)" proba="0.09090909090909091"></transition><transition target="s2" action="org.apache.commons.math.distribution.NormalDistributionImpl.inverseCumulativeProbability(double)" proba="0.18181818181818182"></transition></state><state id="s2"><transition target="sX" action="epsilon" proba="0.21428571428571427"></transition><transition target="s2" action="org.apache.commons.math.distribution.NormalDistributionImpl.inverseCumulativeProbability(double)" proba="0.7857142857142857"></transition></state></states></ts>