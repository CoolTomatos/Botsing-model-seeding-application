<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s4"><transition target="s5" action="org.apache.commons.math.linear.RealMatrix.getRowDimension()" proba="0.36363636363636365"></transition><transition target="s6" action="org.apache.commons.math.linear.RealMatrix.getEntry(int,int)" proba="0.36363636363636365"></transition><transition target="s8" action="org.apache.commons.math.linear.RealMatrix.inverse()" proba="0.09090909090909091"></transition><transition target="sX" action="epsilon" proba="0.09090909090909091"></transition><transition target="s9" action="org.apache.commons.math.linear.RealMatrix.getData()" proba="0.09090909090909091"></transition></state><state id="s5"><transition target="s4" action="org.apache.commons.math.linear.RealMatrix.getColumnDimension()" proba="0.34782608695652173"></transition><transition target="s5" action="org.apache.commons.math.linear.RealMatrix.getRowDimension()" proba="0.08695652173913043"></transition><transition target="s6" action="org.apache.commons.math.linear.RealMatrix.getEntry(int,int)" proba="0.391304347826087"></transition><transition target="sX" action="epsilon" proba="0.13043478260869565"></transition><transition target="s9" action="org.apache.commons.math.linear.RealMatrix.getData()" proba="0.043478260869565216"></transition></state><state id="s6"><transition target="s5" action="org.apache.commons.math.linear.RealMatrix.getRowDimension()" proba="0.07692307692307693"></transition><transition target="s6" action="org.apache.commons.math.linear.RealMatrix.getEntry(int,int)" proba="0.2692307692307692"></transition><transition target="sX" action="epsilon" proba="0.6538461538461539"></transition></state><state id="s10"><transition target="s5" action="org.apache.commons.math.linear.RealMatrix.getRowDimension()" proba="1.0"></transition></state><state id="s7"><transition target="s1" action="org.apache.commons.math.linear.RealMatrix.multiply(org.apache.commons.math.linear.RealMatrix)" proba="1.0"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s9"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s0"><transition target="s3" action="org.apache.commons.math.linear.RealMatrix.getNorm()" proba="0.034482758620689655"></transition><transition target="s4" action="org.apache.commons.math.linear.RealMatrix.getColumnDimension()" proba="0.10344827586206896"></transition><transition target="s5" action="org.apache.commons.math.linear.RealMatrix.getRowDimension()" proba="0.4482758620689655"></transition><transition target="s6" action="org.apache.commons.math.linear.RealMatrix.getEntry(int,int)" proba="0.20689655172413793"></transition><transition target="s10" action="org.apache.commons.math.linear.RealMatrix.isSquare()" proba="0.06896551724137931"></transition><transition target="s7" action="org.apache.commons.math.linear.RealMatrix.transpose()" proba="0.034482758620689655"></transition><transition target="s1" action="org.apache.commons.math.linear.RealMatrix.multiply(org.apache.commons.math.linear.RealMatrix)" proba="0.06896551724137931"></transition><transition target="s2" action="org.apache.commons.math.linear.RealMatrix.subtract(org.apache.commons.math.linear.RealMatrix)" proba="0.034482758620689655"></transition></state><state id="s1"><transition target="sX" action="epsilon" proba="0.6666666666666666"></transition><transition target="s2" action="org.apache.commons.math.linear.RealMatrix.subtract(org.apache.commons.math.linear.RealMatrix)" proba="0.3333333333333333"></transition></state><state id="s2"><transition target="s3" action="org.apache.commons.math.linear.RealMatrix.getNorm()" proba="1.0"></transition></state></states></ts>