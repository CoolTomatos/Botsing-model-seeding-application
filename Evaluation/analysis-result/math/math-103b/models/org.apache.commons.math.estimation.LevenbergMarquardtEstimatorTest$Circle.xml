<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s4" action="org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest$Circle.access$100(org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest$Circle)" proba="0.25"></transition><transition target="sX" action="epsilon" proba="0.75"></transition></state><state id="s4"><transition target="s3" action="org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest$Circle.getEstimate()" proba="0.6666666666666666"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition></state><state id="s5"><transition target="s6" action="org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest$Circle.addPoint(double,double)" proba="1.0"></transition></state><state id="s6"><transition target="s11" action="org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest$Circle.getM()" proba="0.16666666666666666"></transition><transition target="s6" action="org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest$Circle.addPoint(double,double)" proba="0.6666666666666666"></transition><transition target="s1" action="org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest$Circle.getRadius()" proba="0.16666666666666666"></transition></state><state id="s7"><transition target="s8" action="org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest$Circle.getY()" proba="1.0"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s9"><transition target="s10" action="org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest$Circle.getPartialRadiusY()" proba="1.0"></transition></state><state id="s11"><transition target="s1" action="org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest$Circle.getRadius()" proba="1.0"></transition></state><state id="s10"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s0"><transition target="s4" action="org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest$Circle.access$100(org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest$Circle)" proba="0.125"></transition><transition target="s5" action="org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest$Circle.&lt;init&gt;(double,double)" proba="0.25"></transition><transition target="s9" action="org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest$Circle.getPartialRadiusX()" proba="0.125"></transition><transition target="s1" action="org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest$Circle.getRadius()" proba="0.125"></transition><transition target="s2" action="org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest$Circle.access$000(org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest$Circle)" proba="0.375"></transition></state><state id="s1"><transition target="s7" action="org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest$Circle.getX()" proba="0.6666666666666666"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition></state><state id="s2"><transition target="s3" action="org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest$Circle.getEstimate()" proba="0.6666666666666666"></transition><transition target="s4" action="org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest$Circle.access$100(org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest$Circle)" proba="0.3333333333333333"></transition></state></states></ts>