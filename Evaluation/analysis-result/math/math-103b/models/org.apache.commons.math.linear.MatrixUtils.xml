<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s4" action="org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(java.lang.String[])" proba="1.0"></transition></state><state id="s4"><transition target="s2" action="org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(double[])" proba="1.0"></transition></state><state id="s5"><transition target="s5" action="org.apache.commons.math.linear.MatrixUtils.createBigIdentityMatrix(int)" proba="0.4"></transition><transition target="s6" action="org.apache.commons.math.linear.MatrixUtils.createRealIdentityMatrix(int)" proba="0.2"></transition><transition target="sX" action="epsilon" proba="0.4"></transition></state><state id="s6"><transition target="s6" action="org.apache.commons.math.linear.MatrixUtils.createRealIdentityMatrix(int)" proba="0.5454545454545454"></transition><transition target="sX" action="epsilon" proba="0.45454545454545453"></transition></state><state id="s7"><transition target="s7" action="org.apache.commons.math.linear.MatrixUtils.createColumnBigMatrix(double[])" proba="0.3333333333333333"></transition><transition target="s8" action="org.apache.commons.math.linear.MatrixUtils.createColumnBigMatrix(java.math.BigDecimal[])" proba="0.3333333333333333"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="s9" action="org.apache.commons.math.linear.MatrixUtils.createColumnBigMatrix(java.lang.String[])" proba="1.0"></transition></state><state id="s9"><transition target="s7" action="org.apache.commons.math.linear.MatrixUtils.createColumnBigMatrix(double[])" proba="1.0"></transition></state><state id="s11"><transition target="s11" action="org.apache.commons.math.linear.MatrixUtils.createColumnRealMatrix(double[])" proba="0.6666666666666666"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition></state><state id="s10"><transition target="s10" action="org.apache.commons.math.linear.MatrixUtils.createRealMatrix(double[][])" proba="0.7777777777777778"></transition><transition target="sX" action="epsilon" proba="0.2222222222222222"></transition></state><state id="s13"><transition target="sX" action="epsilon" proba="0.5"></transition><transition target="s14" action="org.apache.commons.math.linear.MatrixUtils.createBigMatrix(java.lang.String[][])" proba="0.5"></transition></state><state id="s12"><transition target="s13" action="org.apache.commons.math.linear.MatrixUtils.createBigMatrix(java.math.BigDecimal[][])" proba="0.2"></transition><transition target="s12" action="org.apache.commons.math.linear.MatrixUtils.createBigMatrix(double[][])" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.1"></transition><transition target="s15" action="org.apache.commons.math.linear.MatrixUtils.getData()" proba="0.2"></transition></state><state id="s15"><transition target="s12" action="org.apache.commons.math.linear.MatrixUtils.createBigMatrix(double[][])" proba="1.0"></transition></state><state id="s14"><transition target="s12" action="org.apache.commons.math.linear.MatrixUtils.createBigMatrix(double[][])" proba="1.0"></transition></state><state id="s0"><transition target="s5" action="org.apache.commons.math.linear.MatrixUtils.createBigIdentityMatrix(int)" proba="0.2"></transition><transition target="s11" action="org.apache.commons.math.linear.MatrixUtils.createColumnRealMatrix(double[])" proba="0.06666666666666667"></transition><transition target="s6" action="org.apache.commons.math.linear.MatrixUtils.createRealIdentityMatrix(int)" proba="0.26666666666666666"></transition><transition target="s10" action="org.apache.commons.math.linear.MatrixUtils.createRealMatrix(double[][])" proba="0.13333333333333333"></transition><transition target="s7" action="org.apache.commons.math.linear.MatrixUtils.createColumnBigMatrix(double[])" proba="0.06666666666666667"></transition><transition target="s12" action="org.apache.commons.math.linear.MatrixUtils.createBigMatrix(double[][])" proba="0.13333333333333333"></transition><transition target="s1" action="org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(double[])" proba="0.06666666666666667"></transition><transition target="s2" action="org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(double[])" proba="0.06666666666666667"></transition></state><state id="s1"><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition><transition target="s1" action="org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(double[])" proba="0.6666666666666666"></transition></state><state id="s2"><transition target="s3" action="org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(java.math.BigDecimal[])" proba="0.3333333333333333"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition><transition target="s2" action="org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(double[])" proba="0.3333333333333333"></transition></state></states></ts>