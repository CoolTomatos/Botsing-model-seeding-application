<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="org.apache.commons.math.complex.Complex.&lt;init&gt;(double,double)" proba="0.008"></transition><transition target="s4" action="org.apache.commons.math.complex.Complex.hashCode()" proba="0.04"></transition><transition target="s5" action="org.apache.commons.math.complex.Complex.add(org.apache.commons.math.complex.Complex)" proba="0.032"></transition><transition target="s6" action="org.apache.commons.math.complex.Complex.isNaN()" proba="0.024"></transition><transition target="s7" action="org.apache.commons.math.complex.Complex.divide(org.apache.commons.math.complex.Complex)" proba="0.048"></transition><transition target="sX" action="epsilon" proba="0.608"></transition><transition target="s8" action="org.apache.commons.math.complex.Complex.conjugate()" proba="0.024"></transition><transition target="s9" action="org.apache.commons.math.complex.Complex.equals(java.lang.Object)" proba="0.064"></transition><transition target="s11" action="org.apache.commons.math.complex.Complex.subtract(org.apache.commons.math.complex.Complex)" proba="0.016"></transition><transition target="s10" action="org.apache.commons.math.complex.Complex.negate()" proba="0.008"></transition><transition target="s13" action="org.apache.commons.math.complex.Complex.abs()" proba="0.08"></transition><transition target="s12" action="org.apache.commons.math.complex.Complex.multiply(org.apache.commons.math.complex.Complex)" proba="0.04"></transition><transition target="s1" action="org.apache.commons.math.complex.Complex.getReal()" proba="0.008"></transition></state><state id="s4"><transition target="s3" action="org.apache.commons.math.complex.Complex.&lt;init&gt;(double,double)" proba="0.125"></transition><transition target="s4" action="org.apache.commons.math.complex.Complex.hashCode()" proba="0.25"></transition><transition target="sX" action="epsilon" proba="0.625"></transition></state><state id="s5"><transition target="s3" action="org.apache.commons.math.complex.Complex.&lt;init&gt;(double,double)" proba="0.05"></transition><transition target="s11" action="org.apache.commons.math.complex.Complex.subtract(org.apache.commons.math.complex.Complex)" proba="0.4"></transition><transition target="s5" action="org.apache.commons.math.complex.Complex.add(org.apache.commons.math.complex.Complex)" proba="0.1"></transition><transition target="s13" action="org.apache.commons.math.complex.Complex.abs()" proba="0.05"></transition><transition target="s7" action="org.apache.commons.math.complex.Complex.divide(org.apache.commons.math.complex.Complex)" proba="0.05"></transition><transition target="sX" action="epsilon" proba="0.35"></transition></state><state id="s6"><transition target="s3" action="org.apache.commons.math.complex.Complex.&lt;init&gt;(double,double)" proba="0.14285714285714285"></transition><transition target="s5" action="org.apache.commons.math.complex.Complex.add(org.apache.commons.math.complex.Complex)" proba="0.047619047619047616"></transition><transition target="s13" action="org.apache.commons.math.complex.Complex.abs()" proba="0.047619047619047616"></transition><transition target="sX" action="epsilon" proba="0.38095238095238093"></transition><transition target="s1" action="org.apache.commons.math.complex.Complex.getReal()" proba="0.3333333333333333"></transition><transition target="s2" action="org.apache.commons.math.complex.Complex.getImaginary()" proba="0.047619047619047616"></transition></state><state id="s7"><transition target="s3" action="org.apache.commons.math.complex.Complex.&lt;init&gt;(double,double)" proba="0.15384615384615385"></transition><transition target="sX" action="epsilon" proba="0.7692307692307693"></transition><transition target="s9" action="org.apache.commons.math.complex.Complex.equals(java.lang.Object)" proba="0.07692307692307693"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="s3" action="org.apache.commons.math.complex.Complex.&lt;init&gt;(double,double)" proba="0.14285714285714285"></transition><transition target="s5" action="org.apache.commons.math.complex.Complex.add(org.apache.commons.math.complex.Complex)" proba="0.14285714285714285"></transition><transition target="sX" action="epsilon" proba="0.5714285714285714"></transition><transition target="s1" action="org.apache.commons.math.complex.Complex.getReal()" proba="0.14285714285714285"></transition></state><state id="s9"><transition target="sX" action="epsilon" proba="0.9090909090909091"></transition><transition target="s9" action="org.apache.commons.math.complex.Complex.equals(java.lang.Object)" proba="0.09090909090909091"></transition></state><state id="s11"><transition target="s11" action="org.apache.commons.math.complex.Complex.subtract(org.apache.commons.math.complex.Complex)" proba="0.058823529411764705"></transition><transition target="s5" action="org.apache.commons.math.complex.Complex.add(org.apache.commons.math.complex.Complex)" proba="0.058823529411764705"></transition><transition target="s7" action="org.apache.commons.math.complex.Complex.divide(org.apache.commons.math.complex.Complex)" proba="0.058823529411764705"></transition><transition target="s13" action="org.apache.commons.math.complex.Complex.abs()" proba="0.058823529411764705"></transition><transition target="sX" action="epsilon" proba="0.6470588235294118"></transition><transition target="s12" action="org.apache.commons.math.complex.Complex.multiply(org.apache.commons.math.complex.Complex)" proba="0.11764705882352941"></transition></state><state id="s10"><transition target="sX" action="epsilon" proba="0.6666666666666666"></transition><transition target="s12" action="org.apache.commons.math.complex.Complex.multiply(org.apache.commons.math.complex.Complex)" proba="0.3333333333333333"></transition></state><state id="s13"><transition target="s3" action="org.apache.commons.math.complex.Complex.&lt;init&gt;(double,double)" proba="0.3"></transition><transition target="s11" action="org.apache.commons.math.complex.Complex.subtract(org.apache.commons.math.complex.Complex)" proba="0.05"></transition><transition target="s5" action="org.apache.commons.math.complex.Complex.add(org.apache.commons.math.complex.Complex)" proba="0.05"></transition><transition target="sX" action="epsilon" proba="0.5"></transition><transition target="s1" action="org.apache.commons.math.complex.Complex.getReal()" proba="0.05"></transition><transition target="s2" action="org.apache.commons.math.complex.Complex.getImaginary()" proba="0.05"></transition></state><state id="s12"><transition target="s11" action="org.apache.commons.math.complex.Complex.subtract(org.apache.commons.math.complex.Complex)" proba="0.08"></transition><transition target="s5" action="org.apache.commons.math.complex.Complex.add(org.apache.commons.math.complex.Complex)" proba="0.04"></transition><transition target="s7" action="org.apache.commons.math.complex.Complex.divide(org.apache.commons.math.complex.Complex)" proba="0.08"></transition><transition target="s13" action="org.apache.commons.math.complex.Complex.abs()" proba="0.04"></transition><transition target="sX" action="epsilon" proba="0.64"></transition><transition target="s12" action="org.apache.commons.math.complex.Complex.multiply(org.apache.commons.math.complex.Complex)" proba="0.12"></transition></state><state id="s0"><transition target="s3" action="org.apache.commons.math.complex.Complex.&lt;init&gt;(double,double)" proba="0.5759162303664922"></transition><transition target="s4" action="org.apache.commons.math.complex.Complex.hashCode()" proba="0.005235602094240838"></transition><transition target="s5" action="org.apache.commons.math.complex.Complex.add(org.apache.commons.math.complex.Complex)" proba="0.04712041884816754"></transition><transition target="s11" action="org.apache.commons.math.complex.Complex.subtract(org.apache.commons.math.complex.Complex)" proba="0.015706806282722512"></transition><transition target="s6" action="org.apache.commons.math.complex.Complex.isNaN()" proba="0.09424083769633508"></transition><transition target="s10" action="org.apache.commons.math.complex.Complex.negate()" proba="0.02617801047120419"></transition><transition target="s7" action="org.apache.commons.math.complex.Complex.divide(org.apache.commons.math.complex.Complex)" proba="0.015706806282722512"></transition><transition target="s13" action="org.apache.commons.math.complex.Complex.abs()" proba="0.020942408376963352"></transition><transition target="s8" action="org.apache.commons.math.complex.Complex.conjugate()" proba="0.015706806282722512"></transition><transition target="s12" action="org.apache.commons.math.complex.Complex.multiply(org.apache.commons.math.complex.Complex)" proba="0.06806282722513089"></transition><transition target="s9" action="org.apache.commons.math.complex.Complex.equals(java.lang.Object)" proba="0.005235602094240838"></transition><transition target="s1" action="org.apache.commons.math.complex.Complex.getReal()" proba="0.1099476439790576"></transition></state><state id="s1"><transition target="sX" action="epsilon" proba="0.15217391304347827"></transition><transition target="s1" action="org.apache.commons.math.complex.Complex.getReal()" proba="0.021739130434782608"></transition><transition target="s2" action="org.apache.commons.math.complex.Complex.getImaginary()" proba="0.8260869565217391"></transition></state><state id="s2"><transition target="s13" action="org.apache.commons.math.complex.Complex.abs()" proba="0.04878048780487805"></transition><transition target="sX" action="epsilon" proba="0.5609756097560976"></transition><transition target="s8" action="org.apache.commons.math.complex.Complex.conjugate()" proba="0.024390243902439025"></transition><transition target="s1" action="org.apache.commons.math.complex.Complex.getReal()" proba="0.34146341463414637"></transition><transition target="s2" action="org.apache.commons.math.complex.Complex.getImaginary()" proba="0.024390243902439025"></transition></state></states></ts>