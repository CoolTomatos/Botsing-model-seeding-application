<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s4" action="org.apache.commons.math.ode.sampling.StepInterpolator.next()" proba="1.0"></transition></state><state id="s4"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s5"><transition target="s6" action="org.apache.commons.math.ode.sampling.StepInterpolator.getInterpolatedState()" proba="0.65625"></transition><transition target="s7" action="org.apache.commons.math.ode.sampling.StepInterpolator.getInterpolatedTime()" proba="0.125"></transition><transition target="s8" action="org.apache.commons.math.ode.sampling.StepInterpolator.getInterpolatedDerivatives()" proba="0.09375"></transition><transition target="sX" action="epsilon" proba="0.125"></transition></state><state id="s6"><transition target="s5" action="org.apache.commons.math.ode.sampling.StepInterpolator.setInterpolatedTime(double)" proba="0.03333333333333333"></transition><transition target="s11" action="org.apache.commons.math.ode.sampling.StepInterpolator.isForward()" proba="0.03333333333333333"></transition><transition target="s7" action="org.apache.commons.math.ode.sampling.StepInterpolator.getInterpolatedTime()" proba="0.13333333333333333"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition><transition target="s8" action="org.apache.commons.math.ode.sampling.StepInterpolator.getInterpolatedDerivatives()" proba="0.03333333333333333"></transition><transition target="s9" action="org.apache.commons.math.ode.sampling.StepInterpolator.clone()" proba="0.3"></transition><transition target="s1" action="org.apache.commons.math.ode.sampling.StepInterpolator.getCurrentTime()" proba="0.13333333333333333"></transition></state><state id="s7"><transition target="s5" action="org.apache.commons.math.ode.sampling.StepInterpolator.setInterpolatedTime(double)" proba="0.3333333333333333"></transition><transition target="s6" action="org.apache.commons.math.ode.sampling.StepInterpolator.getInterpolatedState()" proba="0.3333333333333333"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="sX" action="epsilon" proba="0.2"></transition><transition target="s9" action="org.apache.commons.math.ode.sampling.StepInterpolator.clone()" proba="0.6"></transition><transition target="s1" action="org.apache.commons.math.ode.sampling.StepInterpolator.getCurrentTime()" proba="0.2"></transition></state><state id="s9"><transition target="s5" action="org.apache.commons.math.ode.sampling.StepInterpolator.setInterpolatedTime(double)" proba="0.75"></transition><transition target="sX" action="epsilon" proba="0.08333333333333333"></transition><transition target="s8" action="org.apache.commons.math.ode.sampling.StepInterpolator.getInterpolatedDerivatives()" proba="0.08333333333333333"></transition><transition target="s1" action="org.apache.commons.math.ode.sampling.StepInterpolator.getCurrentTime()" proba="0.08333333333333333"></transition></state><state id="s11"><transition target="s5" action="org.apache.commons.math.ode.sampling.StepInterpolator.setInterpolatedTime(double)" proba="0.25"></transition><transition target="s10" action="org.apache.commons.math.ode.sampling.StepInterpolator.copy()" proba="0.25"></transition><transition target="sX" action="epsilon" proba="0.25"></transition><transition target="s1" action="org.apache.commons.math.ode.sampling.StepInterpolator.getCurrentTime()" proba="0.25"></transition></state><state id="s10"><transition target="sX" action="epsilon" proba="0.16666666666666666"></transition><transition target="s1" action="org.apache.commons.math.ode.sampling.StepInterpolator.getCurrentTime()" proba="0.16666666666666666"></transition><transition target="s2" action="org.apache.commons.math.ode.sampling.StepInterpolator.getPreviousTime()" proba="0.6666666666666666"></transition></state><state id="s0"><transition target="s11" action="org.apache.commons.math.ode.sampling.StepInterpolator.isForward()" proba="0.025"></transition><transition target="s5" action="org.apache.commons.math.ode.sampling.StepInterpolator.setInterpolatedTime(double)" proba="0.025"></transition><transition target="s6" action="org.apache.commons.math.ode.sampling.StepInterpolator.getInterpolatedState()" proba="0.1"></transition><transition target="s10" action="org.apache.commons.math.ode.sampling.StepInterpolator.copy()" proba="0.125"></transition><transition target="s1" action="org.apache.commons.math.ode.sampling.StepInterpolator.getCurrentTime()" proba="0.275"></transition><transition target="s2" action="org.apache.commons.math.ode.sampling.StepInterpolator.getPreviousTime()" proba="0.45"></transition></state><state id="s1"><transition target="s5" action="org.apache.commons.math.ode.sampling.StepInterpolator.setInterpolatedTime(double)" proba="0.3333333333333333"></transition><transition target="s11" action="org.apache.commons.math.ode.sampling.StepInterpolator.isForward()" proba="0.023809523809523808"></transition><transition target="s6" action="org.apache.commons.math.ode.sampling.StepInterpolator.getInterpolatedState()" proba="0.023809523809523808"></transition><transition target="s7" action="org.apache.commons.math.ode.sampling.StepInterpolator.getInterpolatedTime()" proba="0.09523809523809523"></transition><transition target="sX" action="epsilon" proba="0.19047619047619047"></transition><transition target="s1" action="org.apache.commons.math.ode.sampling.StepInterpolator.getCurrentTime()" proba="0.023809523809523808"></transition><transition target="s2" action="org.apache.commons.math.ode.sampling.StepInterpolator.getPreviousTime()" proba="0.30952380952380953"></transition></state><state id="s2"><transition target="s3" action="org.apache.commons.math.ode.sampling.StepInterpolator.hasNext()" proba="0.02857142857142857"></transition><transition target="s5" action="org.apache.commons.math.ode.sampling.StepInterpolator.setInterpolatedTime(double)" proba="0.05714285714285714"></transition><transition target="s11" action="org.apache.commons.math.ode.sampling.StepInterpolator.isForward()" proba="0.02857142857142857"></transition><transition target="sX" action="epsilon" proba="0.2571428571428571"></transition><transition target="s1" action="org.apache.commons.math.ode.sampling.StepInterpolator.getCurrentTime()" proba="0.6285714285714286"></transition></state></states></ts>