<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s4" action="org.apache.commons.math.genetics.GeneticAlgorithm.evolve(org.apache.commons.math.genetics.Population,org.apache.commons.math.genetics.StoppingCondition)" proba="0.6666666666666666"></transition><transition target="s6" action="org.apache.commons.math.genetics.GeneticAlgorithm.getGenerationsEvolved()" proba="0.3333333333333333"></transition></state><state id="s4"><transition target="s6" action="org.apache.commons.math.genetics.GeneticAlgorithm.getGenerationsEvolved()" proba="0.3333333333333333"></transition><transition target="sX" action="epsilon" proba="0.6666666666666666"></transition></state><state id="s5"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s6"><transition target="s4" action="org.apache.commons.math.genetics.GeneticAlgorithm.evolve(org.apache.commons.math.genetics.Population,org.apache.commons.math.genetics.StoppingCondition)" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.5"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s0"><transition target="s3" action="org.apache.commons.math.genetics.GeneticAlgorithm.&lt;init&gt;(org.apache.commons.math.genetics.CrossoverPolicy,double,org.apache.commons.math.genetics.MutationPolicy,double,org.apache.commons.math.genetics.SelectionPolicy)" proba="0.3333333333333333"></transition><transition target="s1" action="org.apache.commons.math.genetics.GeneticAlgorithm.getRandomGenerator()" proba="0.6666666666666666"></transition></state><state id="s1"><transition target="s5" action="org.apache.commons.math.genetics.GeneticAlgorithm.nextDouble()" proba="0.2857142857142857"></transition><transition target="sX" action="epsilon" proba="0.2857142857142857"></transition><transition target="s1" action="org.apache.commons.math.genetics.GeneticAlgorithm.getRandomGenerator()" proba="0.14285714285714285"></transition><transition target="s2" action="org.apache.commons.math.genetics.GeneticAlgorithm.nextInt(int)" proba="0.2857142857142857"></transition></state><state id="s2"><transition target="sX" action="epsilon" proba="1.0"></transition></state></states></ts>