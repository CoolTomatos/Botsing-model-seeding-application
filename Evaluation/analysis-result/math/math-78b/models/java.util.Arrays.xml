<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="java.util.Arrays.asList(java.lang.Object[])" proba="0.3333333333333333"></transition><transition target="sX" action="epsilon" proba="0.6666666666666666"></transition></state><state id="s4"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s5"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s6"><transition target="s6" action="java.util.Arrays.fill(double[],double)" proba="0.24"></transition><transition target="s7" action="java.util.Arrays.sort(double[])" proba="0.04"></transition><transition target="sX" action="epsilon" proba="0.72"></transition></state><state id="s7"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s9"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s11"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s10"><transition target="s10" action="java.util.Arrays.equals(double[],double[])" proba="0.2"></transition><transition target="sX" action="epsilon" proba="0.8"></transition></state><state id="s13"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s12"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s0"><transition target="s3" action="java.util.Arrays.asList(java.lang.Object[])" proba="0.14705882352941177"></transition><transition target="s4" action="java.util.Arrays.fill(double[],int,int,double)" proba="0.11764705882352941"></transition><transition target="s5" action="java.util.Arrays.sort(java.lang.Object[],java.util.Comparator)" proba="0.058823529411764705"></transition><transition target="s11" action="java.util.Arrays.sort(java.lang.Object[])" proba="0.014705882352941176"></transition><transition target="s6" action="java.util.Arrays.fill(double[],double)" proba="0.27941176470588236"></transition><transition target="s10" action="java.util.Arrays.equals(double[],double[])" proba="0.058823529411764705"></transition><transition target="s7" action="java.util.Arrays.sort(double[])" proba="0.07352941176470588"></transition><transition target="s13" action="java.util.Arrays.binarySearch(double[],double)" proba="0.014705882352941176"></transition><transition target="s8" action="java.util.Arrays.equals(java.lang.Object[],java.lang.Object[])" proba="0.014705882352941176"></transition><transition target="s12" action="java.util.Arrays.hashCode(java.lang.Object[])" proba="0.014705882352941176"></transition><transition target="s1" action="java.util.Arrays.fill(java.lang.Object[],java.lang.Object)" proba="0.14705882352941177"></transition><transition target="s2" action="java.util.Arrays.hashCode(double[])" proba="0.058823529411764705"></transition></state><state id="s1"><transition target="sX" action="epsilon" proba="0.9090909090909091"></transition><transition target="s1" action="java.util.Arrays.fill(java.lang.Object[],java.lang.Object)" proba="0.09090909090909091"></transition></state><state id="s2"><transition target="sX" action="epsilon" proba="0.6"></transition><transition target="s9" action="java.util.Arrays.hashCode(int[])" proba="0.2"></transition><transition target="s2" action="java.util.Arrays.hashCode(double[])" proba="0.2"></transition></state></states></ts>