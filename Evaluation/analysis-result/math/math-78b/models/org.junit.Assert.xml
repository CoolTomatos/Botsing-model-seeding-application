<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="org.junit.Assert.assertEquals(double,double,double)" proba="0.5572916666666666"></transition><transition target="s4" action="org.junit.Assert.fail(java.lang.String)" proba="0.005208333333333333"></transition><transition target="s10" action="org.junit.Assert.assertEquals(java.lang.Object,java.lang.Object)" proba="0.010416666666666666"></transition><transition target="sX" action="epsilon" proba="0.265625"></transition><transition target="s1" action="org.junit.Assert.assertTrue(boolean)" proba="0.14583333333333334"></transition><transition target="s2" action="org.junit.Assert.assertEquals(long,long)" proba="0.015625"></transition></state><state id="s4"><transition target="s3" action="org.junit.Assert.assertEquals(double,double,double)" proba="0.125"></transition><transition target="s4" action="org.junit.Assert.fail(java.lang.String)" proba="0.375"></transition><transition target="s5" action="org.junit.Assert.assertNull(java.lang.Object)" proba="0.08333333333333333"></transition><transition target="s6" action="org.junit.Assert.assertNotNull(java.lang.Object)" proba="0.08333333333333333"></transition><transition target="sX" action="epsilon" proba="0.2916666666666667"></transition><transition target="s2" action="org.junit.Assert.assertEquals(long,long)" proba="0.041666666666666664"></transition></state><state id="s5"><transition target="s4" action="org.junit.Assert.fail(java.lang.String)" proba="0.6666666666666666"></transition><transition target="s10" action="org.junit.Assert.assertEquals(java.lang.Object,java.lang.Object)" proba="0.3333333333333333"></transition></state><state id="s6"><transition target="s4" action="org.junit.Assert.fail(java.lang.String)" proba="0.6666666666666666"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition></state><state id="s7"><transition target="s7" action="org.junit.Assert.assertEquals(java.lang.String,long,long)" proba="0.5"></transition><transition target="s8" action="org.junit.Assert.assertEquals(java.lang.String,double,double,double)" proba="0.5"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="sX" action="epsilon" proba="0.6"></transition><transition target="s8" action="org.junit.Assert.assertEquals(java.lang.String,double,double,double)" proba="0.4"></transition></state><state id="s9"><transition target="sX" action="epsilon" proba="0.2"></transition><transition target="s9" action="org.junit.Assert.assertFalse(boolean)" proba="0.5"></transition><transition target="s1" action="org.junit.Assert.assertTrue(boolean)" proba="0.3"></transition></state><state id="s11"><transition target="s10" action="org.junit.Assert.assertEquals(java.lang.Object,java.lang.Object)" proba="1.0"></transition></state><state id="s10"><transition target="s3" action="org.junit.Assert.assertEquals(double,double,double)" proba="0.022222222222222223"></transition><transition target="s4" action="org.junit.Assert.fail(java.lang.String)" proba="0.022222222222222223"></transition><transition target="s11" action="org.junit.Assert.assertArrayEquals(java.lang.Object[],java.lang.Object[])" proba="0.022222222222222223"></transition><transition target="s10" action="org.junit.Assert.assertEquals(java.lang.Object,java.lang.Object)" proba="0.5111111111111111"></transition><transition target="sX" action="epsilon" proba="0.4222222222222222"></transition></state><state id="s0"><transition target="s3" action="org.junit.Assert.assertEquals(double,double,double)" proba="0.34591194968553457"></transition><transition target="s4" action="org.junit.Assert.fail(java.lang.String)" proba="0.03773584905660377"></transition><transition target="s11" action="org.junit.Assert.assertArrayEquals(java.lang.Object[],java.lang.Object[])" proba="0.006289308176100629"></transition><transition target="s5" action="org.junit.Assert.assertNull(java.lang.Object)" proba="0.006289308176100629"></transition><transition target="s10" action="org.junit.Assert.assertEquals(java.lang.Object,java.lang.Object)" proba="0.1069182389937107"></transition><transition target="s6" action="org.junit.Assert.assertNotNull(java.lang.Object)" proba="0.006289308176100629"></transition><transition target="s7" action="org.junit.Assert.assertEquals(java.lang.String,long,long)" proba="0.006289308176100629"></transition><transition target="s8" action="org.junit.Assert.assertEquals(java.lang.String,double,double,double)" proba="0.012578616352201259"></transition><transition target="s9" action="org.junit.Assert.assertFalse(boolean)" proba="0.006289308176100629"></transition><transition target="s1" action="org.junit.Assert.assertTrue(boolean)" proba="0.2893081761006289"></transition><transition target="s2" action="org.junit.Assert.assertEquals(long,long)" proba="0.1761006289308176"></transition></state><state id="s1"><transition target="s3" action="org.junit.Assert.assertEquals(double,double,double)" proba="0.1"></transition><transition target="s4" action="org.junit.Assert.fail(java.lang.String)" proba="0.005555555555555556"></transition><transition target="sX" action="epsilon" proba="0.3388888888888889"></transition><transition target="s9" action="org.junit.Assert.assertFalse(boolean)" proba="0.016666666666666666"></transition><transition target="s1" action="org.junit.Assert.assertTrue(boolean)" proba="0.5166666666666667"></transition><transition target="s2" action="org.junit.Assert.assertEquals(long,long)" proba="0.022222222222222223"></transition></state><state id="s2"><transition target="s3" action="org.junit.Assert.assertEquals(double,double,double)" proba="0.11594202898550725"></transition><transition target="s4" action="org.junit.Assert.fail(java.lang.String)" proba="0.028985507246376812"></transition><transition target="sX" action="epsilon" proba="0.21739130434782608"></transition><transition target="s9" action="org.junit.Assert.assertFalse(boolean)" proba="0.014492753623188406"></transition><transition target="s1" action="org.junit.Assert.assertTrue(boolean)" proba="0.14492753623188406"></transition><transition target="s2" action="org.junit.Assert.assertEquals(long,long)" proba="0.4782608695652174"></transition></state></states></ts>