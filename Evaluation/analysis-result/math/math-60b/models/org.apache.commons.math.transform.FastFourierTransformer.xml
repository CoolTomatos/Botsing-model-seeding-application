<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="org.apache.commons.math.transform.FastFourierTransformer.transform(org.apache.commons.math.analysis.UnivariateRealFunction,double,double,int)" proba="0.5"></transition><transition target="s4" action="org.apache.commons.math.transform.FastFourierTransformer.inversetransform(org.apache.commons.math.analysis.UnivariateRealFunction,double,double,int)" proba="0.25"></transition><transition target="sX" action="epsilon" proba="0.25"></transition></state><state id="s4"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s5"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s6"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s7"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="s8" action="org.apache.commons.math.transform.FastFourierTransformer.mdfft(java.lang.Object,boolean)" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.5"></transition></state><state id="s9"><transition target="s10" action="org.apache.commons.math.transform.FastFourierTransformer.inversetransform(org.apache.commons.math.complex.Complex[])" proba="0.3333333333333333"></transition><transition target="sX" action="epsilon" proba="0.6666666666666666"></transition></state><state id="s11"><transition target="s12" action="org.apache.commons.math.transform.FastFourierTransformer.inversetransform2(double[])" proba="1.0"></transition></state><state id="s10"><transition target="s11" action="org.apache.commons.math.transform.FastFourierTransformer.transform2(org.apache.commons.math.complex.Complex[])" proba="1.0"></transition></state><state id="s12"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s0"><transition target="s5" action="org.apache.commons.math.transform.FastFourierTransformer.isPowerOf2(long)" proba="0.11538461538461539"></transition><transition target="s6" action="org.apache.commons.math.transform.FastFourierTransformer.scaleArray(double[],double)" proba="0.3076923076923077"></transition><transition target="s7" action="org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(double[])" proba="0.038461538461538464"></transition><transition target="s1" action="org.apache.commons.math.transform.FastFourierTransformer.sample(org.apache.commons.math.analysis.UnivariateRealFunction,double,double,int)" proba="0.3076923076923077"></transition><transition target="s2" action="org.apache.commons.math.transform.FastFourierTransformer.&lt;init&gt;()" proba="0.23076923076923078"></transition></state><state id="s1"><transition target="s6" action="org.apache.commons.math.transform.FastFourierTransformer.scaleArray(double[],double)" proba="0.625"></transition><transition target="sX" action="epsilon" proba="0.375"></transition></state><state id="s2"><transition target="s3" action="org.apache.commons.math.transform.FastFourierTransformer.transform(org.apache.commons.math.analysis.UnivariateRealFunction,double,double,int)" proba="0.3333333333333333"></transition><transition target="s8" action="org.apache.commons.math.transform.FastFourierTransformer.mdfft(java.lang.Object,boolean)" proba="0.16666666666666666"></transition><transition target="s9" action="org.apache.commons.math.transform.FastFourierTransformer.transform(double[])" proba="0.5"></transition></state></states></ts>