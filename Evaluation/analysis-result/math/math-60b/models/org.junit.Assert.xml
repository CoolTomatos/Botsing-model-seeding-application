<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="org.junit.Assert.assertEquals(double,double,double)" proba="0.578494623655914"></transition><transition target="s4" action="org.junit.Assert.assertEquals(long,long)" proba="0.017204301075268817"></transition><transition target="s5" action="org.junit.Assert.assertEquals(java.lang.Object,java.lang.Object)" proba="0.004301075268817204"></transition><transition target="s6" action="org.junit.Assert.fail(java.lang.String)" proba="0.002150537634408602"></transition><transition target="sX" action="epsilon" proba="0.26666666666666666"></transition><transition target="s1" action="org.junit.Assert.assertTrue(boolean)" proba="0.13118279569892474"></transition></state><state id="s4"><transition target="s3" action="org.junit.Assert.assertEquals(double,double,double)" proba="0.11607142857142858"></transition><transition target="s4" action="org.junit.Assert.assertEquals(long,long)" proba="0.39285714285714285"></transition><transition target="s11" action="org.junit.Assert.assertFalse(boolean)" proba="0.008928571428571428"></transition><transition target="s5" action="org.junit.Assert.assertEquals(java.lang.Object,java.lang.Object)" proba="0.008928571428571428"></transition><transition target="sX" action="epsilon" proba="0.32142857142857145"></transition><transition target="s1" action="org.junit.Assert.assertTrue(boolean)" proba="0.15178571428571427"></transition></state><state id="s5"><transition target="s3" action="org.junit.Assert.assertEquals(double,double,double)" proba="0.0196078431372549"></transition><transition target="s4" action="org.junit.Assert.assertEquals(long,long)" proba="0.029411764705882353"></transition><transition target="s5" action="org.junit.Assert.assertEquals(java.lang.Object,java.lang.Object)" proba="0.5392156862745098"></transition><transition target="s11" action="org.junit.Assert.assertFalse(boolean)" proba="0.0196078431372549"></transition><transition target="s6" action="org.junit.Assert.fail(java.lang.String)" proba="0.00980392156862745"></transition><transition target="sX" action="epsilon" proba="0.3235294117647059"></transition><transition target="s12" action="org.junit.Assert.assertNotSame(java.lang.Object,java.lang.Object)" proba="0.029411764705882353"></transition><transition target="s16" action="org.junit.Assert.assertArrayEquals(java.lang.Object[],java.lang.Object[])" proba="0.00980392156862745"></transition><transition target="s1" action="org.junit.Assert.assertTrue(boolean)" proba="0.0196078431372549"></transition></state><state id="s6"><transition target="s3" action="org.junit.Assert.assertEquals(double,double,double)" proba="0.014084507042253521"></transition><transition target="s4" action="org.junit.Assert.assertEquals(long,long)" proba="0.007042253521126761"></transition><transition target="s5" action="org.junit.Assert.assertEquals(java.lang.Object,java.lang.Object)" proba="0.007042253521126761"></transition><transition target="s6" action="org.junit.Assert.fail(java.lang.String)" proba="0.6408450704225352"></transition><transition target="s7" action="org.junit.Assert.assertEquals(java.lang.String,long,long)" proba="0.02112676056338028"></transition><transition target="sX" action="epsilon" proba="0.23943661971830985"></transition><transition target="s8" action="org.junit.Assert.assertEquals(java.lang.String,double,double,double)" proba="0.07042253521126761"></transition></state><state id="s7"><transition target="s6" action="org.junit.Assert.fail(java.lang.String)" proba="0.013513513513513514"></transition><transition target="s7" action="org.junit.Assert.assertEquals(java.lang.String,long,long)" proba="0.40540540540540543"></transition><transition target="sX" action="epsilon" proba="0.04054054054054054"></transition><transition target="s8" action="org.junit.Assert.assertEquals(java.lang.String,double,double,double)" proba="0.5135135135135135"></transition><transition target="s15" action="org.junit.Assert.assertNotSame(java.lang.String,java.lang.Object,java.lang.Object)" proba="0.02702702702702703"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="s6" action="org.junit.Assert.fail(java.lang.String)" proba="0.10218978102189781"></transition><transition target="s7" action="org.junit.Assert.assertEquals(java.lang.String,long,long)" proba="0.19708029197080293"></transition><transition target="s8" action="org.junit.Assert.assertEquals(java.lang.String,double,double,double)" proba="0.5182481751824818"></transition><transition target="sX" action="epsilon" proba="0.15328467153284672"></transition><transition target="s12" action="org.junit.Assert.assertNotSame(java.lang.Object,java.lang.Object)" proba="0.0072992700729927005"></transition><transition target="s15" action="org.junit.Assert.assertNotSame(java.lang.String,java.lang.Object,java.lang.Object)" proba="0.0072992700729927005"></transition><transition target="s14" action="org.junit.Assert.assertEquals(java.lang.String,java.lang.Object,java.lang.Object)" proba="0.0072992700729927005"></transition><transition target="s17" action="org.junit.Assert.assertSame(java.lang.Object,java.lang.Object)" proba="0.0072992700729927005"></transition></state><state id="s9"><transition target="s5" action="org.junit.Assert.assertEquals(java.lang.Object,java.lang.Object)" proba="1.0"></transition></state><state id="s11"><transition target="s11" action="org.junit.Assert.assertFalse(boolean)" proba="0.34615384615384615"></transition><transition target="s5" action="org.junit.Assert.assertEquals(java.lang.Object,java.lang.Object)" proba="0.07692307692307693"></transition><transition target="sX" action="epsilon" proba="0.19230769230769232"></transition><transition target="s1" action="org.junit.Assert.assertTrue(boolean)" proba="0.38461538461538464"></transition></state><state id="s10"><transition target="sX" action="epsilon" proba="0.6666666666666666"></transition><transition target="s1" action="org.junit.Assert.assertTrue(boolean)" proba="0.3333333333333333"></transition></state><state id="s13"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s12"><transition target="s3" action="org.junit.Assert.assertEquals(double,double,double)" proba="0.1111111111111111"></transition><transition target="s4" action="org.junit.Assert.assertEquals(long,long)" proba="0.1111111111111111"></transition><transition target="s7" action="org.junit.Assert.assertEquals(java.lang.String,long,long)" proba="0.2222222222222222"></transition><transition target="s12" action="org.junit.Assert.assertNotSame(java.lang.Object,java.lang.Object)" proba="0.3333333333333333"></transition><transition target="sX" action="epsilon" proba="0.2222222222222222"></transition></state><state id="s15"><transition target="s7" action="org.junit.Assert.assertEquals(java.lang.String,long,long)" proba="1.0"></transition></state><state id="s14"><transition target="s7" action="org.junit.Assert.assertEquals(java.lang.String,long,long)" proba="0.1"></transition><transition target="sX" action="epsilon" proba="0.1"></transition><transition target="s14" action="org.junit.Assert.assertEquals(java.lang.String,java.lang.Object,java.lang.Object)" proba="0.8"></transition></state><state id="s17"><transition target="s12" action="org.junit.Assert.assertNotSame(java.lang.Object,java.lang.Object)" proba="1.0"></transition></state><state id="s16"><transition target="s5" action="org.junit.Assert.assertEquals(java.lang.Object,java.lang.Object)" proba="1.0"></transition></state><state id="s0"><transition target="s3" action="org.junit.Assert.assertEquals(double,double,double)" proba="0.3685636856368564"></transition><transition target="s4" action="org.junit.Assert.assertEquals(long,long)" proba="0.12737127371273713"></transition><transition target="s5" action="org.junit.Assert.assertEquals(java.lang.Object,java.lang.Object)" proba="0.1002710027100271"></transition><transition target="s6" action="org.junit.Assert.fail(java.lang.String)" proba="0.08130081300813008"></transition><transition target="s7" action="org.junit.Assert.assertEquals(java.lang.String,long,long)" proba="0.02168021680216802"></transition><transition target="s8" action="org.junit.Assert.assertEquals(java.lang.String,double,double,double)" proba="0.04878048780487805"></transition><transition target="s9" action="org.junit.Assert.assertNull(java.lang.Object)" proba="0.0027100271002710027"></transition><transition target="s11" action="org.junit.Assert.assertFalse(boolean)" proba="0.01084010840108401"></transition><transition target="s10" action="org.junit.Assert.fail()" proba="0.008130081300813009"></transition><transition target="s13" action="org.junit.Assert.assertNotNull(java.lang.Object)" proba="0.0027100271002710027"></transition><transition target="s14" action="org.junit.Assert.assertEquals(java.lang.String,java.lang.Object,java.lang.Object)" proba="0.0027100271002710027"></transition><transition target="s16" action="org.junit.Assert.assertArrayEquals(java.lang.Object[],java.lang.Object[])" proba="0.0027100271002710027"></transition><transition target="s1" action="org.junit.Assert.assertTrue(boolean)" proba="0.15718157181571815"></transition><transition target="s2" action="org.junit.Assert.assertTrue(java.lang.String,boolean)" proba="0.06504065040650407"></transition></state><state id="s1"><transition target="s3" action="org.junit.Assert.assertEquals(double,double,double)" proba="0.168"></transition><transition target="s4" action="org.junit.Assert.assertEquals(long,long)" proba="0.032"></transition><transition target="s11" action="org.junit.Assert.assertFalse(boolean)" proba="0.04"></transition><transition target="s5" action="org.junit.Assert.assertEquals(java.lang.Object,java.lang.Object)" proba="0.004"></transition><transition target="s6" action="org.junit.Assert.fail(java.lang.String)" proba="0.008"></transition><transition target="sX" action="epsilon" proba="0.34"></transition><transition target="s12" action="org.junit.Assert.assertNotSame(java.lang.Object,java.lang.Object)" proba="0.004"></transition><transition target="s1" action="org.junit.Assert.assertTrue(boolean)" proba="0.404"></transition></state><state id="s2"><transition target="s6" action="org.junit.Assert.fail(java.lang.String)" proba="0.08333333333333333"></transition><transition target="sX" action="epsilon" proba="0.9166666666666666"></transition></state></states></ts>