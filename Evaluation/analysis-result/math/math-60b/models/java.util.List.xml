<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s6" action="java.util.List.add(int,java.lang.Object)" proba="0.2"></transition><transition target="sX" action="epsilon" proba="0.8"></transition></state><state id="s4"><transition target="s4" action="java.util.List.add(java.lang.Object)" proba="0.3333333333333333"></transition><transition target="sX" action="epsilon" proba="0.5416666666666666"></transition><transition target="s1" action="java.util.List.size()" proba="0.08333333333333333"></transition><transition target="s2" action="java.util.List.get(int)" proba="0.041666666666666664"></transition></state><state id="s5"><transition target="s3" action="java.util.List.clear()" proba="0.3333333333333333"></transition><transition target="s7" action="java.util.List.iterator()" proba="0.3333333333333333"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition></state><state id="s6"><transition target="s2" action="java.util.List.get(int)" proba="1.0"></transition></state><state id="s7"><transition target="s4" action="java.util.List.add(java.lang.Object)" proba="0.043478260869565216"></transition><transition target="s7" action="java.util.List.iterator()" proba="0.17391304347826086"></transition><transition target="sX" action="epsilon" proba="0.782608695652174"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="s8" action="java.util.List.toArray(java.lang.Object[])" proba="0.3333333333333333"></transition><transition target="sX" action="epsilon" proba="0.6666666666666666"></transition></state><state id="s9"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s11"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s10"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s12"><transition target="s12" action="java.util.List.indexOf(java.lang.Object)" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.5"></transition></state><state id="s0"><transition target="s3" action="java.util.List.clear()" proba="0.05"></transition><transition target="s4" action="java.util.List.add(java.lang.Object)" proba="0.1625"></transition><transition target="s5" action="java.util.List.isEmpty()" proba="0.0375"></transition><transition target="s11" action="java.util.List.remove(int)" proba="0.0125"></transition><transition target="s10" action="java.util.List.equals(java.lang.Object)" proba="0.0125"></transition><transition target="s7" action="java.util.List.iterator()" proba="0.1375"></transition><transition target="s8" action="java.util.List.toArray(java.lang.Object[])" proba="0.0125"></transition><transition target="s12" action="java.util.List.indexOf(java.lang.Object)" proba="0.0125"></transition><transition target="s9" action="java.util.List.hashCode()" proba="0.0125"></transition><transition target="s1" action="java.util.List.size()" proba="0.3625"></transition><transition target="s2" action="java.util.List.get(int)" proba="0.1875"></transition></state><state id="s1"><transition target="s4" action="java.util.List.add(java.lang.Object)" proba="0.03636363636363636"></transition><transition target="s11" action="java.util.List.remove(int)" proba="0.01818181818181818"></transition><transition target="s7" action="java.util.List.iterator()" proba="0.09090909090909091"></transition><transition target="sX" action="epsilon" proba="0.16363636363636364"></transition><transition target="s8" action="java.util.List.toArray(java.lang.Object[])" proba="0.01818181818181818"></transition><transition target="s1" action="java.util.List.size()" proba="0.3090909090909091"></transition><transition target="s2" action="java.util.List.get(int)" proba="0.36363636363636365"></transition></state><state id="s2"><transition target="s7" action="java.util.List.iterator()" proba="0.027777777777777776"></transition><transition target="sX" action="epsilon" proba="0.3888888888888889"></transition><transition target="s1" action="java.util.List.size()" proba="0.09722222222222222"></transition><transition target="s2" action="java.util.List.get(int)" proba="0.4861111111111111"></transition></state></states></ts>