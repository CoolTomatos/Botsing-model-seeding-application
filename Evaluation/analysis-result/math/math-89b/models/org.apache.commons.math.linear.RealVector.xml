<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s1" action="org.apache.commons.math.linear.RealVector.getEntry(int)" proba="1.0"></transition></state><state id="s4"><transition target="s5" action="org.apache.commons.math.linear.RealVector.mapMultiply(double)" proba="1.0"></transition></state><state id="s5"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s0"><transition target="s4" action="org.apache.commons.math.linear.RealVector.dotProduct(org.apache.commons.math.linear.RealVector)" proba="0.05"></transition><transition target="s1" action="org.apache.commons.math.linear.RealVector.getEntry(int)" proba="0.45"></transition><transition target="s2" action="org.apache.commons.math.linear.RealVector.getDimension()" proba="0.5"></transition></state><state id="s1"><transition target="sX" action="epsilon" proba="0.9444444444444444"></transition><transition target="s2" action="org.apache.commons.math.linear.RealVector.getDimension()" proba="0.05555555555555555"></transition></state><state id="s2"><transition target="s3" action="org.apache.commons.math.linear.RealVector.isNaN()" proba="0.0625"></transition><transition target="sX" action="epsilon" proba="0.125"></transition><transition target="s1" action="org.apache.commons.math.linear.RealVector.getEntry(int)" proba="0.5"></transition><transition target="s2" action="org.apache.commons.math.linear.RealVector.getDimension()" proba="0.3125"></transition></state></states></ts>