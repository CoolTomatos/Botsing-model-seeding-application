<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="org.apache.commons.math.optimization.linear.SimplexTableau.getEntry(int,int)" proba="0.3"></transition><transition target="s4" action="org.apache.commons.math.optimization.linear.SimplexTableau.divideRow(int,double)" proba="0.1"></transition><transition target="s6" action="org.apache.commons.math.optimization.linear.SimplexTableau.subtractRow(int,int,double)" proba="0.1"></transition><transition target="sX" action="epsilon" proba="0.5"></transition></state><state id="s4"><transition target="s5" action="org.apache.commons.math.optimization.linear.SimplexTableau.getHeight()" proba="1.0"></transition></state><state id="s5"><transition target="s3" action="org.apache.commons.math.optimization.linear.SimplexTableau.getEntry(int,int)" proba="0.5"></transition><transition target="s2" action="org.apache.commons.math.optimization.linear.SimplexTableau.getWidth()" proba="0.5"></transition></state><state id="s6"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s7"><transition target="s11" action="org.apache.commons.math.optimization.linear.SimplexTableau.discardArtificialVariables()" proba="0.4"></transition><transition target="sX" action="epsilon" proba="0.2"></transition><transition target="s8" action="org.apache.commons.math.optimization.linear.SimplexTableau.getData()" proba="0.4"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s9"><transition target="s10" action="org.apache.commons.math.optimization.linear.SimplexTableau.getRhsOffset()" proba="0.3333333333333333"></transition><transition target="s1" action="org.apache.commons.math.optimization.linear.SimplexTableau.getNumObjectiveFunctions()" proba="0.6666666666666666"></transition></state><state id="s11"><transition target="s12" action="org.apache.commons.math.optimization.linear.SimplexTableau.getSolution()" proba="0.5"></transition><transition target="s8" action="org.apache.commons.math.optimization.linear.SimplexTableau.getData()" proba="0.5"></transition></state><state id="s10"><transition target="s3" action="org.apache.commons.math.optimization.linear.SimplexTableau.getEntry(int,int)" proba="1.0"></transition></state><state id="s12"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s0"><transition target="s3" action="org.apache.commons.math.optimization.linear.SimplexTableau.getEntry(int,int)" proba="0.09090909090909091"></transition><transition target="s7" action="org.apache.commons.math.optimization.linear.SimplexTableau.&lt;init&gt;(org.apache.commons.math.optimization.linear.LinearObjectiveFunction,java.util.Collection,org.apache.commons.math.optimization.GoalType,boolean,double)" proba="0.45454545454545453"></transition><transition target="s9" action="org.apache.commons.math.optimization.linear.SimplexTableau.getNumArtificialVariables()" proba="0.2727272727272727"></transition><transition target="s1" action="org.apache.commons.math.optimization.linear.SimplexTableau.getNumObjectiveFunctions()" proba="0.18181818181818182"></transition></state><state id="s1"><transition target="s5" action="org.apache.commons.math.optimization.linear.SimplexTableau.getHeight()" proba="0.25"></transition><transition target="s2" action="org.apache.commons.math.optimization.linear.SimplexTableau.getWidth()" proba="0.75"></transition></state><state id="s2"><transition target="s3" action="org.apache.commons.math.optimization.linear.SimplexTableau.getEntry(int,int)" proba="1.0"></transition></state></states></ts>