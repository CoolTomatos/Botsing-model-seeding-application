<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest$Circle.getN()" proba="0.3333333333333333"></transition><transition target="s4" action="org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest$Circle.getRadius(java.awt.geom.Point2D$Double)" proba="0.3333333333333333"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition></state><state id="s4"><transition target="s4" action="org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest$Circle.getRadius(java.awt.geom.Point2D$Double)" proba="0.3333333333333333"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition><transition target="s2" action="org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest$Circle.addPoint(double,double)" proba="0.3333333333333333"></transition></state><state id="s5"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s0"><transition target="s5" action="org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest$Circle.access$000(org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest$Circle,double[])" proba="0.25"></transition><transition target="s1" action="org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest$Circle.&lt;init&gt;()" proba="0.75"></transition></state><state id="s1"><transition target="s2" action="org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest$Circle.addPoint(double,double)" proba="1.0"></transition></state><state id="s2"><transition target="s3" action="org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest$Circle.getN()" proba="0.15384615384615385"></transition><transition target="s4" action="org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest$Circle.getRadius(java.awt.geom.Point2D$Double)" proba="0.07692307692307693"></transition><transition target="sX" action="epsilon" proba="0.07692307692307693"></transition><transition target="s2" action="org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest$Circle.addPoint(double,double)" proba="0.6923076923076923"></transition></state></states></ts>