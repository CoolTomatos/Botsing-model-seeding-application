<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s4" action="org.apache.commons.math.ode.sampling.StepInterpolator.next()" proba="1.0"></transition></state><state id="s4"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s5"><transition target="sX" action="epsilon" proba="0.16666666666666666"></transition><transition target="s1" action="org.apache.commons.math.ode.sampling.StepInterpolator.getCurrentTime()" proba="0.16666666666666666"></transition><transition target="s2" action="org.apache.commons.math.ode.sampling.StepInterpolator.getPreviousTime()" proba="0.6666666666666666"></transition></state><state id="s6"><transition target="s10" action="org.apache.commons.math.ode.sampling.StepInterpolator.getInterpolatedDerivatives()" proba="0.030303030303030304"></transition><transition target="s7" action="org.apache.commons.math.ode.sampling.StepInterpolator.getInterpolatedState()" proba="0.7575757575757576"></transition><transition target="sX" action="epsilon" proba="0.09090909090909091"></transition><transition target="s9" action="org.apache.commons.math.ode.sampling.StepInterpolator.getInterpolatedTime()" proba="0.12121212121212122"></transition></state><state id="s7"><transition target="s11" action="org.apache.commons.math.ode.sampling.StepInterpolator.clone()" proba="0.2727272727272727"></transition><transition target="s6" action="org.apache.commons.math.ode.sampling.StepInterpolator.setInterpolatedTime(double)" proba="0.06060606060606061"></transition><transition target="s10" action="org.apache.commons.math.ode.sampling.StepInterpolator.getInterpolatedDerivatives()" proba="0.12121212121212122"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition><transition target="s9" action="org.apache.commons.math.ode.sampling.StepInterpolator.getInterpolatedTime()" proba="0.12121212121212122"></transition><transition target="s1" action="org.apache.commons.math.ode.sampling.StepInterpolator.getCurrentTime()" proba="0.09090909090909091"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="s5" action="org.apache.commons.math.ode.sampling.StepInterpolator.copy()" proba="0.5"></transition><transition target="s1" action="org.apache.commons.math.ode.sampling.StepInterpolator.getCurrentTime()" proba="0.5"></transition></state><state id="s9"><transition target="s6" action="org.apache.commons.math.ode.sampling.StepInterpolator.setInterpolatedTime(double)" proba="0.3333333333333333"></transition><transition target="s7" action="org.apache.commons.math.ode.sampling.StepInterpolator.getInterpolatedState()" proba="0.3333333333333333"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition></state><state id="s11"><transition target="s6" action="org.apache.commons.math.ode.sampling.StepInterpolator.setInterpolatedTime(double)" proba="0.8"></transition><transition target="s10" action="org.apache.commons.math.ode.sampling.StepInterpolator.getInterpolatedDerivatives()" proba="0.1"></transition><transition target="s1" action="org.apache.commons.math.ode.sampling.StepInterpolator.getCurrentTime()" proba="0.1"></transition></state><state id="s10"><transition target="s11" action="org.apache.commons.math.ode.sampling.StepInterpolator.clone()" proba="0.16666666666666666"></transition><transition target="s6" action="org.apache.commons.math.ode.sampling.StepInterpolator.setInterpolatedTime(double)" proba="0.16666666666666666"></transition><transition target="sX" action="epsilon" proba="0.6666666666666666"></transition></state><state id="s0"><transition target="s5" action="org.apache.commons.math.ode.sampling.StepInterpolator.copy()" proba="0.12195121951219512"></transition><transition target="s6" action="org.apache.commons.math.ode.sampling.StepInterpolator.setInterpolatedTime(double)" proba="0.04878048780487805"></transition><transition target="s7" action="org.apache.commons.math.ode.sampling.StepInterpolator.getInterpolatedState()" proba="0.07317073170731707"></transition><transition target="s8" action="org.apache.commons.math.ode.sampling.StepInterpolator.isForward()" proba="0.024390243902439025"></transition><transition target="s1" action="org.apache.commons.math.ode.sampling.StepInterpolator.getCurrentTime()" proba="0.3170731707317073"></transition><transition target="s2" action="org.apache.commons.math.ode.sampling.StepInterpolator.getPreviousTime()" proba="0.4146341463414634"></transition></state><state id="s1"><transition target="s6" action="org.apache.commons.math.ode.sampling.StepInterpolator.setInterpolatedTime(double)" proba="0.32558139534883723"></transition><transition target="s7" action="org.apache.commons.math.ode.sampling.StepInterpolator.getInterpolatedState()" proba="0.023255813953488372"></transition><transition target="sX" action="epsilon" proba="0.18604651162790697"></transition><transition target="s9" action="org.apache.commons.math.ode.sampling.StepInterpolator.getInterpolatedTime()" proba="0.09302325581395349"></transition><transition target="s1" action="org.apache.commons.math.ode.sampling.StepInterpolator.getCurrentTime()" proba="0.06976744186046512"></transition><transition target="s2" action="org.apache.commons.math.ode.sampling.StepInterpolator.getPreviousTime()" proba="0.3023255813953488"></transition></state><state id="s2"><transition target="s3" action="org.apache.commons.math.ode.sampling.StepInterpolator.hasNext()" proba="0.02857142857142857"></transition><transition target="s6" action="org.apache.commons.math.ode.sampling.StepInterpolator.setInterpolatedTime(double)" proba="0.05714285714285714"></transition><transition target="sX" action="epsilon" proba="0.2571428571428571"></transition><transition target="s8" action="org.apache.commons.math.ode.sampling.StepInterpolator.isForward()" proba="0.02857142857142857"></transition><transition target="s1" action="org.apache.commons.math.ode.sampling.StepInterpolator.getCurrentTime()" proba="0.6"></transition><transition target="s2" action="org.apache.commons.math.ode.sampling.StepInterpolator.getPreviousTime()" proba="0.02857142857142857"></transition></state></states></ts>