<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s4" action="org.apache.commons.math.geometry.euclidean.threed.Line.orthogonal()" proba="0.2857142857142857"></transition><transition target="s5" action="org.apache.commons.math.geometry.euclidean.threed.Line.contains(org.apache.commons.math.geometry.euclidean.threed.Vector3D)" proba="0.2857142857142857"></transition><transition target="s7" action="org.apache.commons.math.geometry.euclidean.threed.Line.toSpace(org.apache.commons.math.geometry.Vector)" proba="0.14285714285714285"></transition><transition target="sX" action="epsilon" proba="0.2857142857142857"></transition></state><state id="s4"><transition target="s3" action="org.apache.commons.math.geometry.euclidean.threed.Line.getDirection()" proba="0.5"></transition><transition target="s2" action="org.apache.commons.math.geometry.euclidean.threed.Line.isSimilarTo(org.apache.commons.math.geometry.euclidean.threed.Line)" proba="0.5"></transition></state><state id="s5"><transition target="s3" action="org.apache.commons.math.geometry.euclidean.threed.Line.getDirection()" proba="0.3333333333333333"></transition><transition target="s5" action="org.apache.commons.math.geometry.euclidean.threed.Line.contains(org.apache.commons.math.geometry.euclidean.threed.Vector3D)" proba="0.16666666666666666"></transition><transition target="sX" action="epsilon" proba="0.5"></transition></state><state id="s6"><transition target="s6" action="org.apache.commons.math.geometry.euclidean.threed.Line.distance(org.apache.commons.math.geometry.euclidean.threed.Line)" proba="0.75"></transition><transition target="sX" action="epsilon" proba="0.25"></transition></state><state id="s7"><transition target="s3" action="org.apache.commons.math.geometry.euclidean.threed.Line.getDirection()" proba="0.4"></transition><transition target="s7" action="org.apache.commons.math.geometry.euclidean.threed.Line.toSpace(org.apache.commons.math.geometry.Vector)" proba="0.4"></transition><transition target="sX" action="epsilon" proba="0.2"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="s8" action="org.apache.commons.math.geometry.euclidean.threed.Line.distance(org.apache.commons.math.geometry.euclidean.threed.Vector3D)" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.5"></transition></state><state id="s0"><transition target="s3" action="org.apache.commons.math.geometry.euclidean.threed.Line.getDirection()" proba="0.1"></transition><transition target="s5" action="org.apache.commons.math.geometry.euclidean.threed.Line.contains(org.apache.commons.math.geometry.euclidean.threed.Vector3D)" proba="0.1"></transition><transition target="s7" action="org.apache.commons.math.geometry.euclidean.threed.Line.toSpace(org.apache.commons.math.geometry.Vector)" proba="0.2"></transition><transition target="s1" action="org.apache.commons.math.geometry.euclidean.threed.Line.&lt;init&gt;(org.apache.commons.math.geometry.euclidean.threed.Vector3D,org.apache.commons.math.geometry.euclidean.threed.Vector3D)" proba="0.6"></transition></state><state id="s1"><transition target="s5" action="org.apache.commons.math.geometry.euclidean.threed.Line.contains(org.apache.commons.math.geometry.euclidean.threed.Vector3D)" proba="0.3333333333333333"></transition><transition target="s6" action="org.apache.commons.math.geometry.euclidean.threed.Line.distance(org.apache.commons.math.geometry.euclidean.threed.Line)" proba="0.16666666666666666"></transition><transition target="sX" action="epsilon" proba="0.16666666666666666"></transition><transition target="s8" action="org.apache.commons.math.geometry.euclidean.threed.Line.distance(org.apache.commons.math.geometry.euclidean.threed.Vector3D)" proba="0.16666666666666666"></transition><transition target="s2" action="org.apache.commons.math.geometry.euclidean.threed.Line.isSimilarTo(org.apache.commons.math.geometry.euclidean.threed.Line)" proba="0.16666666666666666"></transition></state><state id="s2"><transition target="s3" action="org.apache.commons.math.geometry.euclidean.threed.Line.getDirection()" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.5"></transition></state></states></ts>