<?xml version="1.0"?><ts><start>s0</start><states><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s11"><transition target="s10" action="org.apache.commons.math.stat.inference.TestUtils.tTest(double,double[],double)" proba="0.6666666666666666"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition></state><state id="s10"><transition target="s11" action="org.apache.commons.math.stat.inference.TestUtils.tTest(double,org.apache.commons.math.stat.descriptive.StatisticalSummary,double)" proba="1.0"></transition></state><state id="s13"><transition target="s14" action="org.apache.commons.math.stat.inference.TestUtils.tTest(double[],double[],double)" proba="0.5"></transition><transition target="s1" action="org.apache.commons.math.stat.inference.TestUtils.t(double[],double[])" proba="0.5"></transition></state><state id="s12"><transition target="sX" action="epsilon" proba="0.5"></transition><transition target="s2" action="org.apache.commons.math.stat.inference.TestUtils.tTest(double[],double[])" proba="0.5"></transition></state><state id="s15"><transition target="s14" action="org.apache.commons.math.stat.inference.TestUtils.tTest(double[],double[],double)" proba="0.75"></transition><transition target="s2" action="org.apache.commons.math.stat.inference.TestUtils.tTest(double[],double[])" proba="0.25"></transition></state><state id="s14"><transition target="s15" action="org.apache.commons.math.stat.inference.TestUtils.tTest(org.apache.commons.math.stat.descriptive.StatisticalSummary,org.apache.commons.math.stat.descriptive.StatisticalSummary,double)" proba="1.0"></transition></state><state id="s17"><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition><transition target="s27" action="org.apache.commons.math.stat.inference.TestUtils.chiSquareTest(long[][],double)" proba="0.6666666666666666"></transition></state><state id="s16"><transition target="s17" action="org.apache.commons.math.stat.inference.TestUtils.chiSquareTest(long[][])" proba="0.42857142857142855"></transition><transition target="s16" action="org.apache.commons.math.stat.inference.TestUtils.chiSquare(long[][])" proba="0.42857142857142855"></transition><transition target="s27" action="org.apache.commons.math.stat.inference.TestUtils.chiSquareTest(long[][],double)" proba="0.14285714285714285"></transition></state><state id="s19"><transition target="s20" action="org.apache.commons.math.stat.inference.TestUtils.pairedTTest(double[],double[],double)" proba="0.5"></transition><transition target="s19" action="org.apache.commons.math.stat.inference.TestUtils.pairedTTest(double[],double[])" proba="0.5"></transition></state><state id="s18"><transition target="s19" action="org.apache.commons.math.stat.inference.TestUtils.pairedTTest(double[],double[])" proba="1.0"></transition></state><state id="s0"><transition target="s3" action="org.apache.commons.math.stat.inference.TestUtils.chiSquare(double[],long[])" proba="0.18181818181818182"></transition><transition target="s6" action="org.apache.commons.math.stat.inference.TestUtils.t(double,double[])" proba="0.18181818181818182"></transition><transition target="s21" action="org.apache.commons.math.stat.inference.TestUtils.homoscedasticT(double[],double[])" proba="0.09090909090909091"></transition><transition target="s24" action="org.apache.commons.math.stat.inference.TestUtils.oneWayAnovaFValue(java.util.Collection)" proba="0.09090909090909091"></transition><transition target="s16" action="org.apache.commons.math.stat.inference.TestUtils.chiSquare(long[][])" proba="0.18181818181818182"></transition><transition target="s18" action="org.apache.commons.math.stat.inference.TestUtils.pairedT(double[],double[])" proba="0.09090909090909091"></transition><transition target="s1" action="org.apache.commons.math.stat.inference.TestUtils.t(double[],double[])" proba="0.18181818181818182"></transition></state><state id="s1"><transition target="s12" action="org.apache.commons.math.stat.inference.TestUtils.t(org.apache.commons.math.stat.descriptive.StatisticalSummary,org.apache.commons.math.stat.descriptive.StatisticalSummary)" proba="0.6666666666666666"></transition><transition target="s2" action="org.apache.commons.math.stat.inference.TestUtils.tTest(double[],double[])" proba="0.3333333333333333"></transition></state><state id="s2"><transition target="s13" action="org.apache.commons.math.stat.inference.TestUtils.tTest(org.apache.commons.math.stat.descriptive.StatisticalSummary,org.apache.commons.math.stat.descriptive.StatisticalSummary)" proba="0.6666666666666666"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition></state><state id="s3"><transition target="s3" action="org.apache.commons.math.stat.inference.TestUtils.chiSquare(double[],long[])" proba="0.2"></transition><transition target="s4" action="org.apache.commons.math.stat.inference.TestUtils.chiSquareTest(double[],long[])" proba="0.4"></transition><transition target="s5" action="org.apache.commons.math.stat.inference.TestUtils.chiSquareTest(double[],long[],double)" proba="0.2"></transition><transition target="sX" action="epsilon" proba="0.2"></transition></state><state id="s4"><transition target="s3" action="org.apache.commons.math.stat.inference.TestUtils.chiSquare(double[],long[])" proba="0.5"></transition><transition target="s5" action="org.apache.commons.math.stat.inference.TestUtils.chiSquareTest(double[],long[],double)" proba="0.5"></transition></state><state id="s5"><transition target="s3" action="org.apache.commons.math.stat.inference.TestUtils.chiSquare(double[],long[])" proba="0.2"></transition><transition target="s5" action="org.apache.commons.math.stat.inference.TestUtils.chiSquareTest(double[],long[],double)" proba="0.6"></transition><transition target="sX" action="epsilon" proba="0.2"></transition></state><state id="s6"><transition target="s7" action="org.apache.commons.math.stat.inference.TestUtils.t(double,org.apache.commons.math.stat.descriptive.StatisticalSummary)" proba="0.8"></transition><transition target="s8" action="org.apache.commons.math.stat.inference.TestUtils.tTest(double,double[])" proba="0.2"></transition></state><state id="s7"><transition target="s6" action="org.apache.commons.math.stat.inference.TestUtils.t(double,double[])" proba="0.4"></transition><transition target="s8" action="org.apache.commons.math.stat.inference.TestUtils.tTest(double,double[])" proba="0.4"></transition><transition target="s9" action="org.apache.commons.math.stat.inference.TestUtils.tTest(double,org.apache.commons.math.stat.descriptive.StatisticalSummary)" proba="0.2"></transition></state><state id="s8"><transition target="s7" action="org.apache.commons.math.stat.inference.TestUtils.t(double,org.apache.commons.math.stat.descriptive.StatisticalSummary)" proba="0.3333333333333333"></transition><transition target="s9" action="org.apache.commons.math.stat.inference.TestUtils.tTest(double,org.apache.commons.math.stat.descriptive.StatisticalSummary)" proba="0.6666666666666666"></transition></state><state id="s9"><transition target="s10" action="org.apache.commons.math.stat.inference.TestUtils.tTest(double,double[],double)" proba="0.3333333333333333"></transition><transition target="s6" action="org.apache.commons.math.stat.inference.TestUtils.t(double,double[])" proba="0.3333333333333333"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition></state><state id="s20"><transition target="s20" action="org.apache.commons.math.stat.inference.TestUtils.pairedTTest(double[],double[],double)" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.5"></transition></state><state id="s22"><transition target="s23" action="org.apache.commons.math.stat.inference.TestUtils.homoscedasticTTest(double[],double[],double)" proba="1.0"></transition></state><state id="s21"><transition target="s22" action="org.apache.commons.math.stat.inference.TestUtils.homoscedasticTTest(org.apache.commons.math.stat.descriptive.StatisticalSummary,org.apache.commons.math.stat.descriptive.StatisticalSummary)" proba="1.0"></transition></state><state id="s24"><transition target="s25" action="org.apache.commons.math.stat.inference.TestUtils.oneWayAnovaPValue(java.util.Collection)" proba="1.0"></transition></state><state id="s23"><transition target="s23" action="org.apache.commons.math.stat.inference.TestUtils.homoscedasticTTest(double[],double[],double)" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.5"></transition></state><state id="s26"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s25"><transition target="s26" action="org.apache.commons.math.stat.inference.TestUtils.oneWayAnovaTest(java.util.Collection,double)" proba="1.0"></transition></state><state id="s27"><transition target="sX" action="epsilon" proba="0.25"></transition><transition target="s27" action="org.apache.commons.math.stat.inference.TestUtils.chiSquareTest(long[][],double)" proba="0.25"></transition><transition target="s16" action="org.apache.commons.math.stat.inference.TestUtils.chiSquare(long[][])" proba="0.5"></transition></state></states></ts>