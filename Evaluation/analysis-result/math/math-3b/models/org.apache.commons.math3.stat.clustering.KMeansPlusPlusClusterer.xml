<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s4" action="org.apache.commons.math3.stat.clustering.KMeansPlusPlusClusterer.cluster(java.util.Collection,int,int,int)" proba="0.25"></transition><transition target="s2" action="org.apache.commons.math3.stat.clustering.KMeansPlusPlusClusterer.cluster(java.util.Collection,int,int)" proba="0.75"></transition></state><state id="s4"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s0"><transition target="s3" action="org.apache.commons.math3.stat.clustering.KMeansPlusPlusClusterer.&lt;init&gt;(java.util.Random)" proba="0.8"></transition><transition target="s1" action="org.apache.commons.math3.stat.clustering.KMeansPlusPlusClusterer.&lt;init&gt;(java.util.Random,org.apache.commons.math3.stat.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy)" proba="0.2"></transition></state><state id="s1"><transition target="s2" action="org.apache.commons.math3.stat.clustering.KMeansPlusPlusClusterer.cluster(java.util.Collection,int,int)" proba="1.0"></transition></state><state id="s2"><transition target="sX" action="epsilon" proba="1.0"></transition></state></states></ts>