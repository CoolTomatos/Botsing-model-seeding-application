<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="java.lang.String.charAt(int)" proba="0.5"></transition><transition target="s7" action="java.lang.String.substring(int,int)" proba="0.045454545454545456"></transition><transition target="sX" action="epsilon" proba="0.2727272727272727"></transition><transition target="s16" action="java.lang.String.replaceFirst(java.lang.String,java.lang.String)" proba="0.09090909090909091"></transition><transition target="s2" action="java.lang.String.length()" proba="0.09090909090909091"></transition></state><state id="s4"><transition target="s4" action="java.lang.String.trim()" proba="0.05714285714285714"></transition><transition target="s11" action="java.lang.String.split(java.lang.String)" proba="0.11428571428571428"></transition><transition target="s22" action="java.lang.String.lastIndexOf(java.lang.String)" proba="0.02857142857142857"></transition><transition target="s10" action="java.lang.String.contains(java.lang.CharSequence)" proba="0.05714285714285714"></transition><transition target="sX" action="epsilon" proba="0.6285714285714286"></transition><transition target="s12" action="java.lang.String.replaceAll(java.lang.String,java.lang.String)" proba="0.05714285714285714"></transition><transition target="s15" action="java.lang.String.startsWith(java.lang.String)" proba="0.02857142857142857"></transition><transition target="s9" action="java.lang.String.substring(int)" proba="0.02857142857142857"></transition></state><state id="s5"><transition target="s5" action="java.lang.String.format(java.lang.String,java.lang.Object[])" proba="0.20512820512820512"></transition><transition target="sX" action="epsilon" proba="0.7948717948717948"></transition></state><state id="s6"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s7"><transition target="s4" action="java.lang.String.trim()" proba="0.1875"></transition><transition target="s13" action="java.lang.String.indexOf(java.lang.String)" proba="0.125"></transition><transition target="s8" action="java.lang.String.toUpperCase()" proba="0.0625"></transition><transition target="sX" action="epsilon" proba="0.5"></transition><transition target="s9" action="java.lang.String.substring(int)" proba="0.0625"></transition><transition target="s14" action="java.lang.String.compareTo(java.lang.String)" proba="0.0625"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="s9" action="java.lang.String.substring(int)" proba="1.0"></transition></state><state id="s9"><transition target="s4" action="java.lang.String.trim()" proba="0.42857142857142855"></transition><transition target="sX" action="epsilon" proba="0.5714285714285714"></transition></state><state id="s20"><transition target="s2" action="java.lang.String.length()" proba="1.0"></transition></state><state id="s11"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s22"><transition target="s9" action="java.lang.String.substring(int)" proba="1.0"></transition></state><state id="s10"><transition target="s11" action="java.lang.String.split(java.lang.String)" proba="0.21052631578947367"></transition><transition target="s10" action="java.lang.String.contains(java.lang.CharSequence)" proba="0.5263157894736842"></transition><transition target="s13" action="java.lang.String.indexOf(java.lang.String)" proba="0.21052631578947367"></transition><transition target="sX" action="epsilon" proba="0.05263157894736842"></transition></state><state id="s21"><transition target="s10" action="java.lang.String.contains(java.lang.CharSequence)" proba="1.0"></transition></state><state id="s13"><transition target="s3" action="java.lang.String.charAt(int)" proba="0.06666666666666667"></transition><transition target="s13" action="java.lang.String.indexOf(java.lang.String)" proba="0.4666666666666667"></transition><transition target="s7" action="java.lang.String.substring(int,int)" proba="0.4666666666666667"></transition></state><state id="s12"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s15"><transition target="s11" action="java.lang.String.split(java.lang.String)" proba="0.6666666666666666"></transition><transition target="s18" action="java.lang.String.indexOf(int)" proba="0.3333333333333333"></transition></state><state id="s14"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s17"><transition target="s9" action="java.lang.String.substring(int)" proba="1.0"></transition></state><state id="s16"><transition target="s4" action="java.lang.String.trim()" proba="1.0"></transition></state><state id="s19"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s18"><transition target="s7" action="java.lang.String.substring(int,int)" proba="1.0"></transition></state><state id="s0"><transition target="s3" action="java.lang.String.charAt(int)" proba="0.025210084033613446"></transition><transition target="s4" action="java.lang.String.trim()" proba="0.21008403361344538"></transition><transition target="s5" action="java.lang.String.format(java.lang.String,java.lang.Object[])" proba="0.2605042016806723"></transition><transition target="s6" action="java.lang.String.matches(java.lang.String)" proba="0.01680672268907563"></transition><transition target="s7" action="java.lang.String.substring(int,int)" proba="0.008403361344537815"></transition><transition target="s20" action="java.lang.String.endsWith(java.lang.String)" proba="0.008403361344537815"></transition><transition target="s11" action="java.lang.String.split(java.lang.String)" proba="0.01680672268907563"></transition><transition target="s22" action="java.lang.String.lastIndexOf(java.lang.String)" proba="0.008403361344537815"></transition><transition target="s10" action="java.lang.String.contains(java.lang.CharSequence)" proba="0.05042016806722689"></transition><transition target="s21" action="java.lang.String.toLowerCase()" proba="0.008403361344537815"></transition><transition target="s13" action="java.lang.String.indexOf(java.lang.String)" proba="0.008403361344537815"></transition><transition target="s15" action="java.lang.String.startsWith(java.lang.String)" proba="0.01680672268907563"></transition><transition target="s14" action="java.lang.String.compareTo(java.lang.String)" proba="0.01680672268907563"></transition><transition target="s17" action="java.lang.String.lastIndexOf(int)" proba="0.01680672268907563"></transition><transition target="s19" action="java.lang.String.valueOf(int)" proba="0.008403361344537815"></transition><transition target="s1" action="java.lang.String.equals(java.lang.Object)" proba="0.1092436974789916"></transition><transition target="s2" action="java.lang.String.length()" proba="0.21008403361344538"></transition></state><state id="s1"><transition target="s13" action="java.lang.String.indexOf(java.lang.String)" proba="0.045454545454545456"></transition><transition target="sX" action="epsilon" proba="0.5454545454545454"></transition><transition target="s1" action="java.lang.String.equals(java.lang.Object)" proba="0.4090909090909091"></transition></state><state id="s2"><transition target="s3" action="java.lang.String.charAt(int)" proba="0.19444444444444445"></transition><transition target="s7" action="java.lang.String.substring(int,int)" proba="0.16666666666666666"></transition><transition target="sX" action="epsilon" proba="0.4166666666666667"></transition><transition target="s2" action="java.lang.String.length()" proba="0.2222222222222222"></transition></state></states></ts>