<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s4"><transition target="s5" action="org.apache.commons.math3.geometry.partitioning.Hyperplane.getTree(boolean)" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.5"></transition></state><state id="s5"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s6"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s0"><transition target="s3" action="org.apache.commons.math3.geometry.partitioning.Hyperplane.copySelf()" proba="0.125"></transition><transition target="s4" action="org.apache.commons.math3.geometry.partitioning.Hyperplane.wholeSpace()" proba="0.25"></transition><transition target="s6" action="org.apache.commons.math3.geometry.partitioning.Hyperplane.wholeHyperplane()" proba="0.25"></transition><transition target="s1" action="org.apache.commons.math3.geometry.partitioning.Hyperplane.getOffset(org.apache.commons.math3.geometry.Vector)" proba="0.25"></transition><transition target="s2" action="org.apache.commons.math3.geometry.partitioning.Hyperplane.sameOrientationAs(org.apache.commons.math3.geometry.partitioning.Hyperplane)" proba="0.125"></transition></state><state id="s1"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s2"><transition target="sX" action="epsilon" proba="1.0"></transition></state></states></ts>