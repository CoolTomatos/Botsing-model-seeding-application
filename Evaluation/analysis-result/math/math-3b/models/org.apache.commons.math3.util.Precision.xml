<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="org.apache.commons.math3.util.Precision.equalsIncludingNaN(double,double)" proba="0.5348837209302325"></transition><transition target="s4" action="org.apache.commons.math3.util.Precision.equalsIncludingNaN(float,float)" proba="0.32558139534883723"></transition><transition target="sX" action="epsilon" proba="0.13953488372093023"></transition></state><state id="s4"><transition target="s3" action="org.apache.commons.math3.util.Precision.equalsIncludingNaN(double,double)" proba="0.5625"></transition><transition target="sX" action="epsilon" proba="0.4375"></transition></state><state id="s5"><transition target="s5" action="org.apache.commons.math3.util.Precision.equals(double,double,int)" proba="0.5714285714285714"></transition><transition target="sX" action="epsilon" proba="0.4142857142857143"></transition><transition target="s17" action="org.apache.commons.math3.util.Precision.equals(float,float,int)" proba="0.014285714285714285"></transition></state><state id="s6"><transition target="s6" action="org.apache.commons.math3.util.Precision.equals(double,double)" proba="0.5909090909090909"></transition><transition target="sX" action="epsilon" proba="0.3181818181818182"></transition><transition target="s2" action="org.apache.commons.math3.util.Precision.compareTo(double,double,double)" proba="0.09090909090909091"></transition></state><state id="s7"><transition target="s7" action="org.apache.commons.math3.util.Precision.equalsIncludingNaN(double,double,double)" proba="0.85"></transition><transition target="sX" action="epsilon" proba="0.15"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="s8" action="org.apache.commons.math3.util.Precision.equalsWithRelativeTolerance(double,double,double)" proba="0.9375"></transition><transition target="sX" action="epsilon" proba="0.0625"></transition></state><state id="s9"><transition target="s5" action="org.apache.commons.math3.util.Precision.equals(double,double,int)" proba="0.08"></transition><transition target="sX" action="epsilon" proba="0.08"></transition><transition target="s9" action="org.apache.commons.math3.util.Precision.compareTo(double,double,int)" proba="0.84"></transition></state><state id="s11"><transition target="s11" action="org.apache.commons.math3.util.Precision.round(float,int)" proba="0.8571428571428571"></transition><transition target="s12" action="org.apache.commons.math3.util.Precision.round(float,int,int)" proba="0.07142857142857142"></transition><transition target="sX" action="epsilon" proba="0.07142857142857142"></transition></state><state id="s10"><transition target="s10" action="org.apache.commons.math3.util.Precision.equalsIncludingNaN(double,double,int)" proba="0.9565217391304348"></transition><transition target="sX" action="epsilon" proba="0.043478260869565216"></transition></state><state id="s13"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s12"><transition target="s11" action="org.apache.commons.math3.util.Precision.round(float,int)" proba="0.018518518518518517"></transition><transition target="s12" action="org.apache.commons.math3.util.Precision.round(float,int,int)" proba="0.9814814814814815"></transition></state><state id="s15"><transition target="sX" action="epsilon" proba="0.05555555555555555"></transition><transition target="s15" action="org.apache.commons.math3.util.Precision.round(double,int)" proba="0.8333333333333334"></transition><transition target="s16" action="org.apache.commons.math3.util.Precision.round(double,int,int)" proba="0.1111111111111111"></transition></state><state id="s14"><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition><transition target="s17" action="org.apache.commons.math3.util.Precision.equals(float,float,int)" proba="0.6666666666666666"></transition></state><state id="s17"><transition target="s5" action="org.apache.commons.math3.util.Precision.equals(double,double,int)" proba="0.07692307692307693"></transition><transition target="sX" action="epsilon" proba="0.07692307692307693"></transition><transition target="s14" action="org.apache.commons.math3.util.Precision.equals(float,float)" proba="0.07692307692307693"></transition><transition target="s17" action="org.apache.commons.math3.util.Precision.equals(float,float,int)" proba="0.7692307692307693"></transition></state><state id="s16"><transition target="s15" action="org.apache.commons.math3.util.Precision.round(double,int)" proba="0.03571428571428571"></transition><transition target="s16" action="org.apache.commons.math3.util.Precision.round(double,int,int)" proba="0.9642857142857143"></transition></state><state id="s0"><transition target="s3" action="org.apache.commons.math3.util.Precision.equalsIncludingNaN(double,double)" proba="0.12087912087912088"></transition><transition target="s4" action="org.apache.commons.math3.util.Precision.equalsIncludingNaN(float,float)" proba="0.02197802197802198"></transition><transition target="s5" action="org.apache.commons.math3.util.Precision.equals(double,double,int)" proba="0.2967032967032967"></transition><transition target="s6" action="org.apache.commons.math3.util.Precision.equals(double,double)" proba="0.06593406593406594"></transition><transition target="s7" action="org.apache.commons.math3.util.Precision.equalsIncludingNaN(double,double,double)" proba="0.03296703296703297"></transition><transition target="s8" action="org.apache.commons.math3.util.Precision.equalsWithRelativeTolerance(double,double,double)" proba="0.01098901098901099"></transition><transition target="s9" action="org.apache.commons.math3.util.Precision.compareTo(double,double,int)" proba="0.04395604395604396"></transition><transition target="s11" action="org.apache.commons.math3.util.Precision.round(float,int)" proba="0.01098901098901099"></transition><transition target="s10" action="org.apache.commons.math3.util.Precision.equalsIncludingNaN(double,double,int)" proba="0.01098901098901099"></transition><transition target="s13" action="org.apache.commons.math3.util.Precision.representableDelta(double,double)" proba="0.01098901098901099"></transition><transition target="s15" action="org.apache.commons.math3.util.Precision.round(double,int)" proba="0.01098901098901099"></transition><transition target="s14" action="org.apache.commons.math3.util.Precision.equals(float,float)" proba="0.02197802197802198"></transition><transition target="s1" action="org.apache.commons.math3.util.Precision.equals(double,double,double)" proba="0.16483516483516483"></transition><transition target="s2" action="org.apache.commons.math3.util.Precision.compareTo(double,double,double)" proba="0.17582417582417584"></transition></state><state id="s1"><transition target="s6" action="org.apache.commons.math3.util.Precision.equals(double,double)" proba="0.03225806451612903"></transition><transition target="sX" action="epsilon" proba="0.3870967741935484"></transition><transition target="s1" action="org.apache.commons.math3.util.Precision.equals(double,double,double)" proba="0.5161290322580645"></transition><transition target="s2" action="org.apache.commons.math3.util.Precision.compareTo(double,double,double)" proba="0.06451612903225806"></transition></state><state id="s2"><transition target="s6" action="org.apache.commons.math3.util.Precision.equals(double,double)" proba="0.05714285714285714"></transition><transition target="sX" action="epsilon" proba="0.5142857142857142"></transition><transition target="s2" action="org.apache.commons.math3.util.Precision.compareTo(double,double,double)" proba="0.42857142857142855"></transition></state></states></ts>