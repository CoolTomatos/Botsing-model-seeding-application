<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="sX" action="epsilon" proba="0.16666666666666666"></transition><transition target="s2" action="org.apache.commons.math3.analysis.function.Logit.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)" proba="0.8333333333333334"></transition></state><state id="s4"><transition target="s4" action="org.apache.commons.math3.analysis.function.Logit.value(double)" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.5"></transition></state><state id="s5"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s0"><transition target="s5" action="org.apache.commons.math3.analysis.function.Logit.access$000(double,double,double)" proba="0.1111111111111111"></transition><transition target="s1" action="org.apache.commons.math3.analysis.function.Logit.&lt;init&gt;(double,double)" proba="0.8888888888888888"></transition></state><state id="s1"><transition target="s4" action="org.apache.commons.math3.analysis.function.Logit.value(double)" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.125"></transition><transition target="s2" action="org.apache.commons.math3.analysis.function.Logit.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)" proba="0.375"></transition></state><state id="s2"><transition target="s3" action="org.apache.commons.math3.analysis.function.Logit.getPartialDerivative(int[])" proba="0.75"></transition><transition target="sX" action="epsilon" proba="0.25"></transition></state></states></ts>