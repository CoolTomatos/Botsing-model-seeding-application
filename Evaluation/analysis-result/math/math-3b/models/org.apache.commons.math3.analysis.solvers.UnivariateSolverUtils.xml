<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s4"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s5"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s6"><transition target="s6" action="org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils.midpoint(double,double)" proba="0.25"></transition><transition target="sX" action="epsilon" proba="0.75"></transition></state><state id="s7"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s9"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s11"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s10"><transition target="s10" action="org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils.forceSide(int,org.apache.commons.math3.analysis.UnivariateFunction,org.apache.commons.math3.analysis.solvers.BracketedUnivariateSolver,double,double,double,org.apache.commons.math3.analysis.solvers.AllowedSolution)" proba="0.3333333333333333"></transition><transition target="sX" action="epsilon" proba="0.6666666666666666"></transition></state><state id="s0"><transition target="s3" action="org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils.isSequence(double,double,double)" proba="0.038461538461538464"></transition><transition target="s4" action="org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils.verifyInterval(double,double)" proba="0.07692307692307693"></transition><transition target="s5" action="org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils.verifyBracketing(org.apache.commons.math3.analysis.UnivariateFunction,double,double)" proba="0.038461538461538464"></transition><transition target="s11" action="org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils.verifySequence(double,double,double)" proba="0.038461538461538464"></transition><transition target="s6" action="org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils.midpoint(double,double)" proba="0.11538461538461539"></transition><transition target="s10" action="org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils.forceSide(int,org.apache.commons.math3.analysis.UnivariateFunction,org.apache.commons.math3.analysis.solvers.BracketedUnivariateSolver,double,double,double,org.apache.commons.math3.analysis.solvers.AllowedSolution)" proba="0.07692307692307693"></transition><transition target="s7" action="org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils.bracket(org.apache.commons.math3.analysis.UnivariateFunction,double,double,double,int)" proba="0.038461538461538464"></transition><transition target="s8" action="org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils.isBracketing(org.apache.commons.math3.analysis.UnivariateFunction,double,double)" proba="0.038461538461538464"></transition><transition target="s9" action="org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils.bracket(org.apache.commons.math3.analysis.UnivariateFunction,double,double,double)" proba="0.19230769230769232"></transition><transition target="s1" action="org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils.solve(org.apache.commons.math3.analysis.UnivariateFunction,double,double,double)" proba="0.19230769230769232"></transition><transition target="s2" action="org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils.solve(org.apache.commons.math3.analysis.UnivariateFunction,double,double)" proba="0.15384615384615385"></transition></state><state id="s1"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s2"><transition target="sX" action="epsilon" proba="0.2857142857142857"></transition><transition target="s2" action="org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils.solve(org.apache.commons.math3.analysis.UnivariateFunction,double,double)" proba="0.7142857142857143"></transition></state></states></ts>