<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s5" action="org.apache.commons.math3.optimization.univariate.BrentOptimizer.getEvaluations()" proba="0.45454545454545453"></transition><transition target="sX" action="epsilon" proba="0.18181818181818182"></transition><transition target="s2" action="org.apache.commons.math3.optimization.univariate.BrentOptimizer.optimize(int,org.apache.commons.math3.analysis.UnivariateFunction,org.apache.commons.math3.optimization.GoalType,double,double)" proba="0.36363636363636365"></transition></state><state id="s4"><transition target="s2" action="org.apache.commons.math3.optimization.univariate.BrentOptimizer.optimize(int,org.apache.commons.math3.analysis.UnivariateFunction,org.apache.commons.math3.optimization.GoalType,double,double)" proba="1.0"></transition></state><state id="s5"><transition target="s5" action="org.apache.commons.math3.optimization.univariate.BrentOptimizer.getEvaluations()" proba="0.16666666666666666"></transition><transition target="s6" action="org.apache.commons.math3.optimization.univariate.BrentOptimizer.getMaxEvaluations()" proba="0.16666666666666666"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition><transition target="s2" action="org.apache.commons.math3.optimization.univariate.BrentOptimizer.optimize(int,org.apache.commons.math3.analysis.UnivariateFunction,org.apache.commons.math3.optimization.GoalType,double,double)" proba="0.3333333333333333"></transition></state><state id="s6"><transition target="s2" action="org.apache.commons.math3.optimization.univariate.BrentOptimizer.optimize(int,org.apache.commons.math3.analysis.UnivariateFunction,org.apache.commons.math3.optimization.GoalType,double,double)" proba="1.0"></transition></state><state id="s7"><transition target="s3" action="org.apache.commons.math3.optimization.univariate.BrentOptimizer.getPoint()" proba="1.0"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s0"><transition target="s4" action="org.apache.commons.math3.optimization.univariate.BrentOptimizer.&lt;init&gt;(double,double,org.apache.commons.math3.optimization.ConvergenceChecker)" proba="0.1"></transition><transition target="s1" action="org.apache.commons.math3.optimization.univariate.BrentOptimizer.&lt;init&gt;(double,double)" proba="0.9"></transition></state><state id="s1"><transition target="s7" action="org.apache.commons.math3.optimization.univariate.BrentOptimizer.optimize(int,org.apache.commons.math3.analysis.UnivariateFunction,org.apache.commons.math3.optimization.GoalType,double,double,double)" proba="0.1111111111111111"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition><transition target="s2" action="org.apache.commons.math3.optimization.univariate.BrentOptimizer.optimize(int,org.apache.commons.math3.analysis.UnivariateFunction,org.apache.commons.math3.optimization.GoalType,double,double)" proba="0.5555555555555556"></transition></state><state id="s2"><transition target="s3" action="org.apache.commons.math3.optimization.univariate.BrentOptimizer.getPoint()" proba="0.7692307692307693"></transition><transition target="sX" action="epsilon" proba="0.23076923076923078"></transition></state></states></ts>