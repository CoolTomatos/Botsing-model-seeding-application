<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s4" action="org.apache.commons.math3.filter.KalmanFilter.getErrorCovariance()" proba="1.0"></transition></state><state id="s4"><transition target="s5" action="org.apache.commons.math3.filter.KalmanFilter.getStateEstimation()" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.5"></transition></state><state id="s5"><transition target="s4" action="org.apache.commons.math3.filter.KalmanFilter.getErrorCovariance()" proba="0.5"></transition><transition target="s6" action="org.apache.commons.math3.filter.KalmanFilter.predict()" proba="0.25"></transition><transition target="s8" action="org.apache.commons.math3.filter.KalmanFilter.predict(org.apache.commons.math3.linear.RealVector)" proba="0.25"></transition></state><state id="s6"><transition target="s7" action="org.apache.commons.math3.filter.KalmanFilter.correct(org.apache.commons.math3.linear.RealVector)" proba="1.0"></transition></state><state id="s7"><transition target="s5" action="org.apache.commons.math3.filter.KalmanFilter.getStateEstimation()" proba="1.0"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="s7" action="org.apache.commons.math3.filter.KalmanFilter.correct(org.apache.commons.math3.linear.RealVector)" proba="1.0"></transition></state><state id="s0"><transition target="s1" action="org.apache.commons.math3.filter.KalmanFilter.&lt;init&gt;(org.apache.commons.math3.filter.ProcessModel,org.apache.commons.math3.filter.MeasurementModel)" proba="1.0"></transition></state><state id="s1"><transition target="s2" action="org.apache.commons.math3.filter.KalmanFilter.getMeasurementDimension()" proba="1.0"></transition></state><state id="s2"><transition target="s3" action="org.apache.commons.math3.filter.KalmanFilter.getStateDimension()" proba="1.0"></transition></state></states></ts>