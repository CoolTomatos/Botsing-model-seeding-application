<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="sX" action="epsilon" proba="0.9285714285714286"></transition><transition target="s1" action="org.apache.commons.math3.stat.regression.MillerUpdatingRegression.&lt;init&gt;(int,boolean)" proba="0.07142857142857142"></transition></state><state id="s4"><transition target="s3" action="org.apache.commons.math3.stat.regression.MillerUpdatingRegression.regress()" proba="0.5"></transition><transition target="s4" action="org.apache.commons.math3.stat.regression.MillerUpdatingRegression.addObservations(double[][],double[])" proba="0.07142857142857142"></transition><transition target="s5" action="org.apache.commons.math3.stat.regression.MillerUpdatingRegression.getDiagonalOfHatMatrix(double[])" proba="0.14285714285714285"></transition><transition target="s6" action="org.apache.commons.math3.stat.regression.MillerUpdatingRegression.regress(int[])" proba="0.07142857142857142"></transition><transition target="s10" action="org.apache.commons.math3.stat.regression.MillerUpdatingRegression.getPartialCorrelations(int)" proba="0.07142857142857142"></transition><transition target="sX" action="epsilon" proba="0.07142857142857142"></transition><transition target="s8" action="org.apache.commons.math3.stat.regression.MillerUpdatingRegression.getN()" proba="0.07142857142857142"></transition></state><state id="s5"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s6"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s10"><transition target="s10" action="org.apache.commons.math3.stat.regression.MillerUpdatingRegression.getPartialCorrelations(int)" proba="0.6666666666666666"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition></state><state id="s7"><transition target="sX" action="epsilon" proba="0.5"></transition><transition target="s1" action="org.apache.commons.math3.stat.regression.MillerUpdatingRegression.&lt;init&gt;(int,boolean)" proba="0.5"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="sX" action="epsilon" proba="0.5"></transition><transition target="s9" action="org.apache.commons.math3.stat.regression.MillerUpdatingRegression.clear()" proba="0.5"></transition></state><state id="s9"><transition target="s2" action="org.apache.commons.math3.stat.regression.MillerUpdatingRegression.addObservation(double[],double)" proba="1.0"></transition></state><state id="s0"><transition target="s1" action="org.apache.commons.math3.stat.regression.MillerUpdatingRegression.&lt;init&gt;(int,boolean)" proba="1.0"></transition></state><state id="s1"><transition target="s4" action="org.apache.commons.math3.stat.regression.MillerUpdatingRegression.addObservations(double[][],double[])" proba="0.5416666666666666"></transition><transition target="s7" action="org.apache.commons.math3.stat.regression.MillerUpdatingRegression.hasIntercept()" proba="0.08333333333333333"></transition><transition target="s2" action="org.apache.commons.math3.stat.regression.MillerUpdatingRegression.addObservation(double[],double)" proba="0.375"></transition></state><state id="s2"><transition target="s3" action="org.apache.commons.math3.stat.regression.MillerUpdatingRegression.regress()" proba="0.5"></transition><transition target="s8" action="org.apache.commons.math3.stat.regression.MillerUpdatingRegression.getN()" proba="0.07142857142857142"></transition><transition target="sX" action="epsilon" proba="0.07142857142857142"></transition><transition target="s1" action="org.apache.commons.math3.stat.regression.MillerUpdatingRegression.&lt;init&gt;(int,boolean)" proba="0.07142857142857142"></transition><transition target="s2" action="org.apache.commons.math3.stat.regression.MillerUpdatingRegression.addObservation(double[],double)" proba="0.2857142857142857"></transition></state></states></ts>