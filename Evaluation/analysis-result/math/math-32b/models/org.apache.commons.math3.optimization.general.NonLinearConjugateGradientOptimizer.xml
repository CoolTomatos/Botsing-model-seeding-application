<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s4"><transition target="s2" action="org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer.optimize(int,org.apache.commons.math3.analysis.DifferentiableMultivariateFunction,org.apache.commons.math3.optimization.GoalType,double[])" proba="1.0"></transition></state><state id="s5"><transition target="s2" action="org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer.optimize(int,org.apache.commons.math3.analysis.DifferentiableMultivariateFunction,org.apache.commons.math3.optimization.GoalType,double[])" proba="1.0"></transition></state><state id="s6"><transition target="s7" action="org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer.clone()" proba="1.0"></transition></state><state id="s7"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s0"><transition target="s3" action="org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer.computeObjectiveGradient(double[])" proba="0.06666666666666667"></transition><transition target="s4" action="org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer.&lt;init&gt;(org.apache.commons.math3.optimization.general.ConjugateGradientFormula,org.apache.commons.math3.optimization.ConvergenceChecker,org.apache.commons.math3.analysis.solvers.UnivariateSolver,org.apache.commons.math3.optimization.general.Preconditioner)" proba="0.06666666666666667"></transition><transition target="s5" action="org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer.&lt;init&gt;(org.apache.commons.math3.optimization.general.ConjugateGradientFormula,org.apache.commons.math3.optimization.ConvergenceChecker,org.apache.commons.math3.analysis.solvers.UnivariateSolver)" proba="0.13333333333333333"></transition><transition target="s6" action="org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer.access$000(org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer)" proba="0.06666666666666667"></transition><transition target="s1" action="org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer.&lt;init&gt;(org.apache.commons.math3.optimization.general.ConjugateGradientFormula,org.apache.commons.math3.optimization.ConvergenceChecker)" proba="0.6666666666666666"></transition></state><state id="s1"><transition target="sX" action="epsilon" proba="0.1"></transition><transition target="s2" action="org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer.optimize(int,org.apache.commons.math3.analysis.DifferentiableMultivariateFunction,org.apache.commons.math3.optimization.GoalType,double[])" proba="0.9"></transition></state><state id="s2"><transition target="sX" action="epsilon" proba="0.9230769230769231"></transition><transition target="s2" action="org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer.optimize(int,org.apache.commons.math3.analysis.DifferentiableMultivariateFunction,org.apache.commons.math3.optimization.GoalType,double[])" proba="0.07692307692307693"></transition></state></states></ts>