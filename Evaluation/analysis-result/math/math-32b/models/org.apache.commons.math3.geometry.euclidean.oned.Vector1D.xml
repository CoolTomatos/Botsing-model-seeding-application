<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s4" action="org.apache.commons.math3.geometry.euclidean.oned.Vector1D.wholeHyperplane()" proba="1.0"></transition></state><state id="s4"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s0"><transition target="s3" action="org.apache.commons.math3.geometry.euclidean.oned.Vector1D.&lt;init&gt;(org.apache.commons.math3.geometry.euclidean.oned.Vector1D,boolean)" proba="0.007751937984496124"></transition><transition target="s1" action="org.apache.commons.math3.geometry.euclidean.oned.Vector1D.&lt;init&gt;(double)" proba="0.9844961240310077"></transition><transition target="s2" action="org.apache.commons.math3.geometry.euclidean.oned.Vector1D.getX()" proba="0.007751937984496124"></transition></state><state id="s1"><transition target="sX" action="epsilon" proba="0.5118110236220472"></transition><transition target="s2" action="org.apache.commons.math3.geometry.euclidean.oned.Vector1D.getX()" proba="0.4881889763779528"></transition></state><state id="s2"><transition target="sX" action="epsilon" proba="1.0"></transition></state></states></ts>