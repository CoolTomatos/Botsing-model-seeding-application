<?xml version="1.0"?><ts><start>s0</start><states><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s11"><transition target="s20" action="org.apache.commons.math3.fraction.Fraction.getRowDimension()" proba="0.11764705882352941"></transition><transition target="s11" action="org.apache.commons.math3.fraction.Fraction.add(org.apache.commons.math3.fraction.Fraction)" proba="0.11764705882352941"></transition><transition target="s12" action="org.apache.commons.math3.fraction.Fraction.toString()" proba="0.11764705882352941"></transition><transition target="sX" action="epsilon" proba="0.17647058823529413"></transition><transition target="s9" action="org.apache.commons.math3.fraction.Fraction.getNumerator()" proba="0.058823529411764705"></transition><transition target="s28" action="org.apache.commons.math3.fraction.Fraction.add(int)" proba="0.058823529411764705"></transition><transition target="s1" action="org.apache.commons.math3.fraction.Fraction.&lt;init&gt;(int,int)" proba="0.35294117647058826"></transition></state><state id="s10"><transition target="s3" action="org.apache.commons.math3.fraction.Fraction.divide(org.apache.commons.math3.fraction.Fraction)" proba="0.025"></transition><transition target="s11" action="org.apache.commons.math3.fraction.Fraction.add(org.apache.commons.math3.fraction.Fraction)" proba="0.025"></transition><transition target="s10" action="org.apache.commons.math3.fraction.Fraction.getDenominator()" proba="0.025"></transition><transition target="s6" action="org.apache.commons.math3.fraction.Fraction.doubleValue()" proba="0.025"></transition><transition target="sX" action="epsilon" proba="0.325"></transition><transition target="s12" action="org.apache.commons.math3.fraction.Fraction.toString()" proba="0.025"></transition><transition target="s9" action="org.apache.commons.math3.fraction.Fraction.getNumerator()" proba="0.35"></transition><transition target="s27" action="org.apache.commons.math3.fraction.Fraction.getMessage()" proba="0.025"></transition><transition target="s19" action="org.apache.commons.math3.fraction.Fraction.multiply(org.apache.commons.math3.fraction.Fraction)" proba="0.025"></transition><transition target="s1" action="org.apache.commons.math3.fraction.Fraction.&lt;init&gt;(int,int)" proba="0.15"></transition></state><state id="s13"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s12"><transition target="s12" action="org.apache.commons.math3.fraction.Fraction.toString()" proba="0.2"></transition><transition target="sX" action="epsilon" proba="0.4"></transition><transition target="s1" action="org.apache.commons.math3.fraction.Fraction.&lt;init&gt;(int,int)" proba="0.4"></transition></state><state id="s15"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s14"><transition target="sX" action="epsilon" proba="0.4"></transition><transition target="s9" action="org.apache.commons.math3.fraction.Fraction.getNumerator()" proba="0.6"></transition></state><state id="s17"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s16"><transition target="sX" action="epsilon" proba="0.5"></transition><transition target="s18" action="org.apache.commons.math3.fraction.Fraction.equals(java.lang.Object)" proba="0.5"></transition></state><state id="s19"><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition><transition target="s9" action="org.apache.commons.math3.fraction.Fraction.getNumerator()" proba="0.16666666666666666"></transition><transition target="s19" action="org.apache.commons.math3.fraction.Fraction.multiply(org.apache.commons.math3.fraction.Fraction)" proba="0.3333333333333333"></transition><transition target="s1" action="org.apache.commons.math3.fraction.Fraction.&lt;init&gt;(int,int)" proba="0.16666666666666666"></transition></state><state id="s18"><transition target="sX" action="epsilon" proba="0.4166666666666667"></transition><transition target="s16" action="org.apache.commons.math3.fraction.Fraction.hashCode()" proba="0.08333333333333333"></transition><transition target="s18" action="org.apache.commons.math3.fraction.Fraction.equals(java.lang.Object)" proba="0.5"></transition></state><state id="s0"><transition target="s11" action="org.apache.commons.math3.fraction.Fraction.add(org.apache.commons.math3.fraction.Fraction)" proba="0.02631578947368421"></transition><transition target="s6" action="org.apache.commons.math3.fraction.Fraction.doubleValue()" proba="0.09210526315789473"></transition><transition target="s13" action="org.apache.commons.math3.fraction.Fraction.&lt;init&gt;(int)" proba="0.05263157894736842"></transition><transition target="s9" action="org.apache.commons.math3.fraction.Fraction.getNumerator()" proba="0.19736842105263158"></transition><transition target="s26" action="org.apache.commons.math3.fraction.Fraction.getReducedFraction(int,int)" proba="0.013157894736842105"></transition><transition target="s14" action="org.apache.commons.math3.fraction.Fraction.negate()" proba="0.013157894736842105"></transition><transition target="s18" action="org.apache.commons.math3.fraction.Fraction.equals(java.lang.Object)" proba="0.02631578947368421"></transition><transition target="s1" action="org.apache.commons.math3.fraction.Fraction.&lt;init&gt;(int,int)" proba="0.5789473684210527"></transition></state><state id="s1"><transition target="s3" action="org.apache.commons.math3.fraction.Fraction.divide(org.apache.commons.math3.fraction.Fraction)" proba="0.08536585365853659"></transition><transition target="s4" action="org.apache.commons.math3.fraction.Fraction.reciprocal()" proba="0.08536585365853659"></transition><transition target="s5" action="org.apache.commons.math3.fraction.Fraction.divide(int)" proba="0.012195121951219513"></transition><transition target="s6" action="org.apache.commons.math3.fraction.Fraction.doubleValue()" proba="0.024390243902439025"></transition><transition target="s7" action="org.apache.commons.math3.fraction.Fraction.subtract(org.apache.commons.math3.fraction.Fraction)" proba="0.13414634146341464"></transition><transition target="sX" action="epsilon" proba="0.12195121951219512"></transition><transition target="s11" action="org.apache.commons.math3.fraction.Fraction.add(org.apache.commons.math3.fraction.Fraction)" proba="0.13414634146341464"></transition><transition target="s24" action="org.apache.commons.math3.fraction.Fraction.floatValue()" proba="0.024390243902439025"></transition><transition target="s23" action="org.apache.commons.math3.fraction.Fraction.compareTo(org.apache.commons.math3.fraction.Fraction)" proba="0.04878048780487805"></transition><transition target="s15" action="org.apache.commons.math3.fraction.Fraction.intValue()" proba="0.024390243902439025"></transition><transition target="s14" action="org.apache.commons.math3.fraction.Fraction.negate()" proba="0.04878048780487805"></transition><transition target="s25" action="org.apache.commons.math3.fraction.Fraction.multiply(int)" proba="0.012195121951219513"></transition><transition target="s17" action="org.apache.commons.math3.fraction.Fraction.longValue()" proba="0.024390243902439025"></transition><transition target="s16" action="org.apache.commons.math3.fraction.Fraction.hashCode()" proba="0.012195121951219513"></transition><transition target="s19" action="org.apache.commons.math3.fraction.Fraction.multiply(org.apache.commons.math3.fraction.Fraction)" proba="0.036585365853658534"></transition><transition target="s18" action="org.apache.commons.math3.fraction.Fraction.equals(java.lang.Object)" proba="0.036585365853658534"></transition><transition target="s1" action="org.apache.commons.math3.fraction.Fraction.&lt;init&gt;(int,int)" proba="0.0975609756097561"></transition><transition target="s2" action="org.apache.commons.math3.fraction.Fraction.abs()" proba="0.036585365853658534"></transition></state><state id="s2"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s3"><transition target="s3" action="org.apache.commons.math3.fraction.Fraction.divide(org.apache.commons.math3.fraction.Fraction)" proba="0.16666666666666666"></transition><transition target="sX" action="epsilon" proba="0.16666666666666666"></transition><transition target="s9" action="org.apache.commons.math3.fraction.Fraction.getNumerator()" proba="0.08333333333333333"></transition><transition target="s1" action="org.apache.commons.math3.fraction.Fraction.&lt;init&gt;(int,int)" proba="0.5833333333333334"></transition></state><state id="s4"><transition target="s3" action="org.apache.commons.math3.fraction.Fraction.divide(org.apache.commons.math3.fraction.Fraction)" proba="0.2857142857142857"></transition><transition target="s9" action="org.apache.commons.math3.fraction.Fraction.getNumerator()" proba="0.5714285714285714"></transition><transition target="s1" action="org.apache.commons.math3.fraction.Fraction.&lt;init&gt;(int,int)" proba="0.14285714285714285"></transition></state><state id="s5"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s6"><transition target="s6" action="org.apache.commons.math3.fraction.Fraction.doubleValue()" proba="0.25"></transition><transition target="sX" action="epsilon" proba="0.75"></transition></state><state id="s7"><transition target="s7" action="org.apache.commons.math3.fraction.Fraction.subtract(org.apache.commons.math3.fraction.Fraction)" proba="0.15384615384615385"></transition><transition target="s8" action="org.apache.commons.math3.fraction.Fraction.subtract(int)" proba="0.07692307692307693"></transition><transition target="sX" action="epsilon" proba="0.23076923076923078"></transition><transition target="s12" action="org.apache.commons.math3.fraction.Fraction.toString()" proba="0.07692307692307693"></transition><transition target="s9" action="org.apache.commons.math3.fraction.Fraction.getNumerator()" proba="0.07692307692307693"></transition><transition target="s1" action="org.apache.commons.math3.fraction.Fraction.&lt;init&gt;(int,int)" proba="0.38461538461538464"></transition></state><state id="s8"><transition target="s1" action="org.apache.commons.math3.fraction.Fraction.&lt;init&gt;(int,int)" proba="1.0"></transition></state><state id="s9"><transition target="s11" action="org.apache.commons.math3.fraction.Fraction.add(org.apache.commons.math3.fraction.Fraction)" proba="0.023809523809523808"></transition><transition target="s10" action="org.apache.commons.math3.fraction.Fraction.getDenominator()" proba="0.9285714285714286"></transition><transition target="sX" action="epsilon" proba="0.023809523809523808"></transition><transition target="s26" action="org.apache.commons.math3.fraction.Fraction.getReducedFraction(int,int)" proba="0.023809523809523808"></transition></state><state id="s20"><transition target="s21" action="org.apache.commons.math3.fraction.Fraction.getColumnDimension()" proba="1.0"></transition></state><state id="s22"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s21"><transition target="s22" action="org.apache.commons.math3.fraction.Fraction.getEntry(int,int)" proba="1.0"></transition></state><state id="s24"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s23"><transition target="s6" action="org.apache.commons.math3.fraction.Fraction.doubleValue()" proba="0.3333333333333333"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition><transition target="s23" action="org.apache.commons.math3.fraction.Fraction.compareTo(org.apache.commons.math3.fraction.Fraction)" proba="0.3333333333333333"></transition></state><state id="s26"><transition target="s26" action="org.apache.commons.math3.fraction.Fraction.getReducedFraction(int,int)" proba="0.6"></transition><transition target="s9" action="org.apache.commons.math3.fraction.Fraction.getNumerator()" proba="0.4"></transition></state><state id="s25"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s28"><transition target="s1" action="org.apache.commons.math3.fraction.Fraction.&lt;init&gt;(int,int)" proba="1.0"></transition></state><state id="s27"><transition target="sX" action="epsilon" proba="1.0"></transition></state></states></ts>