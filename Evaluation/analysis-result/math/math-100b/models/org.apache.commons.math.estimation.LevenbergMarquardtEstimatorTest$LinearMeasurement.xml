<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s4" action="org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest$LinearMeasurement.getPartial(org.apache.commons.math.estimation.EstimatedParameter)" proba="1.0"></transition></state><state id="s4"><transition target="s3" action="org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest$LinearMeasurement.getResidual()" proba="0.875"></transition><transition target="sX" action="epsilon" proba="0.125"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s0"><transition target="s1" action="org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest$LinearMeasurement.getParameters()" proba="0.08333333333333333"></transition><transition target="s2" action="org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest$LinearMeasurement.&lt;init&gt;(double[],org.apache.commons.math.estimation.EstimatedParameter[],double)" proba="0.9166666666666666"></transition></state><state id="s1"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s2"><transition target="s3" action="org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest$LinearMeasurement.getResidual()" proba="0.022727272727272728"></transition><transition target="sX" action="epsilon" proba="0.22727272727272727"></transition><transition target="s2" action="org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest$LinearMeasurement.&lt;init&gt;(double[],org.apache.commons.math.estimation.EstimatedParameter[],double)" proba="0.75"></transition></state></states></ts>