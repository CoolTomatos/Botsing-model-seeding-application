<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="org.junit.Assert.assertTrue(boolean)" proba="0.5155555555555555"></transition><transition target="s4" action="org.junit.Assert.fail(java.lang.String)" proba="0.0044444444444444444"></transition><transition target="sX" action="epsilon" proba="0.3466666666666667"></transition><transition target="s8" action="org.junit.Assert.assertFalse(boolean)" proba="0.017777777777777778"></transition><transition target="s1" action="org.junit.Assert.assertEquals(double,double,double)" proba="0.08444444444444445"></transition><transition target="s2" action="org.junit.Assert.assertEquals(long,long)" proba="0.03111111111111111"></transition></state><state id="s4"><transition target="s4" action="org.junit.Assert.fail(java.lang.String)" proba="0.7627118644067796"></transition><transition target="s11" action="org.junit.Assert.assertNotNull(java.lang.Object)" proba="0.01694915254237288"></transition><transition target="s6" action="org.junit.Assert.assertEquals(java.lang.String,long,long)" proba="0.00847457627118644"></transition><transition target="sX" action="epsilon" proba="0.17796610169491525"></transition><transition target="s12" action="org.junit.Assert.assertNull(java.lang.Object)" proba="0.01694915254237288"></transition><transition target="s1" action="org.junit.Assert.assertEquals(double,double,double)" proba="0.00847457627118644"></transition><transition target="s2" action="org.junit.Assert.assertEquals(long,long)" proba="0.00847457627118644"></transition></state><state id="s5"><transition target="s3" action="org.junit.Assert.assertTrue(boolean)" proba="0.021739130434782608"></transition><transition target="s4" action="org.junit.Assert.fail(java.lang.String)" proba="0.010869565217391304"></transition><transition target="s5" action="org.junit.Assert.assertEquals(java.lang.Object,java.lang.Object)" proba="0.5978260869565217"></transition><transition target="s13" action="org.junit.Assert.assertArrayEquals(java.lang.Object[],java.lang.Object[])" proba="0.010869565217391304"></transition><transition target="sX" action="epsilon" proba="0.29347826086956524"></transition><transition target="s8" action="org.junit.Assert.assertFalse(boolean)" proba="0.021739130434782608"></transition><transition target="s1" action="org.junit.Assert.assertEquals(double,double,double)" proba="0.010869565217391304"></transition><transition target="s2" action="org.junit.Assert.assertEquals(long,long)" proba="0.03260869565217391"></transition></state><state id="s6"><transition target="s4" action="org.junit.Assert.fail(java.lang.String)" proba="0.030303030303030304"></transition><transition target="s6" action="org.junit.Assert.assertEquals(java.lang.String,long,long)" proba="0.8484848484848485"></transition><transition target="s10" action="org.junit.Assert.assertEquals(java.lang.String,double,double,double)" proba="0.030303030303030304"></transition><transition target="sX" action="epsilon" proba="0.09090909090909091"></transition></state><state id="s7"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="s3" action="org.junit.Assert.assertTrue(boolean)" proba="0.23076923076923078"></transition><transition target="s5" action="org.junit.Assert.assertEquals(java.lang.Object,java.lang.Object)" proba="0.07692307692307693"></transition><transition target="sX" action="epsilon" proba="0.3076923076923077"></transition><transition target="s8" action="org.junit.Assert.assertFalse(boolean)" proba="0.38461538461538464"></transition></state><state id="s9"><transition target="sX" action="epsilon" proba="0.1111111111111111"></transition><transition target="s9" action="org.junit.Assert.assertEquals(java.lang.String,java.lang.Object,java.lang.Object)" proba="0.8888888888888888"></transition></state><state id="s11"><transition target="s4" action="org.junit.Assert.fail(java.lang.String)" proba="0.6666666666666666"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition></state><state id="s10"><transition target="s10" action="org.junit.Assert.assertEquals(java.lang.String,double,double,double)" proba="0.6666666666666666"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition></state><state id="s13"><transition target="s5" action="org.junit.Assert.assertEquals(java.lang.Object,java.lang.Object)" proba="1.0"></transition></state><state id="s12"><transition target="s4" action="org.junit.Assert.fail(java.lang.String)" proba="0.6666666666666666"></transition><transition target="s5" action="org.junit.Assert.assertEquals(java.lang.Object,java.lang.Object)" proba="0.3333333333333333"></transition></state><state id="s0"><transition target="s3" action="org.junit.Assert.assertTrue(boolean)" proba="0.18688524590163935"></transition><transition target="s4" action="org.junit.Assert.fail(java.lang.String)" proba="0.06229508196721312"></transition><transition target="s5" action="org.junit.Assert.assertEquals(java.lang.Object,java.lang.Object)" proba="0.09836065573770492"></transition><transition target="s6" action="org.junit.Assert.assertEquals(java.lang.String,long,long)" proba="0.013114754098360656"></transition><transition target="s7" action="org.junit.Assert.assertTrue(java.lang.String,boolean)" proba="0.06229508196721312"></transition><transition target="s8" action="org.junit.Assert.assertFalse(boolean)" proba="0.003278688524590164"></transition><transition target="s9" action="org.junit.Assert.assertEquals(java.lang.String,java.lang.Object,java.lang.Object)" proba="0.003278688524590164"></transition><transition target="s11" action="org.junit.Assert.assertNotNull(java.lang.Object)" proba="0.003278688524590164"></transition><transition target="s10" action="org.junit.Assert.assertEquals(java.lang.String,double,double,double)" proba="0.05901639344262295"></transition><transition target="s13" action="org.junit.Assert.assertArrayEquals(java.lang.Object[],java.lang.Object[])" proba="0.003278688524590164"></transition><transition target="s12" action="org.junit.Assert.assertNull(java.lang.Object)" proba="0.003278688524590164"></transition><transition target="s1" action="org.junit.Assert.assertEquals(double,double,double)" proba="0.35737704918032787"></transition><transition target="s2" action="org.junit.Assert.assertEquals(long,long)" proba="0.14426229508196722"></transition></state><state id="s1"><transition target="s3" action="org.junit.Assert.assertTrue(boolean)" proba="0.08985507246376812"></transition><transition target="s4" action="org.junit.Assert.fail(java.lang.String)" proba="0.002898550724637681"></transition><transition target="s5" action="org.junit.Assert.assertEquals(java.lang.Object,java.lang.Object)" proba="0.005797101449275362"></transition><transition target="sX" action="epsilon" proba="0.2927536231884058"></transition><transition target="s1" action="org.junit.Assert.assertEquals(double,double,double)" proba="0.6"></transition><transition target="s2" action="org.junit.Assert.assertEquals(long,long)" proba="0.008695652173913044"></transition></state><state id="s2"><transition target="s3" action="org.junit.Assert.assertTrue(boolean)" proba="0.16326530612244897"></transition><transition target="s4" action="org.junit.Assert.fail(java.lang.String)" proba="0.01020408163265306"></transition><transition target="s5" action="org.junit.Assert.assertEquals(java.lang.Object,java.lang.Object)" proba="0.01020408163265306"></transition><transition target="sX" action="epsilon" proba="0.3163265306122449"></transition><transition target="s8" action="org.junit.Assert.assertFalse(boolean)" proba="0.01020408163265306"></transition><transition target="s1" action="org.junit.Assert.assertEquals(double,double,double)" proba="0.08163265306122448"></transition><transition target="s2" action="org.junit.Assert.assertEquals(long,long)" proba="0.40816326530612246"></transition></state></states></ts>