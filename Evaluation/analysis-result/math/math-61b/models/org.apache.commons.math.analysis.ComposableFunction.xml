<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s2" action="org.apache.commons.math.analysis.ComposableFunction.value(double[])" proba="1.0"></transition></state><state id="s4"><transition target="s2" action="org.apache.commons.math.analysis.ComposableFunction.value(double[])" proba="1.0"></transition></state><state id="s5"><transition target="s2" action="org.apache.commons.math.analysis.ComposableFunction.value(double[])" proba="1.0"></transition></state><state id="s6"><transition target="s6" action="org.apache.commons.math.analysis.ComposableFunction.value(double)" proba="0.15151515151515152"></transition><transition target="sX" action="epsilon" proba="0.8484848484848485"></transition></state><state id="s7"><transition target="s7" action="org.apache.commons.math.analysis.ComposableFunction.of(org.apache.commons.math.analysis.UnivariateRealFunction)" proba="0.05555555555555555"></transition><transition target="sX" action="epsilon" proba="0.9444444444444444"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="s7" action="org.apache.commons.math.analysis.ComposableFunction.of(org.apache.commons.math.analysis.UnivariateRealFunction)" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.5"></transition></state><state id="s9"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s11"><transition target="s12" action="org.apache.commons.math.analysis.ComposableFunction.subtract(org.apache.commons.math.analysis.UnivariateRealFunction)" proba="1.0"></transition></state><state id="s10"><transition target="s11" action="org.apache.commons.math.analysis.ComposableFunction.add(org.apache.commons.math.analysis.UnivariateRealFunction)" proba="1.0"></transition></state><state id="s13"><transition target="s14" action="org.apache.commons.math.analysis.ComposableFunction.multiply(double)" proba="1.0"></transition></state><state id="s12"><transition target="s13" action="org.apache.commons.math.analysis.ComposableFunction.multiply(org.apache.commons.math.analysis.UnivariateRealFunction)" proba="1.0"></transition></state><state id="s15"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s14"><transition target="s15" action="org.apache.commons.math.analysis.ComposableFunction.divide(org.apache.commons.math.analysis.UnivariateRealFunction)" proba="1.0"></transition></state><state id="s0"><transition target="s6" action="org.apache.commons.math.analysis.ComposableFunction.value(double)" proba="0.5714285714285714"></transition><transition target="s10" action="org.apache.commons.math.analysis.ComposableFunction.add(double)" proba="0.02040816326530612"></transition><transition target="s7" action="org.apache.commons.math.analysis.ComposableFunction.of(org.apache.commons.math.analysis.UnivariateRealFunction)" proba="0.32653061224489793"></transition><transition target="s8" action="org.apache.commons.math.analysis.ComposableFunction.postCompose(org.apache.commons.math.analysis.UnivariateRealFunction)" proba="0.04081632653061224"></transition><transition target="s9" action="org.apache.commons.math.analysis.ComposableFunction.combine(org.apache.commons.math.analysis.UnivariateRealFunction,org.apache.commons.math.analysis.BivariateRealFunction)" proba="0.02040816326530612"></transition><transition target="s1" action="org.apache.commons.math.analysis.ComposableFunction.asCollector()" proba="0.02040816326530612"></transition></state><state id="s1"><transition target="s2" action="org.apache.commons.math.analysis.ComposableFunction.value(double[])" proba="1.0"></transition></state><state id="s2"><transition target="s3" action="org.apache.commons.math.analysis.ComposableFunction.asCollector(double)" proba="0.25"></transition><transition target="s4" action="org.apache.commons.math.analysis.ComposableFunction.asCollector(org.apache.commons.math.analysis.BivariateRealFunction)" proba="0.25"></transition><transition target="s5" action="org.apache.commons.math.analysis.ComposableFunction.asCollector(org.apache.commons.math.analysis.BivariateRealFunction,double)" proba="0.25"></transition><transition target="sX" action="epsilon" proba="0.25"></transition></state></states></ts>