<?xml version="1.0"?><ts><start>s0</start><states><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s11"><transition target="s3" action="org.junit.Assert.fail(java.lang.String)" proba="0.2619047619047619"></transition><transition target="s11" action="org.junit.Assert.assertEquals(java.lang.String,java.lang.Object,java.lang.Object)" proba="0.5952380952380952"></transition><transition target="s5" action="org.junit.Assert.assertEquals(java.lang.String,long,long)" proba="0.023809523809523808"></transition><transition target="s6" action="org.junit.Assert.assertTrue(java.lang.String,boolean)" proba="0.011904761904761904"></transition><transition target="sX" action="epsilon" proba="0.10714285714285714"></transition></state><state id="s10"><transition target="s3" action="org.junit.Assert.fail(java.lang.String)" proba="0.03098106712564544"></transition><transition target="s4" action="org.junit.Assert.assertEquals(double,double,double)" proba="0.010327022375215147"></transition><transition target="s5" action="org.junit.Assert.assertEquals(java.lang.String,long,long)" proba="0.055077452667814115"></transition><transition target="s6" action="org.junit.Assert.assertTrue(java.lang.String,boolean)" proba="0.04130808950086059"></transition><transition target="s7" action="org.junit.Assert.assertTrue(boolean)" proba="0.012048192771084338"></transition><transition target="sX" action="epsilon" proba="0.31153184165232356"></transition><transition target="s9" action="org.junit.Assert.assertNotNull(java.lang.Object)" proba="0.0034423407917383822"></transition><transition target="s11" action="org.junit.Assert.assertEquals(java.lang.String,java.lang.Object,java.lang.Object)" proba="0.0017211703958691911"></transition><transition target="s10" action="org.junit.Assert.assertEquals(java.lang.String,double,double,double)" proba="0.5180722891566265"></transition><transition target="s13" action="org.junit.Assert.assertNotSame(java.lang.Object,java.lang.Object)" proba="0.0017211703958691911"></transition><transition target="s16" action="org.junit.Assert.assertSame(java.lang.Object,java.lang.Object)" proba="0.0017211703958691911"></transition><transition target="s19" action="org.junit.Assert.assertFalse(java.lang.String,boolean)" proba="0.0017211703958691911"></transition><transition target="s18" action="org.junit.Assert.assertNotSame(java.lang.String,java.lang.Object,java.lang.Object)" proba="0.0017211703958691911"></transition><transition target="s1" action="org.junit.Assert.assertEquals(long,long)" proba="0.0034423407917383822"></transition><transition target="s2" action="org.junit.Assert.assertFalse(boolean)" proba="0.0051635111876075735"></transition></state><state id="s13"><transition target="s5" action="org.junit.Assert.assertEquals(java.lang.String,long,long)" proba="0.07692307692307693"></transition><transition target="s10" action="org.junit.Assert.assertEquals(java.lang.String,double,double,double)" proba="0.038461538461538464"></transition><transition target="s13" action="org.junit.Assert.assertNotSame(java.lang.Object,java.lang.Object)" proba="0.07692307692307693"></transition><transition target="s7" action="org.junit.Assert.assertTrue(boolean)" proba="0.038461538461538464"></transition><transition target="sX" action="epsilon" proba="0.15384615384615385"></transition><transition target="s8" action="org.junit.Assert.assertEquals(java.lang.Object,java.lang.Object)" proba="0.6153846153846154"></transition></state><state id="s12"><transition target="s12" action="org.junit.Assert.assertArrayEquals(java.lang.Object[],java.lang.Object[])" proba="0.2857142857142857"></transition><transition target="sX" action="epsilon" proba="0.2857142857142857"></transition><transition target="s8" action="org.junit.Assert.assertEquals(java.lang.Object,java.lang.Object)" proba="0.2857142857142857"></transition><transition target="s1" action="org.junit.Assert.assertEquals(long,long)" proba="0.14285714285714285"></transition></state><state id="s15"><transition target="s4" action="org.junit.Assert.assertEquals(double,double,double)" proba="0.02127659574468085"></transition><transition target="s7" action="org.junit.Assert.assertTrue(boolean)" proba="0.02127659574468085"></transition><transition target="sX" action="epsilon" proba="0.3829787234042553"></transition><transition target="s8" action="org.junit.Assert.assertEquals(java.lang.Object,java.lang.Object)" proba="0.02127659574468085"></transition><transition target="s15" action="org.junit.Assert.assertNull(java.lang.Object)" proba="0.3404255319148936"></transition><transition target="s1" action="org.junit.Assert.assertEquals(long,long)" proba="0.1702127659574468"></transition><transition target="s2" action="org.junit.Assert.assertFalse(boolean)" proba="0.0425531914893617"></transition></state><state id="s14"><transition target="sX" action="epsilon" proba="0.25"></transition><transition target="s1" action="org.junit.Assert.assertEquals(long,long)" proba="0.75"></transition></state><state id="s17"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s16"><transition target="s13" action="org.junit.Assert.assertNotSame(java.lang.Object,java.lang.Object)" proba="0.07142857142857142"></transition><transition target="sX" action="epsilon" proba="0.5714285714285714"></transition><transition target="s16" action="org.junit.Assert.assertSame(java.lang.Object,java.lang.Object)" proba="0.21428571428571427"></transition><transition target="s1" action="org.junit.Assert.assertEquals(long,long)" proba="0.14285714285714285"></transition></state><state id="s19"><transition target="s6" action="org.junit.Assert.assertTrue(java.lang.String,boolean)" proba="0.375"></transition><transition target="s7" action="org.junit.Assert.assertTrue(boolean)" proba="0.0625"></transition><transition target="sX" action="epsilon" proba="0.3125"></transition><transition target="s19" action="org.junit.Assert.assertFalse(java.lang.String,boolean)" proba="0.25"></transition></state><state id="s18"><transition target="s5" action="org.junit.Assert.assertEquals(java.lang.String,long,long)" proba="0.2857142857142857"></transition><transition target="s10" action="org.junit.Assert.assertEquals(java.lang.String,double,double,double)" proba="0.2857142857142857"></transition><transition target="s1" action="org.junit.Assert.assertEquals(long,long)" proba="0.42857142857142855"></transition></state><state id="s0"><transition target="s3" action="org.junit.Assert.fail(java.lang.String)" proba="0.1048951048951049"></transition><transition target="s4" action="org.junit.Assert.assertEquals(double,double,double)" proba="0.33760683760683763"></transition><transition target="s5" action="org.junit.Assert.assertEquals(java.lang.String,long,long)" proba="0.019425019425019424"></transition><transition target="s6" action="org.junit.Assert.assertTrue(java.lang.String,boolean)" proba="0.03146853146853147"></transition><transition target="s7" action="org.junit.Assert.assertTrue(boolean)" proba="0.14335664335664336"></transition><transition target="s8" action="org.junit.Assert.assertEquals(java.lang.Object,java.lang.Object)" proba="0.11693861693861694"></transition><transition target="s9" action="org.junit.Assert.assertNotNull(java.lang.Object)" proba="0.008547008547008548"></transition><transition target="s20" action="org.junit.Assert.fail()" proba="0.0027195027195027195"></transition><transition target="s11" action="org.junit.Assert.assertEquals(java.lang.String,java.lang.Object,java.lang.Object)" proba="0.010878010878010878"></transition><transition target="s22" action="org.junit.Assert.assertSame(java.lang.String,java.lang.Object,java.lang.Object)" proba="7.77000777000777E-4"></transition><transition target="s10" action="org.junit.Assert.assertEquals(java.lang.String,double,double,double)" proba="0.07148407148407149"></transition><transition target="s21" action="org.junit.Assert.assertNotNull(java.lang.String,java.lang.Object)" proba="0.0034965034965034965"></transition><transition target="s13" action="org.junit.Assert.assertNotSame(java.lang.Object,java.lang.Object)" proba="0.00777000777000777"></transition><transition target="s24" action="org.junit.Assert.assertArrayEquals(int[],int[])" proba="3.885003885003885E-4"></transition><transition target="s12" action="org.junit.Assert.assertArrayEquals(java.lang.Object[],java.lang.Object[])" proba="0.0011655011655011655"></transition><transition target="s23" action="org.junit.Assert.assertArrayEquals(java.lang.String,java.lang.Object[],java.lang.Object[])" proba="7.77000777000777E-4"></transition><transition target="s15" action="org.junit.Assert.assertNull(java.lang.Object)" proba="0.005050505050505051"></transition><transition target="s14" action="org.junit.Assert.assertNull(java.lang.String,java.lang.Object)" proba="0.002331002331002331"></transition><transition target="s17" action="org.junit.Assert.assertArrayEquals(double[],double[],double)" proba="0.0011655011655011655"></transition><transition target="s16" action="org.junit.Assert.assertSame(java.lang.Object,java.lang.Object)" proba="0.0027195027195027195"></transition><transition target="s19" action="org.junit.Assert.assertFalse(java.lang.String,boolean)" proba="0.0011655011655011655"></transition><transition target="s18" action="org.junit.Assert.assertNotSame(java.lang.String,java.lang.Object,java.lang.Object)" proba="7.77000777000777E-4"></transition><transition target="s1" action="org.junit.Assert.assertEquals(long,long)" proba="0.11033411033411034"></transition><transition target="s2" action="org.junit.Assert.assertFalse(boolean)" proba="0.014763014763014764"></transition></state><state id="s1"><transition target="s3" action="org.junit.Assert.fail(java.lang.String)" proba="0.03747534516765286"></transition><transition target="s4" action="org.junit.Assert.assertEquals(double,double,double)" proba="0.11045364891518737"></transition><transition target="s10" action="org.junit.Assert.assertEquals(java.lang.String,double,double,double)" proba="0.0039447731755424065"></transition><transition target="s7" action="org.junit.Assert.assertTrue(boolean)" proba="0.0631163708086785"></transition><transition target="sX" action="epsilon" proba="0.1844181459566075"></transition><transition target="s8" action="org.junit.Assert.assertEquals(java.lang.Object,java.lang.Object)" proba="0.05621301775147929"></transition><transition target="s9" action="org.junit.Assert.assertNotNull(java.lang.Object)" proba="0.007889546351084813"></transition><transition target="s15" action="org.junit.Assert.assertNull(java.lang.Object)" proba="0.004930966469428008"></transition><transition target="s18" action="org.junit.Assert.assertNotSame(java.lang.String,java.lang.Object,java.lang.Object)" proba="0.0019723865877712033"></transition><transition target="s1" action="org.junit.Assert.assertEquals(long,long)" proba="0.52465483234714"></transition><transition target="s2" action="org.junit.Assert.assertFalse(boolean)" proba="0.004930966469428008"></transition></state><state id="s2"><transition target="s3" action="org.junit.Assert.fail(java.lang.String)" proba="0.0176678445229682"></transition><transition target="s4" action="org.junit.Assert.assertEquals(double,double,double)" proba="0.007067137809187279"></transition><transition target="s7" action="org.junit.Assert.assertTrue(boolean)" proba="0.2862190812720848"></transition><transition target="sX" action="epsilon" proba="0.22968197879858657"></transition><transition target="s8" action="org.junit.Assert.assertEquals(java.lang.Object,java.lang.Object)" proba="0.0035335689045936395"></transition><transition target="s15" action="org.junit.Assert.assertNull(java.lang.Object)" proba="0.014134275618374558"></transition><transition target="s1" action="org.junit.Assert.assertEquals(long,long)" proba="0.0035335689045936395"></transition><transition target="s2" action="org.junit.Assert.assertFalse(boolean)" proba="0.4381625441696113"></transition></state><state id="s3"><transition target="s3" action="org.junit.Assert.fail(java.lang.String)" proba="0.5110887096774194"></transition><transition target="s4" action="org.junit.Assert.assertEquals(double,double,double)" proba="0.009072580645161291"></transition><transition target="s5" action="org.junit.Assert.assertEquals(java.lang.String,long,long)" proba="0.005040322580645161"></transition><transition target="s6" action="org.junit.Assert.assertTrue(java.lang.String,boolean)" proba="0.0030241935483870967"></transition><transition target="s7" action="org.junit.Assert.assertTrue(boolean)" proba="0.007056451612903226"></transition><transition target="sX" action="epsilon" proba="0.40625"></transition><transition target="s8" action="org.junit.Assert.assertEquals(java.lang.Object,java.lang.Object)" proba="0.021169354838709676"></transition><transition target="s11" action="org.junit.Assert.assertEquals(java.lang.String,java.lang.Object,java.lang.Object)" proba="0.0020161290322580645"></transition><transition target="s10" action="org.junit.Assert.assertEquals(java.lang.String,double,double,double)" proba="0.005040322580645161"></transition><transition target="s14" action="org.junit.Assert.assertNull(java.lang.String,java.lang.Object)" proba="0.0020161290322580645"></transition><transition target="s16" action="org.junit.Assert.assertSame(java.lang.Object,java.lang.Object)" proba="0.0020161290322580645"></transition><transition target="s1" action="org.junit.Assert.assertEquals(long,long)" proba="0.025201612903225805"></transition><transition target="s2" action="org.junit.Assert.assertFalse(boolean)" proba="0.0010080645161290322"></transition></state><state id="s4"><transition target="s3" action="org.junit.Assert.fail(java.lang.String)" proba="0.0061180789232181095"></transition><transition target="s20" action="org.junit.Assert.fail()" proba="0.0015295197308045274"></transition><transition target="s4" action="org.junit.Assert.assertEquals(double,double,double)" proba="0.650351789538085"></transition><transition target="s10" action="org.junit.Assert.assertEquals(java.lang.String,double,double,double)" proba="6.11807892321811E-4"></transition><transition target="s6" action="org.junit.Assert.assertTrue(java.lang.String,boolean)" proba="3.059039461609055E-4"></transition><transition target="s7" action="org.junit.Assert.assertTrue(boolean)" proba="0.04619149587029673"></transition><transition target="sX" action="epsilon" proba="0.2633832976445396"></transition><transition target="s8" action="org.junit.Assert.assertEquals(java.lang.Object,java.lang.Object)" proba="0.00948302233098807"></transition><transition target="s15" action="org.junit.Assert.assertNull(java.lang.Object)" proba="0.0015295197308045274"></transition><transition target="s1" action="org.junit.Assert.assertEquals(long,long)" proba="0.01896604466197614"></transition><transition target="s2" action="org.junit.Assert.assertFalse(boolean)" proba="0.0015295197308045274"></transition></state><state id="s5"><transition target="s3" action="org.junit.Assert.fail(java.lang.String)" proba="0.02072538860103627"></transition><transition target="s5" action="org.junit.Assert.assertEquals(java.lang.String,long,long)" proba="0.43005181347150256"></transition><transition target="s11" action="org.junit.Assert.assertEquals(java.lang.String,java.lang.Object,java.lang.Object)" proba="0.010362694300518135"></transition><transition target="s10" action="org.junit.Assert.assertEquals(java.lang.String,double,double,double)" proba="0.30569948186528495"></transition><transition target="s6" action="org.junit.Assert.assertTrue(java.lang.String,boolean)" proba="0.10362694300518134"></transition><transition target="sX" action="epsilon" proba="0.11917098445595854"></transition><transition target="s19" action="org.junit.Assert.assertFalse(java.lang.String,boolean)" proba="0.010362694300518135"></transition></state><state id="s6"><transition target="s3" action="org.junit.Assert.fail(java.lang.String)" proba="0.05555555555555555"></transition><transition target="s4" action="org.junit.Assert.assertEquals(double,double,double)" proba="0.007407407407407408"></transition><transition target="s5" action="org.junit.Assert.assertEquals(java.lang.String,long,long)" proba="0.06296296296296296"></transition><transition target="s10" action="org.junit.Assert.assertEquals(java.lang.String,double,double,double)" proba="0.06666666666666667"></transition><transition target="s6" action="org.junit.Assert.assertTrue(java.lang.String,boolean)" proba="0.48148148148148145"></transition><transition target="s7" action="org.junit.Assert.assertTrue(boolean)" proba="0.003703703703703704"></transition><transition target="sX" action="epsilon" proba="0.28888888888888886"></transition><transition target="s8" action="org.junit.Assert.assertEquals(java.lang.Object,java.lang.Object)" proba="0.003703703703703704"></transition><transition target="s19" action="org.junit.Assert.assertFalse(java.lang.String,boolean)" proba="0.022222222222222223"></transition><transition target="s2" action="org.junit.Assert.assertFalse(boolean)" proba="0.007407407407407408"></transition></state><state id="s7"><transition target="s3" action="org.junit.Assert.fail(java.lang.String)" proba="0.01777434312210201"></transition><transition target="s4" action="org.junit.Assert.assertEquals(double,double,double)" proba="0.09814528593508501"></transition><transition target="s6" action="org.junit.Assert.assertTrue(java.lang.String,boolean)" proba="0.00231839258114374"></transition><transition target="s7" action="org.junit.Assert.assertTrue(boolean)" proba="0.46213292117465227"></transition><transition target="sX" action="epsilon" proba="0.31375579598145287"></transition><transition target="s8" action="org.junit.Assert.assertEquals(java.lang.Object,java.lang.Object)" proba="0.005409582689335394"></transition><transition target="s15" action="org.junit.Assert.assertNull(java.lang.Object)" proba="0.0015455950540958269"></transition><transition target="s16" action="org.junit.Assert.assertSame(java.lang.Object,java.lang.Object)" proba="7.727975270479134E-4"></transition><transition target="s1" action="org.junit.Assert.assertEquals(long,long)" proba="0.02472952086553323"></transition><transition target="s2" action="org.junit.Assert.assertFalse(boolean)" proba="0.07341576506955177"></transition></state><state id="s8"><transition target="s3" action="org.junit.Assert.fail(java.lang.String)" proba="0.07608695652173914"></transition><transition target="s4" action="org.junit.Assert.assertEquals(double,double,double)" proba="0.013285024154589372"></transition><transition target="s7" action="org.junit.Assert.assertTrue(boolean)" proba="0.013285024154589372"></transition><transition target="s13" action="org.junit.Assert.assertNotSame(java.lang.Object,java.lang.Object)" proba="0.0024154589371980675"></transition><transition target="sX" action="epsilon" proba="0.37318840579710144"></transition><transition target="s8" action="org.junit.Assert.assertEquals(java.lang.Object,java.lang.Object)" proba="0.4613526570048309"></transition><transition target="s12" action="org.junit.Assert.assertArrayEquals(java.lang.Object[],java.lang.Object[])" proba="0.0024154589371980675"></transition><transition target="s9" action="org.junit.Assert.assertNotNull(java.lang.Object)" proba="0.0024154589371980675"></transition><transition target="s15" action="org.junit.Assert.assertNull(java.lang.Object)" proba="0.0012077294685990338"></transition><transition target="s18" action="org.junit.Assert.assertNotSame(java.lang.String,java.lang.Object,java.lang.Object)" proba="0.0012077294685990338"></transition><transition target="s1" action="org.junit.Assert.assertEquals(long,long)" proba="0.043478260869565216"></transition><transition target="s2" action="org.junit.Assert.assertFalse(boolean)" proba="0.00966183574879227"></transition></state><state id="s9"><transition target="s3" action="org.junit.Assert.fail(java.lang.String)" proba="0.02702702702702703"></transition><transition target="s10" action="org.junit.Assert.assertEquals(java.lang.String,double,double,double)" proba="0.08108108108108109"></transition><transition target="sX" action="epsilon" proba="0.02702702702702703"></transition><transition target="s8" action="org.junit.Assert.assertEquals(java.lang.Object,java.lang.Object)" proba="0.21621621621621623"></transition><transition target="s9" action="org.junit.Assert.assertNotNull(java.lang.Object)" proba="0.08108108108108109"></transition><transition target="s15" action="org.junit.Assert.assertNull(java.lang.Object)" proba="0.02702702702702703"></transition><transition target="s1" action="org.junit.Assert.assertEquals(long,long)" proba="0.5405405405405406"></transition></state><state id="s20"><transition target="s20" action="org.junit.Assert.fail()" proba="0.6"></transition><transition target="s4" action="org.junit.Assert.assertEquals(double,double,double)" proba="0.13333333333333333"></transition><transition target="s7" action="org.junit.Assert.assertTrue(boolean)" proba="0.06666666666666667"></transition><transition target="sX" action="epsilon" proba="0.2"></transition></state><state id="s22"><transition target="s10" action="org.junit.Assert.assertEquals(java.lang.String,double,double,double)" proba="1.0"></transition></state><state id="s21"><transition target="s3" action="org.junit.Assert.fail(java.lang.String)" proba="0.5"></transition><transition target="s6" action="org.junit.Assert.assertTrue(java.lang.String,boolean)" proba="0.08333333333333333"></transition><transition target="s21" action="org.junit.Assert.assertNotNull(java.lang.String,java.lang.Object)" proba="0.25"></transition><transition target="sX" action="epsilon" proba="0.08333333333333333"></transition><transition target="s18" action="org.junit.Assert.assertNotSame(java.lang.String,java.lang.Object,java.lang.Object)" proba="0.08333333333333333"></transition></state><state id="s24"><transition target="s24" action="org.junit.Assert.assertArrayEquals(int[],int[])" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.5"></transition></state><state id="s23"><transition target="s11" action="org.junit.Assert.assertEquals(java.lang.String,java.lang.Object,java.lang.Object)" proba="0.08333333333333333"></transition><transition target="s23" action="org.junit.Assert.assertArrayEquals(java.lang.String,java.lang.Object[],java.lang.Object[])" proba="0.8333333333333334"></transition><transition target="sX" action="epsilon" proba="0.08333333333333333"></transition></state></states></ts>