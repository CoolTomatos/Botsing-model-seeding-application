<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s4" action="org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizer.optimize(org.apache.commons.math3.optim.OptimizationData[])" proba="1.0"></transition></state><state id="s4"><transition target="s5" action="org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizer.getEvaluations()" proba="0.5"></transition><transition target="s6" action="org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizer.getMaxEvaluations()" proba="0.5"></transition></state><state id="s5"><transition target="s5" action="org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizer.getEvaluations()" proba="0.6"></transition><transition target="sX" action="epsilon" proba="0.4"></transition></state><state id="s6"><transition target="s7" action="org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizer.getOptima()" proba="1.0"></transition></state><state id="s7"><transition target="s5" action="org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizer.getEvaluations()" proba="1.0"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s0"><transition target="s3" action="org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizer.&lt;init&gt;(org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer,int,org.apache.commons.math3.random.RandomVectorGenerator)" proba="0.6666666666666666"></transition><transition target="s1" action="org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizer.access$000(org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizer)" proba="0.3333333333333333"></transition></state><state id="s1"><transition target="s2" action="org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizer.getGoalType()" proba="1.0"></transition></state><state id="s2"><transition target="sX" action="epsilon" proba="1.0"></transition></state></states></ts>