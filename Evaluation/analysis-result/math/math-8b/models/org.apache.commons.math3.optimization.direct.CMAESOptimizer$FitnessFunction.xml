<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s2" action="org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction.value(double[])" proba="1.0"></transition></state><state id="s4"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s5"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s0"><transition target="s5" action="org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction.access$000(org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction,double[])" proba="0.5"></transition><transition target="s1" action="org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction.&lt;init&gt;(org.apache.commons.math3.optimization.direct.CMAESOptimizer)" proba="0.5"></transition></state><state id="s1"><transition target="s2" action="org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction.value(double[])" proba="1.0"></transition></state><state id="s2"><transition target="s3" action="org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction.isFeasible(double[])" proba="0.5"></transition><transition target="s4" action="org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction.setValueRange(double)" proba="0.5"></transition></state></states></ts>