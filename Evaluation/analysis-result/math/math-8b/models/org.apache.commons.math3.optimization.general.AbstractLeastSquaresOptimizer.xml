<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s4"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s5"><transition target="s6" action="org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer.getJacobianEvaluations()" proba="1.0"></transition></state><state id="s6"><transition target="s2" action="org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer.getRMS()" proba="1.0"></transition></state><state id="s7"><transition target="sX" action="epsilon" proba="0.6666666666666666"></transition><transition target="s1" action="org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer.optimize(int,org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableVectorFunction,double[],double[],double[])" proba="0.3333333333333333"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="s4" action="org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer.getChiSquare()" proba="1.0"></transition></state><state id="s0"><transition target="s1" action="org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer.optimize(int,org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableVectorFunction,double[],double[],double[])" proba="1.0"></transition></state><state id="s1"><transition target="s4" action="org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer.getChiSquare()" proba="0.07692307692307693"></transition><transition target="s5" action="org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer.getEvaluations()" proba="0.07692307692307693"></transition><transition target="s7" action="org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer.computeCovariances(double[],double)" proba="0.038461538461538464"></transition><transition target="sX" action="epsilon" proba="0.15384615384615385"></transition><transition target="s8" action="org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer.computeSigma(double[],double)" proba="0.038461538461538464"></transition><transition target="s2" action="org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer.getRMS()" proba="0.6153846153846154"></transition></state><state id="s2"><transition target="s3" action="org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer.guessParametersErrors()" proba="0.05555555555555555"></transition><transition target="s7" action="org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer.computeCovariances(double[],double)" proba="0.1111111111111111"></transition><transition target="sX" action="epsilon" proba="0.6666666666666666"></transition><transition target="s1" action="org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer.optimize(int,org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableVectorFunction,double[],double[],double[])" proba="0.16666666666666666"></transition></state></states></ts>