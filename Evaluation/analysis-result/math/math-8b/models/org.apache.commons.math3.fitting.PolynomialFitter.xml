<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s4"><transition target="s5" action="org.apache.commons.math3.fitting.PolynomialFitter.addObservedPoint(double,double)" proba="0.2"></transition><transition target="s2" action="org.apache.commons.math3.fitting.PolynomialFitter.addObservedPoint(double,double,double)" proba="0.8"></transition></state><state id="s5"><transition target="s3" action="org.apache.commons.math3.fitting.PolynomialFitter.fit(double[])" proba="1.0"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s0"><transition target="s4" action="org.apache.commons.math3.fitting.PolynomialFitter.&lt;init&gt;(org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer)" proba="0.7142857142857143"></transition><transition target="s1" action="org.apache.commons.math3.fitting.PolynomialFitter.clearObservations()" proba="0.2857142857142857"></transition></state><state id="s1"><transition target="s2" action="org.apache.commons.math3.fitting.PolynomialFitter.addObservedPoint(double,double,double)" proba="1.0"></transition></state><state id="s2"><transition target="s3" action="org.apache.commons.math3.fitting.PolynomialFitter.fit(double[])" proba="1.0"></transition></state></states></ts>