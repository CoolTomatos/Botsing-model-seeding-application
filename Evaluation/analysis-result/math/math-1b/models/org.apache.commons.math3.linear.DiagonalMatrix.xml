<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="org.apache.commons.math3.linear.DiagonalMatrix.getEntry(int,int)" proba="0.391304347826087"></transition><transition target="sX" action="epsilon" proba="0.6086956521739131"></transition></state><state id="s4"><transition target="s5" action="org.apache.commons.math3.linear.DiagonalMatrix.getRowDimension()" proba="0.25"></transition><transition target="s15" action="org.apache.commons.math3.linear.DiagonalMatrix.createMatrix(int,int)" proba="0.5"></transition><transition target="s16" action="org.apache.commons.math3.linear.DiagonalMatrix.copy()" proba="0.25"></transition></state><state id="s5"><transition target="s3" action="org.apache.commons.math3.linear.DiagonalMatrix.getEntry(int,int)" proba="0.2727272727272727"></transition><transition target="s5" action="org.apache.commons.math3.linear.DiagonalMatrix.getRowDimension()" proba="0.4090909090909091"></transition><transition target="s13" action="org.apache.commons.math3.linear.DiagonalMatrix.multiplyEntry(int,int,double)" proba="0.045454545454545456"></transition><transition target="s12" action="org.apache.commons.math3.linear.DiagonalMatrix.getColumnDimension()" proba="0.045454545454545456"></transition><transition target="sX" action="epsilon" proba="0.18181818181818182"></transition><transition target="s14" action="org.apache.commons.math3.linear.DiagonalMatrix.addToEntry(int,int,double)" proba="0.045454545454545456"></transition></state><state id="s6"><transition target="s11" action="org.apache.commons.math3.linear.DiagonalMatrix.preMultiply(double[])" proba="0.2"></transition><transition target="s5" action="org.apache.commons.math3.linear.DiagonalMatrix.getRowDimension()" proba="0.2"></transition><transition target="s7" action="org.apache.commons.math3.linear.DiagonalMatrix.multiply(org.apache.commons.math3.linear.RealMatrix)" proba="0.2"></transition><transition target="s8" action="org.apache.commons.math3.linear.DiagonalMatrix.preMultiply(org.apache.commons.math3.linear.RealVector)" proba="0.2"></transition><transition target="s19" action="org.apache.commons.math3.linear.DiagonalMatrix.operate(double[])" proba="0.2"></transition></state><state id="s7"><transition target="s5" action="org.apache.commons.math3.linear.DiagonalMatrix.getRowDimension()" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.5"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s9"><transition target="s5" action="org.apache.commons.math3.linear.DiagonalMatrix.getRowDimension()" proba="0.08333333333333333"></transition><transition target="s10" action="org.apache.commons.math3.linear.DiagonalMatrix.setEntry(int,int,double)" proba="0.5833333333333334"></transition><transition target="s13" action="org.apache.commons.math3.linear.DiagonalMatrix.multiplyEntry(int,int,double)" proba="0.16666666666666666"></transition><transition target="s14" action="org.apache.commons.math3.linear.DiagonalMatrix.addToEntry(int,int,double)" proba="0.16666666666666666"></transition></state><state id="s11"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s10"><transition target="s3" action="org.apache.commons.math3.linear.DiagonalMatrix.getEntry(int,int)" proba="0.14285714285714285"></transition><transition target="s6" action="org.apache.commons.math3.linear.DiagonalMatrix.getData()" proba="0.14285714285714285"></transition><transition target="sX" action="epsilon" proba="0.7142857142857143"></transition></state><state id="s13"><transition target="s3" action="org.apache.commons.math3.linear.DiagonalMatrix.getEntry(int,int)" proba="1.0"></transition></state><state id="s12"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s15"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s14"><transition target="s3" action="org.apache.commons.math3.linear.DiagonalMatrix.getEntry(int,int)" proba="0.6666666666666666"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition></state><state id="s17"><transition target="s5" action="org.apache.commons.math3.linear.DiagonalMatrix.getRowDimension()" proba="1.0"></transition></state><state id="s16"><transition target="s5" action="org.apache.commons.math3.linear.DiagonalMatrix.getRowDimension()" proba="1.0"></transition></state><state id="s19"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s18"><transition target="s5" action="org.apache.commons.math3.linear.DiagonalMatrix.getRowDimension()" proba="1.0"></transition></state><state id="s0"><transition target="s3" action="org.apache.commons.math3.linear.DiagonalMatrix.getEntry(int,int)" proba="0.02857142857142857"></transition><transition target="s4" action="org.apache.commons.math3.linear.DiagonalMatrix.&lt;init&gt;(double[],boolean)" proba="0.11428571428571428"></transition><transition target="s5" action="org.apache.commons.math3.linear.DiagonalMatrix.getRowDimension()" proba="0.08571428571428572"></transition><transition target="s9" action="org.apache.commons.math3.linear.DiagonalMatrix.&lt;init&gt;(int)" proba="0.34285714285714286"></transition><transition target="s1" action="org.apache.commons.math3.linear.DiagonalMatrix.&lt;init&gt;(double[])" proba="0.42857142857142855"></transition></state><state id="s1"><transition target="s5" action="org.apache.commons.math3.linear.DiagonalMatrix.getRowDimension()" proba="0.2"></transition><transition target="s6" action="org.apache.commons.math3.linear.DiagonalMatrix.getData()" proba="0.26666666666666666"></transition><transition target="s7" action="org.apache.commons.math3.linear.DiagonalMatrix.multiply(org.apache.commons.math3.linear.RealMatrix)" proba="0.06666666666666667"></transition><transition target="sX" action="epsilon" proba="0.2"></transition><transition target="s17" action="org.apache.commons.math3.linear.DiagonalMatrix.subtract(org.apache.commons.math3.linear.DiagonalMatrix)" proba="0.06666666666666667"></transition><transition target="s18" action="org.apache.commons.math3.linear.DiagonalMatrix.add(org.apache.commons.math3.linear.DiagonalMatrix)" proba="0.06666666666666667"></transition><transition target="s2" action="org.apache.commons.math3.linear.DiagonalMatrix.setSubMatrix(double[][],int,int)" proba="0.13333333333333333"></transition></state><state id="s2"><transition target="s3" action="org.apache.commons.math3.linear.DiagonalMatrix.getEntry(int,int)" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.5"></transition></state></states></ts>