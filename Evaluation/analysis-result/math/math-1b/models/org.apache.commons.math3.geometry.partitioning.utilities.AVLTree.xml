<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s4" action="org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotSmaller(java.lang.Comparable)" proba="0.5"></transition><transition target="s6" action="org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.size()" proba="0.5"></transition></state><state id="s4"><transition target="s4" action="org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotSmaller(java.lang.Comparable)" proba="0.14285714285714285"></transition><transition target="s5" action="org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getElement()" proba="0.14285714285714285"></transition><transition target="s10" action="org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotLarger(java.lang.Comparable)" proba="0.42857142857142855"></transition><transition target="sX" action="epsilon" proba="0.2857142857142857"></transition></state><state id="s5"><transition target="s3" action="org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.delete(java.lang.Comparable)" proba="1.0"></transition></state><state id="s6"><transition target="s4" action="org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotSmaller(java.lang.Comparable)" proba="0.6666666666666666"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition></state><state id="s7"><transition target="s8" action="org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getSmallest()" proba="1.0"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="sX" action="epsilon" proba="0.6666666666666666"></transition><transition target="s9" action="org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getLargest()" proba="0.3333333333333333"></transition></state><state id="s9"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s11"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s10"><transition target="s4" action="org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotSmaller(java.lang.Comparable)" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.5"></transition></state><state id="s0"><transition target="s3" action="org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.delete(java.lang.Comparable)" proba="0.09090909090909091"></transition><transition target="s4" action="org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotSmaller(java.lang.Comparable)" proba="0.09090909090909091"></transition><transition target="s11" action="org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.access$302(org.apache.commons.math3.geometry.partitioning.utilities.AVLTree,org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node)" proba="0.09090909090909091"></transition><transition target="s6" action="org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.size()" proba="0.18181818181818182"></transition><transition target="s10" action="org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotLarger(java.lang.Comparable)" proba="0.09090909090909091"></transition><transition target="s7" action="org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.isEmpty()" proba="0.09090909090909091"></transition><transition target="s8" action="org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getSmallest()" proba="0.18181818181818182"></transition><transition target="s1" action="org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.insert(java.lang.Comparable)" proba="0.09090909090909091"></transition><transition target="s2" action="org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.&lt;init&gt;()" proba="0.09090909090909091"></transition></state><state id="s1"><transition target="sX" action="epsilon" proba="0.5"></transition><transition target="s1" action="org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.insert(java.lang.Comparable)" proba="0.5"></transition></state><state id="s2"><transition target="s1" action="org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.insert(java.lang.Comparable)" proba="1.0"></transition></state></states></ts>