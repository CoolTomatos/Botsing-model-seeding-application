<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s4"><transition target="s4" action="org.apache.commons.math3.util.ArithmeticUtils.lcm(long,long)" proba="0.9375"></transition><transition target="sX" action="epsilon" proba="0.0625"></transition></state><state id="s5"><transition target="s5" action="org.apache.commons.math3.util.ArithmeticUtils.addAndCheck(long,long)" proba="0.7"></transition><transition target="sX" action="epsilon" proba="0.3"></transition></state><state id="s6"><transition target="s6" action="org.apache.commons.math3.util.ArithmeticUtils.pow(int,int)" proba="0.4"></transition><transition target="s13" action="org.apache.commons.math3.util.ArithmeticUtils.pow(int,long)" proba="0.2"></transition><transition target="sX" action="epsilon" proba="0.4"></transition></state><state id="s7"><transition target="s7" action="org.apache.commons.math3.util.ArithmeticUtils.subAndCheck(int,int)" proba="0.5714285714285714"></transition><transition target="sX" action="epsilon" proba="0.2857142857142857"></transition><transition target="s8" action="org.apache.commons.math3.util.ArithmeticUtils.mulAndCheck(int,int)" proba="0.14285714285714285"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="s8" action="org.apache.commons.math3.util.ArithmeticUtils.mulAndCheck(int,int)" proba="0.4444444444444444"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition><transition target="s9" action="org.apache.commons.math3.util.ArithmeticUtils.addAndCheck(int,int)" proba="0.1111111111111111"></transition><transition target="s1" action="org.apache.commons.math3.util.ArithmeticUtils.gcd(int,int)" proba="0.1111111111111111"></transition></state><state id="s9"><transition target="s7" action="org.apache.commons.math3.util.ArithmeticUtils.subAndCheck(int,int)" proba="0.25"></transition><transition target="sX" action="epsilon" proba="0.25"></transition><transition target="s9" action="org.apache.commons.math3.util.ArithmeticUtils.addAndCheck(int,int)" proba="0.5"></transition></state><state id="s11"><transition target="s11" action="org.apache.commons.math3.util.ArithmeticUtils.subAndCheck(long,long)" proba="0.7142857142857143"></transition><transition target="sX" action="epsilon" proba="0.2857142857142857"></transition></state><state id="s10"><transition target="s10" action="org.apache.commons.math3.util.ArithmeticUtils.lcm(int,int)" proba="0.9285714285714286"></transition><transition target="sX" action="epsilon" proba="0.07142857142857142"></transition></state><state id="s13"><transition target="s13" action="org.apache.commons.math3.util.ArithmeticUtils.pow(int,long)" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.25"></transition><transition target="s17" action="org.apache.commons.math3.util.ArithmeticUtils.pow(long,int)" proba="0.25"></transition></state><state id="s12"><transition target="s12" action="org.apache.commons.math3.util.ArithmeticUtils.pow(java.math.BigInteger,java.math.BigInteger)" proba="0.5714285714285714"></transition><transition target="sX" action="epsilon" proba="0.21428571428571427"></transition><transition target="s15" action="org.apache.commons.math3.util.ArithmeticUtils.pow(java.math.BigInteger,long)" proba="0.14285714285714285"></transition><transition target="s19" action="org.apache.commons.math3.util.ArithmeticUtils.pow(java.math.BigInteger,int)" proba="0.07142857142857142"></transition></state><state id="s15"><transition target="sX" action="epsilon" proba="0.07142857142857142"></transition><transition target="s12" action="org.apache.commons.math3.util.ArithmeticUtils.pow(java.math.BigInteger,java.math.BigInteger)" proba="0.21428571428571427"></transition><transition target="s15" action="org.apache.commons.math3.util.ArithmeticUtils.pow(java.math.BigInteger,long)" proba="0.5"></transition><transition target="s16" action="org.apache.commons.math3.util.ArithmeticUtils.fromString(java.lang.String)" proba="0.21428571428571427"></transition></state><state id="s14"><transition target="sX" action="epsilon" proba="0.09090909090909091"></transition><transition target="s14" action="org.apache.commons.math3.util.ArithmeticUtils.gcd(long,long)" proba="0.9090909090909091"></transition></state><state id="s17"><transition target="s17" action="org.apache.commons.math3.util.ArithmeticUtils.pow(long,int)" proba="0.6666666666666666"></transition><transition target="s18" action="org.apache.commons.math3.util.ArithmeticUtils.pow(long,long)" proba="0.3333333333333333"></transition></state><state id="s16"><transition target="s12" action="org.apache.commons.math3.util.ArithmeticUtils.pow(java.math.BigInteger,java.math.BigInteger)" proba="0.5"></transition><transition target="s15" action="org.apache.commons.math3.util.ArithmeticUtils.pow(java.math.BigInteger,long)" proba="0.5"></transition></state><state id="s19"><transition target="s15" action="org.apache.commons.math3.util.ArithmeticUtils.pow(java.math.BigInteger,long)" proba="0.5"></transition><transition target="s19" action="org.apache.commons.math3.util.ArithmeticUtils.pow(java.math.BigInteger,int)" proba="0.5"></transition></state><state id="s18"><transition target="s19" action="org.apache.commons.math3.util.ArithmeticUtils.pow(java.math.BigInteger,int)" proba="0.3333333333333333"></transition><transition target="s18" action="org.apache.commons.math3.util.ArithmeticUtils.pow(long,long)" proba="0.6666666666666666"></transition></state><state id="s0"><transition target="s3" action="org.apache.commons.math3.util.ArithmeticUtils.isPowerOfTwo(long)" proba="0.17142857142857143"></transition><transition target="s4" action="org.apache.commons.math3.util.ArithmeticUtils.lcm(long,long)" proba="0.02857142857142857"></transition><transition target="s5" action="org.apache.commons.math3.util.ArithmeticUtils.addAndCheck(long,long)" proba="0.08571428571428572"></transition><transition target="s6" action="org.apache.commons.math3.util.ArithmeticUtils.pow(int,int)" proba="0.08571428571428572"></transition><transition target="s7" action="org.apache.commons.math3.util.ArithmeticUtils.subAndCheck(int,int)" proba="0.05714285714285714"></transition><transition target="s8" action="org.apache.commons.math3.util.ArithmeticUtils.mulAndCheck(int,int)" proba="0.02857142857142857"></transition><transition target="s9" action="org.apache.commons.math3.util.ArithmeticUtils.addAndCheck(int,int)" proba="0.02857142857142857"></transition><transition target="s11" action="org.apache.commons.math3.util.ArithmeticUtils.subAndCheck(long,long)" proba="0.05714285714285714"></transition><transition target="s10" action="org.apache.commons.math3.util.ArithmeticUtils.lcm(int,int)" proba="0.02857142857142857"></transition><transition target="s13" action="org.apache.commons.math3.util.ArithmeticUtils.pow(int,long)" proba="0.02857142857142857"></transition><transition target="s12" action="org.apache.commons.math3.util.ArithmeticUtils.pow(java.math.BigInteger,java.math.BigInteger)" proba="0.02857142857142857"></transition><transition target="s15" action="org.apache.commons.math3.util.ArithmeticUtils.pow(java.math.BigInteger,long)" proba="0.02857142857142857"></transition><transition target="s14" action="org.apache.commons.math3.util.ArithmeticUtils.gcd(long,long)" proba="0.02857142857142857"></transition><transition target="s16" action="org.apache.commons.math3.util.ArithmeticUtils.fromString(java.lang.String)" proba="0.02857142857142857"></transition><transition target="s1" action="org.apache.commons.math3.util.ArithmeticUtils.gcd(int,int)" proba="0.2"></transition><transition target="s2" action="org.apache.commons.math3.util.ArithmeticUtils.mulAndCheck(long,long)" proba="0.08571428571428572"></transition></state><state id="s1"><transition target="sX" action="epsilon" proba="0.10344827586206896"></transition><transition target="s8" action="org.apache.commons.math3.util.ArithmeticUtils.mulAndCheck(int,int)" proba="0.10344827586206896"></transition><transition target="s14" action="org.apache.commons.math3.util.ArithmeticUtils.gcd(long,long)" proba="0.034482758620689655"></transition><transition target="s1" action="org.apache.commons.math3.util.ArithmeticUtils.gcd(int,int)" proba="0.7241379310344828"></transition><transition target="s2" action="org.apache.commons.math3.util.ArithmeticUtils.mulAndCheck(long,long)" proba="0.034482758620689655"></transition></state><state id="s2"><transition target="sX" action="epsilon" proba="0.25"></transition><transition target="s2" action="org.apache.commons.math3.util.ArithmeticUtils.mulAndCheck(long,long)" proba="0.75"></transition></state></states></ts>