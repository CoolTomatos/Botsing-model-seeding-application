<?xml version="1.0"?><ts><start>s0</start><states><state id="s31"><transition target="s31" action="org.apache.commons.math3.fraction.BigFraction.compareTo(org.apache.commons.math3.fraction.BigFraction)" proba="0.46153846153846156"></transition><transition target="s13" action="org.apache.commons.math3.fraction.BigFraction.multiply(int)" proba="0.07692307692307693"></transition><transition target="sX" action="epsilon" proba="0.23076923076923078"></transition><transition target="s16" action="org.apache.commons.math3.fraction.BigFraction.doubleValue()" proba="0.23076923076923078"></transition></state><state id="s30"><transition target="sX" action="epsilon" proba="0.5"></transition><transition target="s2" action="org.apache.commons.math3.fraction.BigFraction.getNumeratorAsInt()" proba="0.5"></transition></state><state id="s33"><transition target="s6" action="org.apache.commons.math3.fraction.BigFraction.getDenominatorAsLong()" proba="1.0"></transition></state><state id="s32"><transition target="s32" action="org.apache.commons.math3.fraction.BigFraction.getReducedFraction(int,int)" proba="0.4"></transition><transition target="s8" action="org.apache.commons.math3.fraction.BigFraction.fromString(java.lang.String)" proba="0.1"></transition><transition target="s27" action="org.apache.commons.math3.fraction.BigFraction.equals(java.lang.Object)" proba="0.1"></transition><transition target="s2" action="org.apache.commons.math3.fraction.BigFraction.getNumeratorAsInt()" proba="0.4"></transition></state><state id="s35"><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition><transition target="s27" action="org.apache.commons.math3.fraction.BigFraction.equals(java.lang.Object)" proba="0.6666666666666666"></transition></state><state id="s34"><transition target="s35" action="org.apache.commons.math3.fraction.BigFraction.pow(int)" proba="1.0"></transition></state><state id="s37"><transition target="sX" action="epsilon" proba="0.75"></transition><transition target="s37" action="org.apache.commons.math3.fraction.BigFraction.intValue()" proba="0.25"></transition></state><state id="s36"><transition target="s27" action="org.apache.commons.math3.fraction.BigFraction.equals(java.lang.Object)" proba="1.0"></transition></state><state id="s39"><transition target="sX" action="epsilon" proba="0.75"></transition><transition target="s39" action="org.apache.commons.math3.fraction.BigFraction.longValue()" proba="0.25"></transition></state><state id="s38"><transition target="sX" action="epsilon" proba="0.5"></transition><transition target="s38" action="org.apache.commons.math3.fraction.BigFraction.hashCode()" proba="0.25"></transition><transition target="s27" action="org.apache.commons.math3.fraction.BigFraction.equals(java.lang.Object)" proba="0.25"></transition></state><state id="s0"><transition target="s4" action="org.apache.commons.math3.fraction.BigFraction.&lt;init&gt;(double,double,int)" proba="0.06639004149377593"></transition><transition target="s5" action="org.apache.commons.math3.fraction.BigFraction.&lt;init&gt;(double)" proba="0.07053941908713693"></transition><transition target="s7" action="org.apache.commons.math3.fraction.BigFraction.&lt;init&gt;(double,int)" proba="0.004149377593360996"></transition><transition target="s8" action="org.apache.commons.math3.fraction.BigFraction.fromString(java.lang.String)" proba="0.03319502074688797"></transition><transition target="s9" action="org.apache.commons.math3.fraction.BigFraction.&lt;init&gt;(java.math.BigInteger)" proba="0.004149377593360996"></transition><transition target="s33" action="org.apache.commons.math3.fraction.BigFraction.getNumeratorAsLong()" proba="0.004149377593360996"></transition><transition target="s32" action="org.apache.commons.math3.fraction.BigFraction.getReducedFraction(int,int)" proba="0.004149377593360996"></transition><transition target="s10" action="org.apache.commons.math3.fraction.BigFraction.getNumerator()" proba="0.02074688796680498"></transition><transition target="s43" action="org.apache.commons.math3.fraction.BigFraction.&lt;init&gt;(long,long)" proba="0.004149377593360996"></transition><transition target="s21" action="org.apache.commons.math3.fraction.BigFraction.add(org.apache.commons.math3.fraction.BigFraction)" proba="0.008298755186721992"></transition><transition target="s13" action="org.apache.commons.math3.fraction.BigFraction.multiply(int)" proba="0.004149377593360996"></transition><transition target="s12" action="org.apache.commons.math3.fraction.BigFraction.&lt;init&gt;(int)" proba="0.08713692946058091"></transition><transition target="s25" action="org.apache.commons.math3.fraction.BigFraction.multiply(org.apache.commons.math3.fraction.BigFraction)" proba="0.024896265560165973"></transition><transition target="s17" action="org.apache.commons.math3.fraction.BigFraction.&lt;init&gt;(java.math.BigInteger,java.math.BigInteger)" proba="0.03734439834024896"></transition><transition target="s16" action="org.apache.commons.math3.fraction.BigFraction.doubleValue()" proba="0.024896265560165973"></transition><transition target="s27" action="org.apache.commons.math3.fraction.BigFraction.equals(java.lang.Object)" proba="0.004149377593360996"></transition><transition target="s19" action="org.apache.commons.math3.fraction.BigFraction.subtract(org.apache.commons.math3.fraction.BigFraction)" proba="0.004149377593360996"></transition><transition target="s1" action="org.apache.commons.math3.fraction.BigFraction.&lt;init&gt;(int,int)" proba="0.5643153526970954"></transition><transition target="s2" action="org.apache.commons.math3.fraction.BigFraction.getNumeratorAsInt()" proba="0.029045643153526972"></transition></state><state id="s1"><transition target="sX" action="epsilon" proba="0.26875"></transition><transition target="s51" action="org.apache.commons.math3.fraction.BigFraction.pow(long)" proba="0.0125"></transition><transition target="s50" action="org.apache.commons.math3.fraction.BigFraction.bigDecimalValue()" proba="0.0125"></transition><transition target="s31" action="org.apache.commons.math3.fraction.BigFraction.compareTo(org.apache.commons.math3.fraction.BigFraction)" proba="0.03125"></transition><transition target="s30" action="org.apache.commons.math3.fraction.BigFraction.add(long)" proba="0.00625"></transition><transition target="s10" action="org.apache.commons.math3.fraction.BigFraction.getNumerator()" proba="0.03125"></transition><transition target="s32" action="org.apache.commons.math3.fraction.BigFraction.getReducedFraction(int,int)" proba="0.00625"></transition><transition target="s13" action="org.apache.commons.math3.fraction.BigFraction.multiply(int)" proba="0.00625"></transition><transition target="s35" action="org.apache.commons.math3.fraction.BigFraction.pow(int)" proba="0.0125"></transition><transition target="s37" action="org.apache.commons.math3.fraction.BigFraction.intValue()" proba="0.01875"></transition><transition target="s15" action="org.apache.commons.math3.fraction.BigFraction.bigDecimalValue(int,int)" proba="0.00625"></transition><transition target="s14" action="org.apache.commons.math3.fraction.BigFraction.divide(int)" proba="0.00625"></transition><transition target="s36" action="org.apache.commons.math3.fraction.BigFraction.serializeAndRecover(java.lang.Object)" proba="0.00625"></transition><transition target="s39" action="org.apache.commons.math3.fraction.BigFraction.longValue()" proba="0.01875"></transition><transition target="s38" action="org.apache.commons.math3.fraction.BigFraction.hashCode()" proba="0.00625"></transition><transition target="s16" action="org.apache.commons.math3.fraction.BigFraction.doubleValue()" proba="0.01875"></transition><transition target="s19" action="org.apache.commons.math3.fraction.BigFraction.subtract(org.apache.commons.math3.fraction.BigFraction)" proba="0.05"></transition><transition target="s18" action="org.apache.commons.math3.fraction.BigFraction.floatValue()" proba="0.01875"></transition><transition target="s1" action="org.apache.commons.math3.fraction.BigFraction.&lt;init&gt;(int,int)" proba="0.01875"></transition><transition target="s2" action="org.apache.commons.math3.fraction.BigFraction.getNumeratorAsInt()" proba="0.05"></transition><transition target="s8" action="org.apache.commons.math3.fraction.BigFraction.fromString(java.lang.String)" proba="0.05"></transition><transition target="s20" action="org.apache.commons.math3.fraction.BigFraction.abs()" proba="0.025"></transition><transition target="s42" action="org.apache.commons.math3.fraction.BigFraction.negate()" proba="0.04375"></transition><transition target="s41" action="org.apache.commons.math3.fraction.BigFraction.reciprocal()" proba="0.0625"></transition><transition target="s22" action="org.apache.commons.math3.fraction.BigFraction.divide(org.apache.commons.math3.fraction.BigFraction)" proba="0.0625"></transition><transition target="s44" action="org.apache.commons.math3.fraction.BigFraction.percentageValue()" proba="0.00625"></transition><transition target="s21" action="org.apache.commons.math3.fraction.BigFraction.add(org.apache.commons.math3.fraction.BigFraction)" proba="0.05"></transition><transition target="s24" action="org.apache.commons.math3.fraction.BigFraction.divide(long)" proba="0.00625"></transition><transition target="s23" action="org.apache.commons.math3.fraction.BigFraction.divide(java.math.BigInteger)" proba="0.00625"></transition><transition target="s26" action="org.apache.commons.math3.fraction.BigFraction.pow(java.math.BigInteger)" proba="0.00625"></transition><transition target="s25" action="org.apache.commons.math3.fraction.BigFraction.multiply(org.apache.commons.math3.fraction.BigFraction)" proba="0.025"></transition><transition target="s47" action="org.apache.commons.math3.fraction.BigFraction.bigDecimalValue(int)" proba="0.00625"></transition><transition target="s28" action="org.apache.commons.math3.fraction.BigFraction.add(java.math.BigInteger)" proba="0.00625"></transition><transition target="s27" action="org.apache.commons.math3.fraction.BigFraction.equals(java.lang.Object)" proba="0.03125"></transition><transition target="s29" action="org.apache.commons.math3.fraction.BigFraction.add(int)" proba="0.00625"></transition></state><state id="s2"><transition target="s3" action="org.apache.commons.math3.fraction.BigFraction.getDenominatorAsInt()" proba="0.9345794392523364"></transition><transition target="s21" action="org.apache.commons.math3.fraction.BigFraction.add(org.apache.commons.math3.fraction.BigFraction)" proba="0.018691588785046728"></transition><transition target="s32" action="org.apache.commons.math3.fraction.BigFraction.getReducedFraction(int,int)" proba="0.018691588785046728"></transition><transition target="sX" action="epsilon" proba="0.028037383177570093"></transition></state><state id="s3"><transition target="s3" action="org.apache.commons.math3.fraction.BigFraction.getDenominatorAsInt()" proba="0.009708737864077669"></transition><transition target="sX" action="epsilon" proba="0.5242718446601942"></transition><transition target="s8" action="org.apache.commons.math3.fraction.BigFraction.fromString(java.lang.String)" proba="0.06796116504854369"></transition><transition target="s40" action="org.apache.commons.math3.fraction.BigFraction.multiply(long)" proba="0.009708737864077669"></transition><transition target="s20" action="org.apache.commons.math3.fraction.BigFraction.abs()" proba="0.019417475728155338"></transition><transition target="s30" action="org.apache.commons.math3.fraction.BigFraction.add(long)" proba="0.009708737864077669"></transition><transition target="s22" action="org.apache.commons.math3.fraction.BigFraction.divide(org.apache.commons.math3.fraction.BigFraction)" proba="0.02912621359223301"></transition><transition target="s21" action="org.apache.commons.math3.fraction.BigFraction.add(org.apache.commons.math3.fraction.BigFraction)" proba="0.019417475728155338"></transition><transition target="s13" action="org.apache.commons.math3.fraction.BigFraction.multiply(int)" proba="0.009708737864077669"></transition><transition target="s25" action="org.apache.commons.math3.fraction.BigFraction.multiply(org.apache.commons.math3.fraction.BigFraction)" proba="0.038834951456310676"></transition><transition target="s28" action="org.apache.commons.math3.fraction.BigFraction.add(java.math.BigInteger)" proba="0.009708737864077669"></transition><transition target="s19" action="org.apache.commons.math3.fraction.BigFraction.subtract(org.apache.commons.math3.fraction.BigFraction)" proba="0.019417475728155338"></transition><transition target="s29" action="org.apache.commons.math3.fraction.BigFraction.add(int)" proba="0.009708737864077669"></transition><transition target="s1" action="org.apache.commons.math3.fraction.BigFraction.&lt;init&gt;(int,int)" proba="0.04854368932038835"></transition><transition target="s2" action="org.apache.commons.math3.fraction.BigFraction.getNumeratorAsInt()" proba="0.17475728155339806"></transition></state><state id="s4"><transition target="s4" action="org.apache.commons.math3.fraction.BigFraction.&lt;init&gt;(double,double,int)" proba="0.1111111111111111"></transition><transition target="s25" action="org.apache.commons.math3.fraction.BigFraction.multiply(org.apache.commons.math3.fraction.BigFraction)" proba="0.05555555555555555"></transition><transition target="s2" action="org.apache.commons.math3.fraction.BigFraction.getNumeratorAsInt()" proba="0.8333333333333334"></transition></state><state id="s5"><transition target="s41" action="org.apache.commons.math3.fraction.BigFraction.reciprocal()" proba="0.058823529411764705"></transition><transition target="s33" action="org.apache.commons.math3.fraction.BigFraction.getNumeratorAsLong()" proba="0.35294117647058826"></transition><transition target="s6" action="org.apache.commons.math3.fraction.BigFraction.getDenominatorAsLong()" proba="0.058823529411764705"></transition><transition target="s10" action="org.apache.commons.math3.fraction.BigFraction.getNumerator()" proba="0.11764705882352941"></transition><transition target="sX" action="epsilon" proba="0.23529411764705882"></transition><transition target="s25" action="org.apache.commons.math3.fraction.BigFraction.multiply(org.apache.commons.math3.fraction.BigFraction)" proba="0.058823529411764705"></transition><transition target="s2" action="org.apache.commons.math3.fraction.BigFraction.getNumeratorAsInt()" proba="0.11764705882352941"></transition></state><state id="s6"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s7"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="s31" action="org.apache.commons.math3.fraction.BigFraction.compareTo(org.apache.commons.math3.fraction.BigFraction)" proba="0.024390243902439025"></transition><transition target="s22" action="org.apache.commons.math3.fraction.BigFraction.divide(org.apache.commons.math3.fraction.BigFraction)" proba="0.07317073170731707"></transition><transition target="s21" action="org.apache.commons.math3.fraction.BigFraction.add(org.apache.commons.math3.fraction.BigFraction)" proba="0.04878048780487805"></transition><transition target="sX" action="epsilon" proba="0.17073170731707318"></transition><transition target="s8" action="org.apache.commons.math3.fraction.BigFraction.fromString(java.lang.String)" proba="0.3170731707317073"></transition><transition target="s9" action="org.apache.commons.math3.fraction.BigFraction.&lt;init&gt;(java.math.BigInteger)" proba="0.024390243902439025"></transition><transition target="s26" action="org.apache.commons.math3.fraction.BigFraction.pow(java.math.BigInteger)" proba="0.024390243902439025"></transition><transition target="s25" action="org.apache.commons.math3.fraction.BigFraction.multiply(org.apache.commons.math3.fraction.BigFraction)" proba="0.04878048780487805"></transition><transition target="s17" action="org.apache.commons.math3.fraction.BigFraction.&lt;init&gt;(java.math.BigInteger,java.math.BigInteger)" proba="0.17073170731707318"></transition><transition target="s27" action="org.apache.commons.math3.fraction.BigFraction.equals(java.lang.Object)" proba="0.04878048780487805"></transition><transition target="s19" action="org.apache.commons.math3.fraction.BigFraction.subtract(org.apache.commons.math3.fraction.BigFraction)" proba="0.04878048780487805"></transition></state><state id="s9"><transition target="s10" action="org.apache.commons.math3.fraction.BigFraction.getNumerator()" proba="1.0"></transition></state><state id="s40"><transition target="sX" action="epsilon" proba="0.5"></transition><transition target="s2" action="org.apache.commons.math3.fraction.BigFraction.getNumeratorAsInt()" proba="0.5"></transition></state><state id="s42"><transition target="s19" action="org.apache.commons.math3.fraction.BigFraction.subtract(org.apache.commons.math3.fraction.BigFraction)" proba="0.14285714285714285"></transition><transition target="s2" action="org.apache.commons.math3.fraction.BigFraction.getNumeratorAsInt()" proba="0.8571428571428571"></transition></state><state id="s41"><transition target="s46" action="org.apache.commons.math3.fraction.BigFraction.multiply(java.lang.Object)" proba="0.15384615384615385"></transition><transition target="sX" action="epsilon" proba="0.07692307692307693"></transition><transition target="s25" action="org.apache.commons.math3.fraction.BigFraction.multiply(org.apache.commons.math3.fraction.BigFraction)" proba="0.07692307692307693"></transition><transition target="s1" action="org.apache.commons.math3.fraction.BigFraction.&lt;init&gt;(int,int)" proba="0.07692307692307693"></transition><transition target="s2" action="org.apache.commons.math3.fraction.BigFraction.getNumeratorAsInt()" proba="0.6153846153846154"></transition></state><state id="s44"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s43"><transition target="s2" action="org.apache.commons.math3.fraction.BigFraction.getNumeratorAsInt()" proba="1.0"></transition></state><state id="s46"><transition target="s21" action="org.apache.commons.math3.fraction.BigFraction.add(org.apache.commons.math3.fraction.BigFraction)" proba="0.125"></transition><transition target="s46" action="org.apache.commons.math3.fraction.BigFraction.multiply(java.lang.Object)" proba="0.25"></transition><transition target="sX" action="epsilon" proba="0.25"></transition><transition target="s48" action="org.apache.commons.math3.fraction.BigFraction.add(java.lang.Object)" proba="0.375"></transition></state><state id="s45"><transition target="s13" action="org.apache.commons.math3.fraction.BigFraction.multiply(int)" proba="0.4"></transition><transition target="s46" action="org.apache.commons.math3.fraction.BigFraction.multiply(java.lang.Object)" proba="0.2"></transition><transition target="s45" action="org.apache.commons.math3.fraction.BigFraction.getField()" proba="0.2"></transition><transition target="s27" action="org.apache.commons.math3.fraction.BigFraction.equals(java.lang.Object)" proba="0.2"></transition></state><state id="s48"><transition target="s49" action="org.apache.commons.math3.fraction.BigFraction.subtract(java.lang.Object)" proba="1.0"></transition></state><state id="s47"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s49"><transition target="s46" action="org.apache.commons.math3.fraction.BigFraction.multiply(java.lang.Object)" proba="0.75"></transition><transition target="sX" action="epsilon" proba="0.25"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s51"><transition target="s27" action="org.apache.commons.math3.fraction.BigFraction.equals(java.lang.Object)" proba="1.0"></transition></state><state id="s50"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s11"><transition target="s11" action="org.apache.commons.math3.fraction.BigFraction.getDenominator()" proba="0.038461538461538464"></transition><transition target="s10" action="org.apache.commons.math3.fraction.BigFraction.getNumerator()" proba="0.2692307692307692"></transition><transition target="s8" action="org.apache.commons.math3.fraction.BigFraction.fromString(java.lang.String)" proba="0.11538461538461539"></transition><transition target="sX" action="epsilon" proba="0.5769230769230769"></transition></state><state id="s10"><transition target="s11" action="org.apache.commons.math3.fraction.BigFraction.getDenominator()" proba="0.9615384615384616"></transition><transition target="s10" action="org.apache.commons.math3.fraction.BigFraction.getNumerator()" proba="0.038461538461538464"></transition></state><state id="s13"><transition target="s41" action="org.apache.commons.math3.fraction.BigFraction.reciprocal()" proba="0.3333333333333333"></transition><transition target="s34" action="org.apache.commons.math3.fraction.BigFraction.subtract(int)" proba="0.16666666666666666"></transition><transition target="s14" action="org.apache.commons.math3.fraction.BigFraction.divide(int)" proba="0.16666666666666666"></transition><transition target="s40" action="org.apache.commons.math3.fraction.BigFraction.multiply(long)" proba="0.16666666666666666"></transition><transition target="s2" action="org.apache.commons.math3.fraction.BigFraction.getNumeratorAsInt()" proba="0.16666666666666666"></transition></state><state id="s12"><transition target="sX" action="epsilon" proba="0.6666666666666666"></transition><transition target="s45" action="org.apache.commons.math3.fraction.BigFraction.getField()" proba="0.14285714285714285"></transition><transition target="s16" action="org.apache.commons.math3.fraction.BigFraction.doubleValue()" proba="0.14285714285714285"></transition><transition target="s2" action="org.apache.commons.math3.fraction.BigFraction.getNumeratorAsInt()" proba="0.047619047619047616"></transition></state><state id="s15"><transition target="sX" action="epsilon" proba="0.75"></transition><transition target="s16" action="org.apache.commons.math3.fraction.BigFraction.doubleValue()" proba="0.25"></transition></state><state id="s14"><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition><transition target="s15" action="org.apache.commons.math3.fraction.BigFraction.bigDecimalValue(int,int)" proba="0.3333333333333333"></transition><transition target="s1" action="org.apache.commons.math3.fraction.BigFraction.&lt;init&gt;(int,int)" proba="0.3333333333333333"></transition></state><state id="s17"><transition target="s10" action="org.apache.commons.math3.fraction.BigFraction.getNumerator()" proba="0.125"></transition><transition target="sX" action="epsilon" proba="0.0625"></transition><transition target="s16" action="org.apache.commons.math3.fraction.BigFraction.doubleValue()" proba="0.25"></transition><transition target="s27" action="org.apache.commons.math3.fraction.BigFraction.equals(java.lang.Object)" proba="0.0625"></transition><transition target="s18" action="org.apache.commons.math3.fraction.BigFraction.floatValue()" proba="0.125"></transition><transition target="s2" action="org.apache.commons.math3.fraction.BigFraction.getNumeratorAsInt()" proba="0.375"></transition></state><state id="s16"><transition target="sX" action="epsilon" proba="0.56"></transition><transition target="s45" action="org.apache.commons.math3.fraction.BigFraction.getField()" proba="0.04"></transition><transition target="s8" action="org.apache.commons.math3.fraction.BigFraction.fromString(java.lang.String)" proba="0.04"></transition><transition target="s15" action="org.apache.commons.math3.fraction.BigFraction.bigDecimalValue(int,int)" proba="0.04"></transition><transition target="s25" action="org.apache.commons.math3.fraction.BigFraction.multiply(org.apache.commons.math3.fraction.BigFraction)" proba="0.08"></transition><transition target="s16" action="org.apache.commons.math3.fraction.BigFraction.doubleValue()" proba="0.2"></transition><transition target="s27" action="org.apache.commons.math3.fraction.BigFraction.equals(java.lang.Object)" proba="0.04"></transition></state><state id="s19"><transition target="s21" action="org.apache.commons.math3.fraction.BigFraction.add(org.apache.commons.math3.fraction.BigFraction)" proba="0.058823529411764705"></transition><transition target="sX" action="epsilon" proba="0.23529411764705882"></transition><transition target="s19" action="org.apache.commons.math3.fraction.BigFraction.subtract(org.apache.commons.math3.fraction.BigFraction)" proba="0.17647058823529413"></transition><transition target="s1" action="org.apache.commons.math3.fraction.BigFraction.&lt;init&gt;(int,int)" proba="0.11764705882352941"></transition><transition target="s2" action="org.apache.commons.math3.fraction.BigFraction.getNumeratorAsInt()" proba="0.4117647058823529"></transition></state><state id="s18"><transition target="sX" action="epsilon" proba="0.8333333333333334"></transition><transition target="s18" action="org.apache.commons.math3.fraction.BigFraction.floatValue()" proba="0.16666666666666666"></transition></state><state id="s20"><transition target="sX" action="epsilon" proba="0.5"></transition><transition target="s2" action="org.apache.commons.math3.fraction.BigFraction.getNumeratorAsInt()" proba="0.5"></transition></state><state id="s22"><transition target="s3" action="org.apache.commons.math3.fraction.BigFraction.getDenominatorAsInt()" proba="0.05555555555555555"></transition><transition target="s22" action="org.apache.commons.math3.fraction.BigFraction.divide(org.apache.commons.math3.fraction.BigFraction)" proba="0.1111111111111111"></transition><transition target="sX" action="epsilon" proba="0.2777777777777778"></transition><transition target="s1" action="org.apache.commons.math3.fraction.BigFraction.&lt;init&gt;(int,int)" proba="0.2777777777777778"></transition><transition target="s2" action="org.apache.commons.math3.fraction.BigFraction.getNumeratorAsInt()" proba="0.2777777777777778"></transition></state><state id="s21"><transition target="s3" action="org.apache.commons.math3.fraction.BigFraction.getDenominatorAsInt()" proba="0.041666666666666664"></transition><transition target="s21" action="org.apache.commons.math3.fraction.BigFraction.add(org.apache.commons.math3.fraction.BigFraction)" proba="0.125"></transition><transition target="sX" action="epsilon" proba="0.2916666666666667"></transition><transition target="s14" action="org.apache.commons.math3.fraction.BigFraction.divide(int)" proba="0.041666666666666664"></transition><transition target="s25" action="org.apache.commons.math3.fraction.BigFraction.multiply(org.apache.commons.math3.fraction.BigFraction)" proba="0.041666666666666664"></transition><transition target="s27" action="org.apache.commons.math3.fraction.BigFraction.equals(java.lang.Object)" proba="0.041666666666666664"></transition><transition target="s1" action="org.apache.commons.math3.fraction.BigFraction.&lt;init&gt;(int,int)" proba="0.16666666666666666"></transition><transition target="s2" action="org.apache.commons.math3.fraction.BigFraction.getNumeratorAsInt()" proba="0.25"></transition></state><state id="s24"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s23"><transition target="s1" action="org.apache.commons.math3.fraction.BigFraction.&lt;init&gt;(int,int)" proba="1.0"></transition></state><state id="s26"><transition target="s27" action="org.apache.commons.math3.fraction.BigFraction.equals(java.lang.Object)" proba="1.0"></transition></state><state id="s25"><transition target="s31" action="org.apache.commons.math3.fraction.BigFraction.compareTo(org.apache.commons.math3.fraction.BigFraction)" proba="0.03571428571428571"></transition><transition target="s21" action="org.apache.commons.math3.fraction.BigFraction.add(org.apache.commons.math3.fraction.BigFraction)" proba="0.07142857142857142"></transition><transition target="s10" action="org.apache.commons.math3.fraction.BigFraction.getNumerator()" proba="0.07142857142857142"></transition><transition target="sX" action="epsilon" proba="0.39285714285714285"></transition><transition target="s25" action="org.apache.commons.math3.fraction.BigFraction.multiply(org.apache.commons.math3.fraction.BigFraction)" proba="0.21428571428571427"></transition><transition target="s27" action="org.apache.commons.math3.fraction.BigFraction.equals(java.lang.Object)" proba="0.03571428571428571"></transition><transition target="s2" action="org.apache.commons.math3.fraction.BigFraction.getNumeratorAsInt()" proba="0.17857142857142858"></transition></state><state id="s28"><transition target="s1" action="org.apache.commons.math3.fraction.BigFraction.&lt;init&gt;(int,int)" proba="0.5"></transition><transition target="s2" action="org.apache.commons.math3.fraction.BigFraction.getNumeratorAsInt()" proba="0.5"></transition></state><state id="s27"><transition target="s21" action="org.apache.commons.math3.fraction.BigFraction.add(org.apache.commons.math3.fraction.BigFraction)" proba="0.025"></transition><transition target="s32" action="org.apache.commons.math3.fraction.BigFraction.getReducedFraction(int,int)" proba="0.05"></transition><transition target="sX" action="epsilon" proba="0.375"></transition><transition target="s15" action="org.apache.commons.math3.fraction.BigFraction.bigDecimalValue(int,int)" proba="0.025"></transition><transition target="s36" action="org.apache.commons.math3.fraction.BigFraction.serializeAndRecover(java.lang.Object)" proba="0.125"></transition><transition target="s27" action="org.apache.commons.math3.fraction.BigFraction.equals(java.lang.Object)" proba="0.325"></transition><transition target="s38" action="org.apache.commons.math3.fraction.BigFraction.hashCode()" proba="0.05"></transition><transition target="s49" action="org.apache.commons.math3.fraction.BigFraction.subtract(java.lang.Object)" proba="0.025"></transition></state><state id="s29"><transition target="s1" action="org.apache.commons.math3.fraction.BigFraction.&lt;init&gt;(int,int)" proba="0.5"></transition><transition target="s2" action="org.apache.commons.math3.fraction.BigFraction.getNumeratorAsInt()" proba="0.5"></transition></state></states></ts>