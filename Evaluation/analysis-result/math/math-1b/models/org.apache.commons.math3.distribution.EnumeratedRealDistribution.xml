<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s4"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s5"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s6"><transition target="s6" action="org.apache.commons.math3.distribution.EnumeratedRealDistribution.&lt;init&gt;(double[],double[])" proba="0.8"></transition><transition target="sX" action="epsilon" proba="0.2"></transition></state><state id="s7"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s9"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s11"><transition target="s12" action="org.apache.commons.math3.distribution.EnumeratedRealDistribution.sample(int)" proba="1.0"></transition></state><state id="s10"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s13"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s12"><transition target="s1" action="org.apache.commons.math3.distribution.EnumeratedRealDistribution.getNumericalMean()" proba="1.0"></transition></state><state id="s0"><transition target="s3" action="org.apache.commons.math3.distribution.EnumeratedRealDistribution.probability(double)" proba="0.08333333333333333"></transition><transition target="s4" action="org.apache.commons.math3.distribution.EnumeratedRealDistribution.getSupportLowerBound()" proba="0.08333333333333333"></transition><transition target="s5" action="org.apache.commons.math3.distribution.EnumeratedRealDistribution.isSupportLowerBoundInclusive()" proba="0.08333333333333333"></transition><transition target="s11" action="org.apache.commons.math3.distribution.EnumeratedRealDistribution.reseedRandomGenerator(long)" proba="0.08333333333333333"></transition><transition target="s6" action="org.apache.commons.math3.distribution.EnumeratedRealDistribution.&lt;init&gt;(double[],double[])" proba="0.08333333333333333"></transition><transition target="s10" action="org.apache.commons.math3.distribution.EnumeratedRealDistribution.isSupportUpperBoundInclusive()" proba="0.08333333333333333"></transition><transition target="s7" action="org.apache.commons.math3.distribution.EnumeratedRealDistribution.getSupportUpperBound()" proba="0.08333333333333333"></transition><transition target="s13" action="org.apache.commons.math3.distribution.EnumeratedRealDistribution.density(double)" proba="0.08333333333333333"></transition><transition target="s8" action="org.apache.commons.math3.distribution.EnumeratedRealDistribution.isSupportConnected()" proba="0.08333333333333333"></transition><transition target="s9" action="org.apache.commons.math3.distribution.EnumeratedRealDistribution.getNumericalVariance()" proba="0.08333333333333333"></transition><transition target="s1" action="org.apache.commons.math3.distribution.EnumeratedRealDistribution.getNumericalMean()" proba="0.08333333333333333"></transition><transition target="s2" action="org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double)" proba="0.08333333333333333"></transition></state><state id="s1"><transition target="sX" action="epsilon" proba="0.5"></transition><transition target="s9" action="org.apache.commons.math3.distribution.EnumeratedRealDistribution.getNumericalVariance()" proba="0.5"></transition></state><state id="s2"><transition target="sX" action="epsilon" proba="1.0"></transition></state></states></ts>