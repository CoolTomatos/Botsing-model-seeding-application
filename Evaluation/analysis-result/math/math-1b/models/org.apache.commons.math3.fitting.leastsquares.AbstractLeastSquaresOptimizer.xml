<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s4"><transition target="s5" action="org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizer.withWeight(org.apache.commons.math3.linear.RealMatrix)" proba="1.0"></transition></state><state id="s5"><transition target="s1" action="org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizer.optimize()" proba="1.0"></transition></state><state id="s6"><transition target="s7" action="org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizer.value(double[])" proba="1.0"></transition></state><state id="s7"><transition target="s11" action="org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizer.getMaxEvaluations()" proba="0.1111111111111111"></transition><transition target="s8" action="org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizer.computeResiduals(double[])" proba="0.1111111111111111"></transition><transition target="sX" action="epsilon" proba="0.2222222222222222"></transition><transition target="s17" action="org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizer.getJacobian()" proba="0.4444444444444444"></transition><transition target="s18" action="org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizer.withMaxEvaluations(int)" proba="0.1111111111111111"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="s9" action="org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizer.computeCost(double[])" proba="1.0"></transition></state><state id="s9"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s20"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s11"><transition target="s12" action="org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizer.getMaxIterations()" proba="1.0"></transition></state><state id="s22"><transition target="s11" action="org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizer.getMaxEvaluations()" proba="1.0"></transition></state><state id="s10"><transition target="s2" action="org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizer.computeRMS(double[])" proba="1.0"></transition></state><state id="s21"><transition target="s4" action="org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizer.withTarget(double[])" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.5"></transition></state><state id="s13"><transition target="s14" action="org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizer.getWeight()" proba="1.0"></transition></state><state id="s12"><transition target="s13" action="org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizer.getTarget()" proba="1.0"></transition></state><state id="s15"><transition target="s16" action="org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizer.getStart()" proba="1.0"></transition></state><state id="s14"><transition target="s15" action="org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizer.getEntry(int,int)" proba="1.0"></transition></state><state id="s17"><transition target="s7" action="org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizer.value(double[])" proba="1.0"></transition></state><state id="s16"><transition target="s6" action="org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizer.getModel()" proba="1.0"></transition></state><state id="s19"><transition target="s1" action="org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizer.optimize()" proba="1.0"></transition></state><state id="s18"><transition target="s11" action="org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizer.getMaxEvaluations()" proba="1.0"></transition></state><state id="s0"><transition target="s3" action="org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizer.computeSigma(double[],double)" proba="0.08695652173913043"></transition><transition target="s11" action="org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizer.getMaxEvaluations()" proba="0.043478260869565216"></transition><transition target="s22" action="org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizer.shallowCopy()" proba="0.043478260869565216"></transition><transition target="s6" action="org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizer.getModel()" proba="0.043478260869565216"></transition><transition target="s1" action="org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizer.optimize()" proba="0.782608695652174"></transition></state><state id="s1"><transition target="s20" action="org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizer.getIterations()" proba="0.045454545454545456"></transition><transition target="s10" action="org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizer.getEvaluations()" proba="0.09090909090909091"></transition><transition target="s21" action="org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizer.computeCovariances(double[],double)" proba="0.045454545454545456"></transition><transition target="sX" action="epsilon" proba="0.18181818181818182"></transition><transition target="s2" action="org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizer.computeRMS(double[])" proba="0.6363636363636364"></transition></state><state id="s2"><transition target="s4" action="org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizer.withTarget(double[])" proba="0.0625"></transition><transition target="s5" action="org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizer.withWeight(org.apache.commons.math3.linear.RealMatrix)" proba="0.0625"></transition><transition target="s21" action="org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizer.computeCovariances(double[],double)" proba="0.0625"></transition><transition target="sX" action="epsilon" proba="0.75"></transition><transition target="s19" action="org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizer.withModelAndJacobian(org.apache.commons.math3.analysis.MultivariateVectorFunction,org.apache.commons.math3.analysis.MultivariateMatrixFunction)" proba="0.0625"></transition></state></states></ts>