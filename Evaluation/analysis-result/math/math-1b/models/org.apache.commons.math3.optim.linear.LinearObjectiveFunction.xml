<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s2" action="org.apache.commons.math3.optim.linear.LinearObjectiveFunction.getCoefficients()" proba="1.0"></transition></state><state id="s4"><transition target="s4" action="org.apache.commons.math3.optim.linear.LinearObjectiveFunction.getConstantTerm()" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.5"></transition></state><state id="s5"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s6"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s7"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s0"><transition target="s5" action="org.apache.commons.math3.optim.linear.LinearObjectiveFunction.value(double[])" proba="0.029411764705882353"></transition><transition target="s6" action="org.apache.commons.math3.optim.linear.LinearObjectiveFunction.equals(java.lang.Object)" proba="0.029411764705882353"></transition><transition target="s8" action="org.apache.commons.math3.optim.linear.LinearObjectiveFunction.hashCode()" proba="0.029411764705882353"></transition><transition target="s1" action="org.apache.commons.math3.optim.linear.LinearObjectiveFunction.&lt;init&gt;(double[],double)" proba="0.8235294117647058"></transition><transition target="s2" action="org.apache.commons.math3.optim.linear.LinearObjectiveFunction.getCoefficients()" proba="0.08823529411764706"></transition></state><state id="s1"><transition target="sX" action="epsilon" proba="0.9655172413793104"></transition><transition target="s1" action="org.apache.commons.math3.optim.linear.LinearObjectiveFunction.&lt;init&gt;(double[],double)" proba="0.034482758620689655"></transition></state><state id="s2"><transition target="s3" action="org.apache.commons.math3.optim.linear.LinearObjectiveFunction.mapMultiply(double)" proba="0.25"></transition><transition target="s4" action="org.apache.commons.math3.optim.linear.LinearObjectiveFunction.getConstantTerm()" proba="0.25"></transition><transition target="s7" action="org.apache.commons.math3.optim.linear.LinearObjectiveFunction.getDimension()" proba="0.5"></transition></state></states></ts>