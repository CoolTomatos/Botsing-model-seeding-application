<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s4" action="org.apache.commons.math3.fitting.GaussianCurveFitter.withStartPoint(double[])" proba="1.0"></transition></state><state id="s4"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s0"><transition target="s3" action="org.apache.commons.math3.fitting.GaussianCurveFitter.withMaxIterations(int)" proba="0.09523809523809523"></transition><transition target="s4" action="org.apache.commons.math3.fitting.GaussianCurveFitter.withStartPoint(double[])" proba="0.047619047619047616"></transition><transition target="s1" action="org.apache.commons.math3.fitting.GaussianCurveFitter.fit(java.util.Collection)" proba="0.2857142857142857"></transition><transition target="s2" action="org.apache.commons.math3.fitting.GaussianCurveFitter.create()" proba="0.5714285714285714"></transition></state><state id="s1"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s2"><transition target="sX" action="epsilon" proba="0.9166666666666666"></transition><transition target="s1" action="org.apache.commons.math3.fitting.GaussianCurveFitter.fit(java.util.Collection)" proba="0.08333333333333333"></transition></state></states></ts>