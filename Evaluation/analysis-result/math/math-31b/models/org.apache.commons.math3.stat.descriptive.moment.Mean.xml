<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s4"><transition target="s5" action="org.apache.commons.math3.stat.descriptive.moment.Mean.evaluate(double[])" proba="0.14285714285714285"></transition><transition target="s10" action="org.apache.commons.math3.stat.descriptive.moment.Mean.evaluate(double[],int,int)" proba="0.2857142857142857"></transition><transition target="s7" action="org.apache.commons.math3.stat.descriptive.moment.Mean.evaluate(double[],double[],int,int)" proba="0.2857142857142857"></transition><transition target="sX" action="epsilon" proba="0.14285714285714285"></transition><transition target="s9" action="org.apache.commons.math3.stat.descriptive.moment.Mean.getResult()" proba="0.14285714285714285"></transition></state><state id="s5"><transition target="s5" action="org.apache.commons.math3.stat.descriptive.moment.Mean.evaluate(double[])" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.5"></transition></state><state id="s6"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s7"><transition target="s7" action="org.apache.commons.math3.stat.descriptive.moment.Mean.evaluate(double[],double[],int,int)" proba="0.3333333333333333"></transition><transition target="sX" action="epsilon" proba="0.6666666666666666"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="s9" action="org.apache.commons.math3.stat.descriptive.moment.Mean.getResult()" proba="1.0"></transition></state><state id="s9"><transition target="sX" action="epsilon" proba="0.8"></transition><transition target="s1" action="org.apache.commons.math3.stat.descriptive.moment.Mean.increment(double)" proba="0.2"></transition></state><state id="s11"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s10"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s12"><transition target="s12" action="org.apache.commons.math3.stat.descriptive.moment.Mean.test(double[],double[],int,int)" proba="0.6666666666666666"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition></state><state id="s0"><transition target="s4" action="org.apache.commons.math3.stat.descriptive.moment.Mean.&lt;init&gt;()" proba="0.4666666666666667"></transition><transition target="s11" action="org.apache.commons.math3.stat.descriptive.moment.Mean.copy(org.apache.commons.math3.stat.descriptive.moment.Mean,org.apache.commons.math3.stat.descriptive.moment.Mean)" proba="0.06666666666666667"></transition><transition target="s6" action="org.apache.commons.math3.stat.descriptive.moment.Mean.getN()" proba="0.06666666666666667"></transition><transition target="s8" action="org.apache.commons.math3.stat.descriptive.moment.Mean.&lt;init&gt;(org.apache.commons.math3.stat.descriptive.moment.FirstMoment)" proba="0.13333333333333333"></transition><transition target="s9" action="org.apache.commons.math3.stat.descriptive.moment.Mean.getResult()" proba="0.06666666666666667"></transition><transition target="s1" action="org.apache.commons.math3.stat.descriptive.moment.Mean.increment(double)" proba="0.06666666666666667"></transition><transition target="s2" action="org.apache.commons.math3.stat.descriptive.moment.Mean.test(double[],int,int)" proba="0.13333333333333333"></transition></state><state id="s1"><transition target="sX" action="epsilon" proba="0.5"></transition><transition target="s9" action="org.apache.commons.math3.stat.descriptive.moment.Mean.getResult()" proba="0.5"></transition></state><state id="s2"><transition target="s3" action="org.apache.commons.math3.stat.descriptive.moment.Mean.test(double[],int,int,boolean)" proba="0.1111111111111111"></transition><transition target="s12" action="org.apache.commons.math3.stat.descriptive.moment.Mean.test(double[],double[],int,int)" proba="0.1111111111111111"></transition><transition target="s2" action="org.apache.commons.math3.stat.descriptive.moment.Mean.test(double[],int,int)" proba="0.7777777777777778"></transition></state></states></ts>