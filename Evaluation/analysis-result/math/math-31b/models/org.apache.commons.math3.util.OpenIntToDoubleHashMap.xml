<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="org.apache.commons.math3.util.OpenIntToDoubleHashMap.get(int)" proba="0.12"></transition><transition target="sX" action="epsilon" proba="0.64"></transition><transition target="s1" action="org.apache.commons.math3.util.OpenIntToDoubleHashMap.remove(int)" proba="0.16"></transition><transition target="s2" action="org.apache.commons.math3.util.OpenIntToDoubleHashMap.size()" proba="0.08"></transition></state><state id="s4"><transition target="s4" action="org.apache.commons.math3.util.OpenIntToDoubleHashMap.iterator()" proba="0.08695652173913043"></transition><transition target="sX" action="epsilon" proba="0.6086956521739131"></transition><transition target="s8" action="org.apache.commons.math3.util.OpenIntToDoubleHashMap.containsKey(int)" proba="0.17391304347826086"></transition><transition target="s9" action="org.apache.commons.math3.util.OpenIntToDoubleHashMap.put(int,double)" proba="0.08695652173913043"></transition><transition target="s2" action="org.apache.commons.math3.util.OpenIntToDoubleHashMap.size()" proba="0.043478260869565216"></transition></state><state id="s5"><transition target="s11" action="org.apache.commons.math3.util.OpenIntToDoubleHashMap.access$200(org.apache.commons.math3.util.OpenIntToDoubleHashMap)" proba="0.25"></transition><transition target="s7" action="org.apache.commons.math3.util.OpenIntToDoubleHashMap.access$300(org.apache.commons.math3.util.OpenIntToDoubleHashMap)" proba="0.25"></transition><transition target="sX" action="epsilon" proba="0.25"></transition><transition target="s12" action="org.apache.commons.math3.util.OpenIntToDoubleHashMap.access$400(org.apache.commons.math3.util.OpenIntToDoubleHashMap)" proba="0.25"></transition></state><state id="s6"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s7"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="s3" action="org.apache.commons.math3.util.OpenIntToDoubleHashMap.get(int)" proba="0.3333333333333333"></transition><transition target="s8" action="org.apache.commons.math3.util.OpenIntToDoubleHashMap.containsKey(int)" proba="0.16666666666666666"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition><transition target="s1" action="org.apache.commons.math3.util.OpenIntToDoubleHashMap.remove(int)" proba="0.16666666666666666"></transition></state><state id="s9"><transition target="s3" action="org.apache.commons.math3.util.OpenIntToDoubleHashMap.get(int)" proba="0.09523809523809523"></transition><transition target="sX" action="epsilon" proba="0.47619047619047616"></transition><transition target="s8" action="org.apache.commons.math3.util.OpenIntToDoubleHashMap.containsKey(int)" proba="0.047619047619047616"></transition><transition target="s9" action="org.apache.commons.math3.util.OpenIntToDoubleHashMap.put(int,double)" proba="0.14285714285714285"></transition><transition target="s2" action="org.apache.commons.math3.util.OpenIntToDoubleHashMap.size()" proba="0.23809523809523808"></transition></state><state id="s11"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s10"><transition target="s3" action="org.apache.commons.math3.util.OpenIntToDoubleHashMap.get(int)" proba="0.16666666666666666"></transition><transition target="sX" action="epsilon" proba="0.16666666666666666"></transition><transition target="s9" action="org.apache.commons.math3.util.OpenIntToDoubleHashMap.put(int,double)" proba="0.5"></transition><transition target="s1" action="org.apache.commons.math3.util.OpenIntToDoubleHashMap.remove(int)" proba="0.16666666666666666"></transition></state><state id="s13"><transition target="s2" action="org.apache.commons.math3.util.OpenIntToDoubleHashMap.size()" proba="1.0"></transition></state><state id="s12"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s0"><transition target="s3" action="org.apache.commons.math3.util.OpenIntToDoubleHashMap.get(int)" proba="0.10909090909090909"></transition><transition target="s4" action="org.apache.commons.math3.util.OpenIntToDoubleHashMap.iterator()" proba="0.34545454545454546"></transition><transition target="s5" action="org.apache.commons.math3.util.OpenIntToDoubleHashMap.access$100(org.apache.commons.math3.util.OpenIntToDoubleHashMap)" proba="0.07272727272727272"></transition><transition target="s6" action="org.apache.commons.math3.util.OpenIntToDoubleHashMap.&lt;init&gt;(int)" proba="0.03636363636363636"></transition><transition target="s10" action="org.apache.commons.math3.util.OpenIntToDoubleHashMap.&lt;init&gt;()" proba="0.10909090909090909"></transition><transition target="s13" action="org.apache.commons.math3.util.OpenIntToDoubleHashMap.&lt;init&gt;(org.apache.commons.math3.util.OpenIntToDoubleHashMap)" proba="0.01818181818181818"></transition><transition target="s8" action="org.apache.commons.math3.util.OpenIntToDoubleHashMap.containsKey(int)" proba="0.05454545454545454"></transition><transition target="s9" action="org.apache.commons.math3.util.OpenIntToDoubleHashMap.put(int,double)" proba="0.10909090909090909"></transition><transition target="s1" action="org.apache.commons.math3.util.OpenIntToDoubleHashMap.remove(int)" proba="0.03636363636363636"></transition><transition target="s2" action="org.apache.commons.math3.util.OpenIntToDoubleHashMap.size()" proba="0.10909090909090909"></transition></state><state id="s1"><transition target="s8" action="org.apache.commons.math3.util.OpenIntToDoubleHashMap.containsKey(int)" proba="0.08333333333333333"></transition><transition target="sX" action="epsilon" proba="0.16666666666666666"></transition><transition target="s9" action="org.apache.commons.math3.util.OpenIntToDoubleHashMap.put(int,double)" proba="0.5"></transition><transition target="s2" action="org.apache.commons.math3.util.OpenIntToDoubleHashMap.size()" proba="0.25"></transition></state><state id="s2"><transition target="s3" action="org.apache.commons.math3.util.OpenIntToDoubleHashMap.get(int)" proba="0.45"></transition><transition target="s4" action="org.apache.commons.math3.util.OpenIntToDoubleHashMap.iterator()" proba="0.1"></transition><transition target="sX" action="epsilon" proba="0.1"></transition><transition target="s8" action="org.apache.commons.math3.util.OpenIntToDoubleHashMap.containsKey(int)" proba="0.05"></transition><transition target="s9" action="org.apache.commons.math3.util.OpenIntToDoubleHashMap.put(int,double)" proba="0.05"></transition><transition target="s1" action="org.apache.commons.math3.util.OpenIntToDoubleHashMap.remove(int)" proba="0.15"></transition><transition target="s2" action="org.apache.commons.math3.util.OpenIntToDoubleHashMap.size()" proba="0.1"></transition></state></states></ts>