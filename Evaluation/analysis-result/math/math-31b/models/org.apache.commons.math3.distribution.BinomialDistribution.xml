<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s5" action="org.apache.commons.math3.distribution.BinomialDistribution.cumulativeProbability(int)" proba="0.2"></transition><transition target="sX" action="epsilon" proba="0.8"></transition></state><state id="s4"><transition target="s4" action="org.apache.commons.math3.distribution.BinomialDistribution.probability(int)" proba="0.84"></transition><transition target="s5" action="org.apache.commons.math3.distribution.BinomialDistribution.cumulativeProbability(int)" proba="0.12"></transition><transition target="sX" action="epsilon" proba="0.04"></transition></state><state id="s5"><transition target="s4" action="org.apache.commons.math3.distribution.BinomialDistribution.probability(int)" proba="0.037037037037037035"></transition><transition target="s5" action="org.apache.commons.math3.distribution.BinomialDistribution.cumulativeProbability(int)" proba="0.7777777777777778"></transition><transition target="s6" action="org.apache.commons.math3.distribution.BinomialDistribution.inverseCumulativeProbability(double)" proba="0.14814814814814814"></transition><transition target="sX" action="epsilon" proba="0.037037037037037035"></transition></state><state id="s6"><transition target="s3" action="org.apache.commons.math3.distribution.BinomialDistribution.getSupportUpperBound()" proba="0.05"></transition><transition target="s6" action="org.apache.commons.math3.distribution.BinomialDistribution.inverseCumulativeProbability(double)" proba="0.7"></transition><transition target="sX" action="epsilon" proba="0.15"></transition><transition target="s2" action="org.apache.commons.math3.distribution.BinomialDistribution.getSupportLowerBound()" proba="0.1"></transition></state><state id="s7"><transition target="s8" action="org.apache.commons.math3.distribution.BinomialDistribution.getNumericalVariance()" proba="1.0"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="sX" action="epsilon" proba="0.75"></transition><transition target="s1" action="org.apache.commons.math3.distribution.BinomialDistribution.&lt;init&gt;(int,double)" proba="0.25"></transition></state><state id="s9"><transition target="s10" action="org.apache.commons.math3.distribution.BinomialDistribution.getProbabilityOfSuccess()" proba="1.0"></transition></state><state id="s11"><transition target="s6" action="org.apache.commons.math3.distribution.BinomialDistribution.inverseCumulativeProbability(double)" proba="1.0"></transition></state><state id="s10"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s13"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s12"><transition target="s13" action="org.apache.commons.math3.distribution.BinomialDistribution.sample(int)" proba="1.0"></transition></state><state id="s0"><transition target="s9" action="org.apache.commons.math3.distribution.BinomialDistribution.getNumberOfTrials()" proba="0.05555555555555555"></transition><transition target="s1" action="org.apache.commons.math3.distribution.BinomialDistribution.&lt;init&gt;(int,double)" proba="0.9444444444444444"></transition></state><state id="s1"><transition target="s4" action="org.apache.commons.math3.distribution.BinomialDistribution.probability(int)" proba="0.16666666666666666"></transition><transition target="s5" action="org.apache.commons.math3.distribution.BinomialDistribution.cumulativeProbability(int)" proba="0.05555555555555555"></transition><transition target="s11" action="org.apache.commons.math3.distribution.BinomialDistribution.cumulativeProbability(int,int)" proba="0.05555555555555555"></transition><transition target="s6" action="org.apache.commons.math3.distribution.BinomialDistribution.inverseCumulativeProbability(double)" proba="0.05555555555555555"></transition><transition target="s7" action="org.apache.commons.math3.distribution.BinomialDistribution.getNumericalMean()" proba="0.2222222222222222"></transition><transition target="sX" action="epsilon" proba="0.2222222222222222"></transition><transition target="s12" action="org.apache.commons.math3.distribution.BinomialDistribution.reseedRandomGenerator(long)" proba="0.05555555555555555"></transition><transition target="s2" action="org.apache.commons.math3.distribution.BinomialDistribution.getSupportLowerBound()" proba="0.16666666666666666"></transition></state><state id="s2"><transition target="s3" action="org.apache.commons.math3.distribution.BinomialDistribution.getSupportUpperBound()" proba="0.8"></transition><transition target="s5" action="org.apache.commons.math3.distribution.BinomialDistribution.cumulativeProbability(int)" proba="0.2"></transition></state></states></ts>