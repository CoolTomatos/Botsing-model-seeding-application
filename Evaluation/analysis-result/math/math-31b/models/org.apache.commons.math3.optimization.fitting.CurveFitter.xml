<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s4"><transition target="s5" action="org.apache.commons.math3.optimization.fitting.CurveFitter.addObservedPoint(double,double)" proba="1.0"></transition></state><state id="s5"><transition target="s5" action="org.apache.commons.math3.optimization.fitting.CurveFitter.addObservedPoint(double,double)" proba="0.7857142857142857"></transition><transition target="s6" action="org.apache.commons.math3.optimization.fitting.CurveFitter.fit(org.apache.commons.math3.analysis.ParametricUnivariateFunction,double[])" proba="0.21428571428571427"></transition></state><state id="s6"><transition target="s6" action="org.apache.commons.math3.optimization.fitting.CurveFitter.fit(org.apache.commons.math3.analysis.ParametricUnivariateFunction,double[])" proba="0.4"></transition><transition target="sX" action="epsilon" proba="0.6"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s0"><transition target="s4" action="org.apache.commons.math3.optimization.fitting.CurveFitter.&lt;init&gt;(org.apache.commons.math3.optimization.DifferentiableMultivariateVectorOptimizer)" proba="0.6"></transition><transition target="s1" action="org.apache.commons.math3.optimization.fitting.CurveFitter.access$000(org.apache.commons.math3.optimization.fitting.CurveFitter)" proba="0.4"></transition></state><state id="s1"><transition target="s3" action="org.apache.commons.math3.optimization.fitting.CurveFitter.iterator()" proba="0.5"></transition><transition target="s2" action="org.apache.commons.math3.optimization.fitting.CurveFitter.size()" proba="0.5"></transition></state><state id="s2"><transition target="s1" action="org.apache.commons.math3.optimization.fitting.CurveFitter.access$000(org.apache.commons.math3.optimization.fitting.CurveFitter)" proba="1.0"></transition></state></states></ts>