<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="sX" action="epsilon" proba="0.5"></transition><transition target="s1" action="org.apache.commons.math3.distribution.HypergeometricDistribution.&lt;init&gt;(int,int,int)" proba="0.5"></transition></state><state id="s4"><transition target="s5" action="org.apache.commons.math3.distribution.HypergeometricDistribution.getSupportUpperBound()" proba="1.0"></transition></state><state id="s5"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s6"><transition target="s7" action="org.apache.commons.math3.distribution.HypergeometricDistribution.cumulativeProbability(int)" proba="1.0"></transition></state><state id="s7"><transition target="s8" action="org.apache.commons.math3.distribution.HypergeometricDistribution.upperCumulativeProbability(int)" proba="1.0"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s9"><transition target="s10" action="org.apache.commons.math3.distribution.HypergeometricDistribution.getNumberOfSuccesses()" proba="1.0"></transition></state><state id="s11"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s10"><transition target="s11" action="org.apache.commons.math3.distribution.HypergeometricDistribution.getSampleSize()" proba="1.0"></transition></state><state id="s0"><transition target="s9" action="org.apache.commons.math3.distribution.HypergeometricDistribution.getPopulationSize()" proba="0.14285714285714285"></transition><transition target="s1" action="org.apache.commons.math3.distribution.HypergeometricDistribution.&lt;init&gt;(int,int,int)" proba="0.8571428571428571"></transition></state><state id="s1"><transition target="s4" action="org.apache.commons.math3.distribution.HypergeometricDistribution.getSupportLowerBound()" proba="0.42857142857142855"></transition><transition target="s6" action="org.apache.commons.math3.distribution.HypergeometricDistribution.probability(int)" proba="0.14285714285714285"></transition><transition target="s9" action="org.apache.commons.math3.distribution.HypergeometricDistribution.getPopulationSize()" proba="0.14285714285714285"></transition><transition target="s2" action="org.apache.commons.math3.distribution.HypergeometricDistribution.getNumericalMean()" proba="0.2857142857142857"></transition></state><state id="s2"><transition target="s3" action="org.apache.commons.math3.distribution.HypergeometricDistribution.getNumericalVariance()" proba="1.0"></transition></state></states></ts>