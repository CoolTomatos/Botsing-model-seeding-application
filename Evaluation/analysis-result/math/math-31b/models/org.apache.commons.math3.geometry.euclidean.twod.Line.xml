<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="org.apache.commons.math3.geometry.euclidean.twod.Line.toSpace(org.apache.commons.math3.geometry.Vector)" proba="0.5"></transition><transition target="s20" action="org.apache.commons.math3.geometry.euclidean.twod.Line.getReverse()" proba="0.07142857142857142"></transition><transition target="s4" action="org.apache.commons.math3.geometry.euclidean.twod.Line.toSubSpace(org.apache.commons.math3.geometry.Vector)" proba="0.07142857142857142"></transition><transition target="sX" action="epsilon" proba="0.35714285714285715"></transition></state><state id="s4"><transition target="s5" action="org.apache.commons.math3.geometry.euclidean.twod.Line.getX()" proba="0.782608695652174"></transition><transition target="s13" action="org.apache.commons.math3.geometry.euclidean.twod.Line.copySelf()" proba="0.043478260869565216"></transition><transition target="sX" action="epsilon" proba="0.17391304347826086"></transition></state><state id="s5"><transition target="s4" action="org.apache.commons.math3.geometry.euclidean.twod.Line.toSubSpace(org.apache.commons.math3.geometry.Vector)" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.3888888888888889"></transition><transition target="s12" action="org.apache.commons.math3.geometry.euclidean.twod.Line.getOffset(org.apache.commons.math3.geometry.Vector)" proba="0.1111111111111111"></transition></state><state id="s6"><transition target="s7" action="org.apache.commons.math3.geometry.euclidean.twod.Line.getAngle()" proba="1.0"></transition></state><state id="s7"><transition target="s4" action="org.apache.commons.math3.geometry.euclidean.twod.Line.toSubSpace(org.apache.commons.math3.geometry.Vector)" proba="0.3333333333333333"></transition><transition target="s7" action="org.apache.commons.math3.geometry.euclidean.twod.Line.getAngle()" proba="0.16666666666666666"></transition><transition target="sX" action="epsilon" proba="0.5"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s9"><transition target="s4" action="org.apache.commons.math3.geometry.euclidean.twod.Line.toSubSpace(org.apache.commons.math3.geometry.Vector)" proba="0.4"></transition><transition target="s7" action="org.apache.commons.math3.geometry.euclidean.twod.Line.getAngle()" proba="0.4"></transition><transition target="sX" action="epsilon" proba="0.2"></transition></state><state id="s20"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s11"><transition target="s3" action="org.apache.commons.math3.geometry.euclidean.twod.Line.toSpace(org.apache.commons.math3.geometry.Vector)" proba="0.5"></transition><transition target="s7" action="org.apache.commons.math3.geometry.euclidean.twod.Line.getAngle()" proba="0.25"></transition><transition target="sX" action="epsilon" proba="0.25"></transition></state><state id="s10"><transition target="s11" action="org.apache.commons.math3.geometry.euclidean.twod.Line.wholeHyperplane()" proba="0.5"></transition><transition target="s10" action="org.apache.commons.math3.geometry.euclidean.twod.Line.&lt;init&gt;(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,double)" proba="0.25"></transition><transition target="sX" action="epsilon" proba="0.25"></transition></state><state id="s13"><transition target="s13" action="org.apache.commons.math3.geometry.euclidean.twod.Line.copySelf()" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.5"></transition></state><state id="s12"><transition target="s4" action="org.apache.commons.math3.geometry.euclidean.twod.Line.toSubSpace(org.apache.commons.math3.geometry.Vector)" proba="0.2"></transition><transition target="s12" action="org.apache.commons.math3.geometry.euclidean.twod.Line.getOffset(org.apache.commons.math3.geometry.Vector)" proba="0.2"></transition><transition target="sX" action="epsilon" proba="0.4"></transition><transition target="s15" action="org.apache.commons.math3.geometry.euclidean.twod.Line.getPointAt(org.apache.commons.math3.geometry.euclidean.oned.Vector1D,double)" proba="0.2"></transition></state><state id="s15"><transition target="s4" action="org.apache.commons.math3.geometry.euclidean.twod.Line.toSubSpace(org.apache.commons.math3.geometry.Vector)" proba="1.0"></transition></state><state id="s14"><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition><transition target="s14" action="org.apache.commons.math3.geometry.euclidean.twod.Line.isParallelTo(org.apache.commons.math3.geometry.euclidean.twod.Line)" proba="0.6666666666666666"></transition></state><state id="s17"><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition><transition target="s16" action="org.apache.commons.math3.geometry.euclidean.twod.Line.access$000(org.apache.commons.math3.geometry.euclidean.twod.Line)" proba="0.3333333333333333"></transition><transition target="s18" action="org.apache.commons.math3.geometry.euclidean.twod.Line.access$200(org.apache.commons.math3.geometry.euclidean.twod.Line)" proba="0.3333333333333333"></transition></state><state id="s16"><transition target="s17" action="org.apache.commons.math3.geometry.euclidean.twod.Line.access$100(org.apache.commons.math3.geometry.euclidean.twod.Line)" proba="1.0"></transition></state><state id="s19"><transition target="sX" action="epsilon" proba="0.25"></transition><transition target="s19" action="org.apache.commons.math3.geometry.euclidean.twod.Line.contains(org.apache.commons.math3.geometry.euclidean.twod.Vector2D)" proba="0.75"></transition></state><state id="s18"><transition target="s16" action="org.apache.commons.math3.geometry.euclidean.twod.Line.access$000(org.apache.commons.math3.geometry.euclidean.twod.Line)" proba="1.0"></transition></state><state id="s0"><transition target="s3" action="org.apache.commons.math3.geometry.euclidean.twod.Line.toSpace(org.apache.commons.math3.geometry.Vector)" proba="0.0975609756097561"></transition><transition target="s4" action="org.apache.commons.math3.geometry.euclidean.twod.Line.toSubSpace(org.apache.commons.math3.geometry.Vector)" proba="0.04878048780487805"></transition><transition target="s11" action="org.apache.commons.math3.geometry.euclidean.twod.Line.wholeHyperplane()" proba="0.024390243902439025"></transition><transition target="s6" action="org.apache.commons.math3.geometry.euclidean.twod.Line.getOffset(org.apache.commons.math3.geometry.euclidean.twod.Line)" proba="0.04878048780487805"></transition><transition target="s10" action="org.apache.commons.math3.geometry.euclidean.twod.Line.&lt;init&gt;(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,double)" proba="0.07317073170731707"></transition><transition target="s9" action="org.apache.commons.math3.geometry.euclidean.twod.Line.intersection(org.apache.commons.math3.geometry.euclidean.twod.Line)" proba="0.0975609756097561"></transition><transition target="s16" action="org.apache.commons.math3.geometry.euclidean.twod.Line.access$000(org.apache.commons.math3.geometry.euclidean.twod.Line)" proba="0.024390243902439025"></transition><transition target="s1" action="org.apache.commons.math3.geometry.euclidean.twod.Line.getTransform(java.awt.geom.AffineTransform)" proba="0.07317073170731707"></transition><transition target="s2" action="org.apache.commons.math3.geometry.euclidean.twod.Line.&lt;init&gt;(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D)" proba="0.5121951219512195"></transition></state><state id="s1"><transition target="sX" action="epsilon" proba="0.75"></transition><transition target="s1" action="org.apache.commons.math3.geometry.euclidean.twod.Line.getTransform(java.awt.geom.AffineTransform)" proba="0.25"></transition></state><state id="s2"><transition target="s3" action="org.apache.commons.math3.geometry.euclidean.twod.Line.toSpace(org.apache.commons.math3.geometry.Vector)" proba="0.047619047619047616"></transition><transition target="s4" action="org.apache.commons.math3.geometry.euclidean.twod.Line.toSubSpace(org.apache.commons.math3.geometry.Vector)" proba="0.23809523809523808"></transition><transition target="s11" action="org.apache.commons.math3.geometry.euclidean.twod.Line.wholeHyperplane()" proba="0.047619047619047616"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition><transition target="s8" action="org.apache.commons.math3.geometry.euclidean.twod.Line.getOriginOffset()" proba="0.09523809523809523"></transition><transition target="s12" action="org.apache.commons.math3.geometry.euclidean.twod.Line.getOffset(org.apache.commons.math3.geometry.Vector)" proba="0.09523809523809523"></transition><transition target="s9" action="org.apache.commons.math3.geometry.euclidean.twod.Line.intersection(org.apache.commons.math3.geometry.euclidean.twod.Line)" proba="0.047619047619047616"></transition><transition target="s14" action="org.apache.commons.math3.geometry.euclidean.twod.Line.isParallelTo(org.apache.commons.math3.geometry.euclidean.twod.Line)" proba="0.047619047619047616"></transition><transition target="s19" action="org.apache.commons.math3.geometry.euclidean.twod.Line.contains(org.apache.commons.math3.geometry.euclidean.twod.Vector2D)" proba="0.047619047619047616"></transition></state></states></ts>