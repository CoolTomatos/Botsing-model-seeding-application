<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="org.apache.commons.math.optimization.fitting.PolynomialFitter.addObservedPoint(double,double,double)" proba="0.717948717948718"></transition><transition target="s4" action="org.apache.commons.math.optimization.fitting.PolynomialFitter.fit()" proba="0.1794871794871795"></transition><transition target="sX" action="epsilon" proba="0.10256410256410256"></transition></state><state id="s4"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s5"><transition target="s3" action="org.apache.commons.math.optimization.fitting.PolynomialFitter.addObservedPoint(double,double,double)" proba="1.0"></transition></state><state id="s6"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s0"><transition target="s5" action="org.apache.commons.math.optimization.fitting.PolynomialFitter.&lt;init&gt;(int,org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer)" proba="0.5294117647058824"></transition><transition target="s6" action="org.apache.commons.math.optimization.fitting.PolynomialFitter.&lt;init&gt;(boolean)" proba="0.058823529411764705"></transition><transition target="s1" action="org.apache.commons.math.optimization.fitting.PolynomialFitter.&lt;init&gt;()" proba="0.29411764705882354"></transition><transition target="s2" action="org.apache.commons.math.optimization.fitting.PolynomialFitter.clearObservations()" proba="0.11764705882352941"></transition></state><state id="s1"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s2"><transition target="s3" action="org.apache.commons.math.optimization.fitting.PolynomialFitter.addObservedPoint(double,double,double)" proba="1.0"></transition></state></states></ts>