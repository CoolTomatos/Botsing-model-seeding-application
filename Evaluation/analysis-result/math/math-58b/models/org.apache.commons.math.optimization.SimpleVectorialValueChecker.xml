<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s4"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s5"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s6"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s0"><transition target="s3" action="org.apache.commons.math.optimization.SimpleVectorialValueChecker.&lt;init&gt;(double,double)" proba="0.008264462809917356"></transition><transition target="s4" action="org.apache.commons.math.optimization.SimpleVectorialValueChecker.&lt;init&gt;(double,double,double,double,double)" proba="0.008264462809917356"></transition><transition target="s5" action="org.apache.commons.math.optimization.SimpleVectorialValueChecker.&lt;init&gt;(boolean)" proba="0.008264462809917356"></transition><transition target="s1" action="org.apache.commons.math.optimization.SimpleVectorialValueChecker.&lt;init&gt;()" proba="0.8264462809917356"></transition><transition target="s2" action="org.apache.commons.math.optimization.SimpleVectorialValueChecker.&lt;init&gt;(double,double,double)" proba="0.1487603305785124"></transition></state><state id="s1"><transition target="s6" action="org.apache.commons.math.optimization.SimpleVectorialValueChecker.setConvergenceChecker(org.apache.commons.math.optimization.ConvergenceChecker&lt;org.apache.commons.math.optimization.VectorialPointValuePair&gt;)" proba="0.01"></transition><transition target="sX" action="epsilon" proba="0.99"></transition></state><state id="s2"><transition target="sX" action="epsilon" proba="1.0"></transition></state></states></ts>