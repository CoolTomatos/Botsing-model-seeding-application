<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="[D.addObservedPoint(double,double)" proba="0.921875"></transition><transition target="s6" action="[D.fit()" proba="0.015625"></transition><transition target="sX" action="epsilon" proba="0.0625"></transition></state><state id="s4"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s5"><transition target="s5" action="[D.addObservedPoint(double,double,double)" proba="0.8888888888888888"></transition><transition target="sX" action="epsilon" proba="0.1111111111111111"></transition></state><state id="s6"><transition target="s7" action="[D.getObservations()" proba="1.0"></transition></state><state id="s7"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s0"><transition target="s4" action="[D.&lt;init&gt;()" proba="0.11290322580645161"></transition><transition target="s1" action="[D.clone()" proba="0.782258064516129"></transition><transition target="s2" action="[D.&lt;init&gt;(org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer)" proba="0.10483870967741936"></transition></state><state id="s1"><transition target="sX" action="epsilon" proba="0.97"></transition><transition target="s1" action="[D.clone()" proba="0.03"></transition></state><state id="s2"><transition target="s3" action="[D.addObservedPoint(double,double)" proba="0.7692307692307693"></transition><transition target="s5" action="[D.addObservedPoint(double,double,double)" proba="0.23076923076923078"></transition></state></states></ts>