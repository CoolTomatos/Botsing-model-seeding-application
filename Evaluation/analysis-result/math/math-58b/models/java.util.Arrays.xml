<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s4"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s5"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s6"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s7"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="s5" action="java.util.Arrays.sort(double[])" proba="0.043478260869565216"></transition><transition target="s8" action="java.util.Arrays.fill(double[],double)" proba="0.2608695652173913"></transition><transition target="sX" action="epsilon" proba="0.6956521739130435"></transition></state><state id="s9"><transition target="sX" action="epsilon" proba="0.9"></transition><transition target="s9" action="java.util.Arrays.fill(java.lang.Object[],java.lang.Object)" proba="0.1"></transition></state><state id="s11"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s10"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s13"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s12"><transition target="sX" action="epsilon" proba="0.8"></transition><transition target="s12" action="java.util.Arrays.equals(double[],double[])" proba="0.2"></transition></state><state id="s15"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s14"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s0"><transition target="s3" action="java.util.Arrays.fill(int[],int)" proba="0.056338028169014086"></transition><transition target="s4" action="java.util.Arrays.fill(double[],int,int,double)" proba="0.08450704225352113"></transition><transition target="s5" action="java.util.Arrays.sort(double[])" proba="0.04225352112676056"></transition><transition target="s6" action="java.util.Arrays.sort(java.lang.Object[],java.util.Comparator)" proba="0.07042253521126761"></transition><transition target="s7" action="java.util.Arrays.hashCode(java.lang.Object[])" proba="0.014084507042253521"></transition><transition target="s8" action="java.util.Arrays.fill(double[],double)" proba="0.23943661971830985"></transition><transition target="s9" action="java.util.Arrays.fill(java.lang.Object[],java.lang.Object)" proba="0.1267605633802817"></transition><transition target="s11" action="java.util.Arrays.hashCode(int[])" proba="0.014084507042253521"></transition><transition target="s10" action="java.util.Arrays.toString(int[])" proba="0.014084507042253521"></transition><transition target="s13" action="java.util.Arrays.equals(java.lang.Object[],java.lang.Object[])" proba="0.014084507042253521"></transition><transition target="s12" action="java.util.Arrays.equals(double[],double[])" proba="0.056338028169014086"></transition><transition target="s15" action="java.util.Arrays.binarySearch(double[],double)" proba="0.028169014084507043"></transition><transition target="s14" action="java.util.Arrays.sort(java.lang.Object[])" proba="0.028169014084507043"></transition><transition target="s1" action="java.util.Arrays.asList(java.lang.Object[])" proba="0.15492957746478872"></transition><transition target="s2" action="java.util.Arrays.hashCode(double[])" proba="0.056338028169014086"></transition></state><state id="s1"><transition target="sX" action="epsilon" proba="0.6875"></transition><transition target="s1" action="java.util.Arrays.asList(java.lang.Object[])" proba="0.3125"></transition></state><state id="s2"><transition target="s11" action="java.util.Arrays.hashCode(int[])" proba="0.2"></transition><transition target="sX" action="epsilon" proba="0.6"></transition><transition target="s2" action="java.util.Arrays.hashCode(double[])" proba="0.2"></transition></state></states></ts>