<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="org.apache.commons.math.optimization.VectorialPointValuePair.getValue()" proba="0.4"></transition><transition target="sX" action="epsilon" proba="0.6"></transition></state><state id="s4"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s5"><transition target="s5" action="org.apache.commons.math.optimization.VectorialPointValuePair.&lt;init&gt;(double[],double[])" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.5"></transition></state><state id="s6"><transition target="s6" action="org.apache.commons.math.optimization.VectorialPointValuePair.getPointRef()" proba="0.47058823529411764"></transition><transition target="sX" action="epsilon" proba="0.5294117647058824"></transition></state><state id="s7"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s9"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s11"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s10"><transition target="s11" action="org.apache.commons.math.optimization.VectorialPointValuePair.setConvergenceChecker(org.apache.commons.math.optimization.ConvergenceChecker&lt;org.apache.commons.math.optimization.VectorialPointValuePair&gt;)" proba="1.0"></transition></state><state id="s0"><transition target="s4" action="org.apache.commons.math.optimization.VectorialPointValuePair.&lt;init&gt;(double,double,double)" proba="0.1956521739130435"></transition><transition target="s5" action="org.apache.commons.math.optimization.VectorialPointValuePair.&lt;init&gt;(double[],double[])" proba="0.021739130434782608"></transition><transition target="s6" action="org.apache.commons.math.optimization.VectorialPointValuePair.getPointRef()" proba="0.09782608695652174"></transition><transition target="s10" action="org.apache.commons.math.optimization.VectorialPointValuePair.&lt;init&gt;(double,double)" proba="0.010869565217391304"></transition><transition target="s7" action="org.apache.commons.math.optimization.VectorialPointValuePair.getValueRef()" proba="0.03260869565217391"></transition><transition target="s8" action="org.apache.commons.math.optimization.VectorialPointValuePair.&lt;init&gt;(boolean)" proba="0.010869565217391304"></transition><transition target="s9" action="org.apache.commons.math.optimization.VectorialPointValuePair.&lt;init&gt;(double,double,double,double,double)" proba="0.021739130434782608"></transition><transition target="s1" action="org.apache.commons.math.optimization.VectorialPointValuePair.getPoint()" proba="0.20652173913043478"></transition><transition target="s2" action="org.apache.commons.math.optimization.VectorialPointValuePair.&lt;init&gt;()" proba="0.40217391304347827"></transition></state><state id="s1"><transition target="s3" action="org.apache.commons.math.optimization.VectorialPointValuePair.getValue()" proba="0.12"></transition><transition target="sX" action="epsilon" proba="0.26"></transition><transition target="s1" action="org.apache.commons.math.optimization.VectorialPointValuePair.getPoint()" proba="0.62"></transition></state><state id="s2"><transition target="sX" action="epsilon" proba="1.0"></transition></state></states></ts>