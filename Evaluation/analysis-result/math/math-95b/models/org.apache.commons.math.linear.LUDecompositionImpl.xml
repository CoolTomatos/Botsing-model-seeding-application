<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s4" action="org.apache.commons.math.linear.LUDecompositionImpl.getU()" proba="0.8181818181818182"></transition><transition target="s7" action="org.apache.commons.math.linear.LUDecompositionImpl.getRowDimension()" proba="0.09090909090909091"></transition><transition target="s8" action="org.apache.commons.math.linear.LUDecompositionImpl.getColumnDimension()" proba="0.09090909090909091"></transition></state><state id="s4"><transition target="s5" action="org.apache.commons.math.linear.LUDecompositionImpl.getP()" proba="0.8181818181818182"></transition><transition target="s7" action="org.apache.commons.math.linear.LUDecompositionImpl.getRowDimension()" proba="0.09090909090909091"></transition><transition target="s8" action="org.apache.commons.math.linear.LUDecompositionImpl.getColumnDimension()" proba="0.09090909090909091"></transition></state><state id="s5"><transition target="s6" action="org.apache.commons.math.linear.LUDecompositionImpl.getPivot()" proba="0.18181818181818182"></transition><transition target="s7" action="org.apache.commons.math.linear.LUDecompositionImpl.getRowDimension()" proba="0.09090909090909091"></transition><transition target="sX" action="epsilon" proba="0.2727272727272727"></transition><transition target="s8" action="org.apache.commons.math.linear.LUDecompositionImpl.getColumnDimension()" proba="0.09090909090909091"></transition><transition target="s1" action="org.apache.commons.math.linear.LUDecompositionImpl.&lt;init&gt;(org.apache.commons.math.linear.RealMatrix)" proba="0.36363636363636365"></transition></state><state id="s6"><transition target="s3" action="org.apache.commons.math.linear.LUDecompositionImpl.getL()" proba="1.0"></transition></state><state id="s7"><transition target="s3" action="org.apache.commons.math.linear.LUDecompositionImpl.getL()" proba="0.3333333333333333"></transition><transition target="s4" action="org.apache.commons.math.linear.LUDecompositionImpl.getU()" proba="0.3333333333333333"></transition><transition target="s5" action="org.apache.commons.math.linear.LUDecompositionImpl.getP()" proba="0.3333333333333333"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="s4" action="org.apache.commons.math.linear.LUDecompositionImpl.getU()" proba="0.3333333333333333"></transition><transition target="s5" action="org.apache.commons.math.linear.LUDecompositionImpl.getP()" proba="0.3333333333333333"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition></state><state id="s9"><transition target="s10" action="org.apache.commons.math.linear.LUDecompositionImpl.subtract(org.apache.commons.math.linear.RealMatrix)" proba="0.3333333333333333"></transition><transition target="s12" action="org.apache.commons.math.linear.LUDecompositionImpl.solve(double[])" proba="0.6666666666666666"></transition></state><state id="s11"><transition target="s12" action="org.apache.commons.math.linear.LUDecompositionImpl.solve(double[])" proba="1.0"></transition></state><state id="s10"><transition target="s11" action="org.apache.commons.math.linear.LUDecompositionImpl.getNorm()" proba="1.0"></transition></state><state id="s13"><transition target="s13" action="org.apache.commons.math.linear.LUDecompositionImpl.solve(org.apache.commons.math.linear.RealVector)" proba="0.4"></transition><transition target="sX" action="epsilon" proba="0.6"></transition></state><state id="s12"><transition target="s13" action="org.apache.commons.math.linear.LUDecompositionImpl.solve(org.apache.commons.math.linear.RealVector)" proba="1.0"></transition></state><state id="s0"><transition target="s1" action="org.apache.commons.math.linear.LUDecompositionImpl.&lt;init&gt;(org.apache.commons.math.linear.RealMatrix)" proba="1.0"></transition></state><state id="s1"><transition target="s3" action="org.apache.commons.math.linear.LUDecompositionImpl.getL()" proba="0.42857142857142855"></transition><transition target="s9" action="org.apache.commons.math.linear.LUDecompositionImpl.solve(org.apache.commons.math.linear.RealMatrix)" proba="0.21428571428571427"></transition><transition target="s2" action="org.apache.commons.math.linear.LUDecompositionImpl.isNonSingular()" proba="0.35714285714285715"></transition></state><state id="s2"><transition target="s3" action="org.apache.commons.math.linear.LUDecompositionImpl.getL()" proba="0.4"></transition><transition target="sX" action="epsilon" proba="0.2"></transition><transition target="s1" action="org.apache.commons.math.linear.LUDecompositionImpl.&lt;init&gt;(org.apache.commons.math.linear.RealMatrix)" proba="0.4"></transition></state></states></ts>