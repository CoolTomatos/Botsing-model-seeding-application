<?xml version="1.0"?><ts><start>s0</start><states><state id="s71"><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition><transition target="s71" action="org.apache.commons.math.util.MathUtils.linearCombination(double,double,double,double)" proba="0.6666666666666666"></transition></state><state id="s70"><transition target="sX" action="epsilon" proba="0.13333333333333333"></transition><transition target="s37" action="org.apache.commons.math.util.MathUtils.equalsIncludingNaN(float,float)" proba="0.06666666666666667"></transition><transition target="s70" action="org.apache.commons.math.util.MathUtils.equalsIncludingNaN(double[],double[])" proba="0.8"></transition></state><state id="s73"><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition><transition target="s73" action="org.apache.commons.math.util.MathUtils.sign(short)" proba="0.6666666666666666"></transition></state><state id="s72"><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition><transition target="s72" action="org.apache.commons.math.util.MathUtils.sign(long)" proba="0.6666666666666666"></transition></state><state id="s31"><transition target="s31" action="org.apache.commons.math.util.MathUtils.pow(long,long)" proba="0.6666666666666666"></transition><transition target="s32" action="org.apache.commons.math.util.MathUtils.pow(java.math.BigInteger,int)" proba="0.3333333333333333"></transition></state><state id="s75"><transition target="s75" action="org.apache.commons.math.util.MathUtils.equals(double[],double[])" proba="0.8888888888888888"></transition><transition target="sX" action="epsilon" proba="0.1111111111111111"></transition></state><state id="s30"><transition target="s31" action="org.apache.commons.math.util.MathUtils.pow(long,long)" proba="0.3333333333333333"></transition><transition target="s30" action="org.apache.commons.math.util.MathUtils.pow(long,int)" proba="0.6666666666666666"></transition></state><state id="s74"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s33"><transition target="s33" action="org.apache.commons.math.util.MathUtils.pow(java.math.BigInteger,long)" proba="0.625"></transition><transition target="s21" action="org.apache.commons.math.util.MathUtils.pow(java.math.BigInteger,java.math.BigInteger)" proba="0.25"></transition><transition target="sX" action="epsilon" proba="0.125"></transition></state><state id="s77"><transition target="s77" action="org.apache.commons.math.util.MathUtils.linearCombination(double,double,double,double,double,double,double,double)" proba="0.6666666666666666"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition></state><state id="s32"><transition target="s33" action="org.apache.commons.math.util.MathUtils.pow(java.math.BigInteger,long)" proba="0.5"></transition><transition target="s32" action="org.apache.commons.math.util.MathUtils.pow(java.math.BigInteger,int)" proba="0.5"></transition></state><state id="s76"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s35"><transition target="s11" action="org.apache.commons.math.util.MathUtils.hash(double)" proba="0.05555555555555555"></transition><transition target="s35" action="org.apache.commons.math.util.MathUtils.hash(double[])" proba="0.7222222222222222"></transition><transition target="sX" action="epsilon" proba="0.2222222222222222"></transition></state><state id="s79"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s34"><transition target="s34" action="org.apache.commons.math.util.MathUtils.indicator(long)" proba="0.6666666666666666"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition></state><state id="s78"><transition target="s78" action="org.apache.commons.math.util.MathUtils.lcm(long,long)" proba="0.9375"></transition><transition target="sX" action="epsilon" proba="0.0625"></transition></state><state id="s37"><transition target="sX" action="epsilon" proba="0.25"></transition><transition target="s36" action="org.apache.commons.math.util.MathUtils.equalsIncludingNaN(double,double)" proba="0.5"></transition><transition target="s70" action="org.apache.commons.math.util.MathUtils.equalsIncludingNaN(double[],double[])" proba="0.25"></transition></state><state id="s36"><transition target="sX" action="epsilon" proba="0.2"></transition><transition target="s37" action="org.apache.commons.math.util.MathUtils.equalsIncludingNaN(float,float)" proba="0.15"></transition><transition target="s36" action="org.apache.commons.math.util.MathUtils.equalsIncludingNaN(double,double)" proba="0.65"></transition></state><state id="s39"><transition target="s39" action="org.apache.commons.math.util.MathUtils.round(double,int,int)" proba="0.9642857142857143"></transition><transition target="s38" action="org.apache.commons.math.util.MathUtils.round(double,int)" proba="0.03571428571428571"></transition></state><state id="s38"><transition target="sX" action="epsilon" proba="0.05555555555555555"></transition><transition target="s39" action="org.apache.commons.math.util.MathUtils.round(double,int,int)" proba="0.1111111111111111"></transition><transition target="s38" action="org.apache.commons.math.util.MathUtils.round(double,int)" proba="0.8333333333333334"></transition></state><state id="s0"><transition target="s71" action="org.apache.commons.math.util.MathUtils.linearCombination(double,double,double,double)" proba="0.008658008658008658"></transition><transition target="s70" action="org.apache.commons.math.util.MathUtils.equalsIncludingNaN(double[],double[])" proba="0.008658008658008658"></transition><transition target="s73" action="org.apache.commons.math.util.MathUtils.sign(short)" proba="0.004329004329004329"></transition><transition target="s72" action="org.apache.commons.math.util.MathUtils.sign(long)" proba="0.004329004329004329"></transition><transition target="s75" action="org.apache.commons.math.util.MathUtils.equals(double[],double[])" proba="0.004329004329004329"></transition><transition target="s74" action="org.apache.commons.math.util.MathUtils.checkOrder(double[],org.apache.commons.math.util.MathUtils$OrderDirection,boolean,boolean)" proba="0.004329004329004329"></transition><transition target="s33" action="org.apache.commons.math.util.MathUtils.pow(java.math.BigInteger,long)" proba="0.004329004329004329"></transition><transition target="s77" action="org.apache.commons.math.util.MathUtils.linearCombination(double,double,double,double,double,double,double,double)" proba="0.004329004329004329"></transition><transition target="s76" action="org.apache.commons.math.util.MathUtils.checkNotNull(java.lang.Object,org.apache.commons.math.exception.util.Localizable,java.lang.Object[])" proba="0.004329004329004329"></transition><transition target="s35" action="org.apache.commons.math.util.MathUtils.hash(double[])" proba="0.017316017316017316"></transition><transition target="s79" action="org.apache.commons.math.util.MathUtils.distance1(int[],int[])" proba="0.004329004329004329"></transition><transition target="s34" action="org.apache.commons.math.util.MathUtils.indicator(long)" proba="0.004329004329004329"></transition><transition target="s78" action="org.apache.commons.math.util.MathUtils.lcm(long,long)" proba="0.004329004329004329"></transition><transition target="s36" action="org.apache.commons.math.util.MathUtils.equalsIncludingNaN(double,double)" proba="0.021645021645021644"></transition><transition target="s38" action="org.apache.commons.math.util.MathUtils.round(double,int)" proba="0.004329004329004329"></transition><transition target="s1" action="org.apache.commons.math.util.MathUtils.equals(double,double,double)" proba="0.021645021645021644"></transition><transition target="s2" action="org.apache.commons.math.util.MathUtils.lcm(int,int)" proba="0.004329004329004329"></transition><transition target="s3" action="org.apache.commons.math.util.MathUtils.checkOrder(double[])" proba="0.047619047619047616"></transition><transition target="s4" action="org.apache.commons.math.util.MathUtils.copyOf(double[])" proba="0.021645021645021644"></transition><transition target="s5" action="org.apache.commons.math.util.MathUtils.copyOf(double[],int)" proba="0.012987012987012988"></transition><transition target="s6" action="org.apache.commons.math.util.MathUtils.compareTo(double,double,double)" proba="0.021645021645021644"></transition><transition target="s7" action="org.apache.commons.math.util.MathUtils.gcd(int,int)" proba="0.025974025974025976"></transition><transition target="s8" action="org.apache.commons.math.util.MathUtils.equalsIncludingNaN(double,double,double)" proba="0.008658008658008658"></transition><transition target="s9" action="org.apache.commons.math.util.MathUtils.checkNotNull(java.lang.Object)" proba="0.2077922077922078"></transition><transition target="s80" action="org.apache.commons.math.util.MathUtils.sign(byte)" proba="0.004329004329004329"></transition><transition target="s82" action="org.apache.commons.math.util.MathUtils.indicator(short)" proba="0.004329004329004329"></transition><transition target="s81" action="org.apache.commons.math.util.MathUtils.equalsIncludingNaN(double,double,int)" proba="0.004329004329004329"></transition><transition target="s40" action="org.apache.commons.math.util.MathUtils.indicator(byte)" proba="0.004329004329004329"></transition><transition target="s42" action="org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(int,int)" proba="0.008658008658008658"></transition><transition target="s41" action="org.apache.commons.math.util.MathUtils.binomialCoefficient(int,int)" proba="0.012987012987012988"></transition><transition target="s44" action="org.apache.commons.math.util.MathUtils.sortInPlace(double[],double[][])" proba="0.012987012987012988"></transition><transition target="s43" action="org.apache.commons.math.util.MathUtils.binomialCoefficientLog(int,int)" proba="0.004329004329004329"></transition><transition target="s45" action="org.apache.commons.math.util.MathUtils.factorial(int)" proba="0.008658008658008658"></transition><transition target="s48" action="org.apache.commons.math.util.MathUtils.gcd(long,long)" proba="0.004329004329004329"></transition><transition target="s47" action="org.apache.commons.math.util.MathUtils.addAndCheck(int,int)" proba="0.004329004329004329"></transition><transition target="s49" action="org.apache.commons.math.util.MathUtils.equals(double,double)" proba="0.008658008658008658"></transition><transition target="s51" action="org.apache.commons.math.util.MathUtils.log(double,double)" proba="0.004329004329004329"></transition><transition target="s50" action="org.apache.commons.math.util.MathUtils.mulAndCheck(int,int)" proba="0.004329004329004329"></transition><transition target="s53" action="org.apache.commons.math.util.MathUtils.indicator(float)" proba="0.004329004329004329"></transition><transition target="s52" action="org.apache.commons.math.util.MathUtils.reduce(double,double,double)" proba="0.008658008658008658"></transition><transition target="s11" action="org.apache.commons.math.util.MathUtils.hash(double)" proba="0.03896103896103896"></transition><transition target="s55" action="org.apache.commons.math.util.MathUtils.distanceInf(int[],int[])" proba="0.004329004329004329"></transition><transition target="s10" action="org.apache.commons.math.util.MathUtils.normalizeAngle(double,double)" proba="0.047619047619047616"></transition><transition target="s13" action="org.apache.commons.math.util.MathUtils.sinh(double)" proba="0.012987012987012988"></transition><transition target="s57" action="org.apache.commons.math.util.MathUtils.distance(int[],int[])" proba="0.008658008658008658"></transition><transition target="s12" action="org.apache.commons.math.util.MathUtils.cosh(double)" proba="0.030303030303030304"></transition><transition target="s56" action="org.apache.commons.math.util.MathUtils.subAndCheck(int,int)" proba="0.008658008658008658"></transition><transition target="s15" action="org.apache.commons.math.util.MathUtils.copyOf(int[],int)" proba="0.017316017316017316"></transition><transition target="s59" action="org.apache.commons.math.util.MathUtils.normalizeArray(double[],double)" proba="0.008658008658008658"></transition><transition target="s14" action="org.apache.commons.math.util.MathUtils.copyOf(int[])" proba="0.021645021645021644"></transition><transition target="s58" action="org.apache.commons.math.util.MathUtils.distance1(double[],double[])" proba="0.004329004329004329"></transition><transition target="s17" action="org.apache.commons.math.util.MathUtils.compareTo(double,double,int)" proba="0.017316017316017316"></transition><transition target="s16" action="org.apache.commons.math.util.MathUtils.sign(int)" proba="0.008658008658008658"></transition><transition target="s19" action="org.apache.commons.math.util.MathUtils.subAndCheck(long,long)" proba="0.008658008658008658"></transition><transition target="s18" action="org.apache.commons.math.util.MathUtils.checkFinite(double)" proba="0.008658008658008658"></transition><transition target="s60" action="org.apache.commons.math.util.MathUtils.sign(float)" proba="0.004329004329004329"></transition><transition target="s62" action="org.apache.commons.math.util.MathUtils.round(float,int)" proba="0.004329004329004329"></transition><transition target="s61" action="org.apache.commons.math.util.MathUtils.addAndCheck(long,long)" proba="0.012987012987012988"></transition><transition target="s20" action="org.apache.commons.math.util.MathUtils.factorialLog(int)" proba="0.004329004329004329"></transition><transition target="s64" action="org.apache.commons.math.util.MathUtils.indicator(double)" proba="0.008658008658008658"></transition><transition target="s22" action="org.apache.commons.math.util.MathUtils.linearCombination(double,double,double,double,double,double)" proba="0.017316017316017316"></transition><transition target="s66" action="org.apache.commons.math.util.MathUtils.checkOrder(double[],org.apache.commons.math.util.MathUtils$OrderDirection,boolean)" proba="0.004329004329004329"></transition><transition target="s21" action="org.apache.commons.math.util.MathUtils.pow(java.math.BigInteger,java.math.BigInteger)" proba="0.004329004329004329"></transition><transition target="s65" action="org.apache.commons.math.util.MathUtils.indicator(int)" proba="0.004329004329004329"></transition><transition target="s24" action="org.apache.commons.math.util.MathUtils.sign(double)" proba="0.012987012987012988"></transition><transition target="s68" action="org.apache.commons.math.util.MathUtils.distance(double[],double[])" proba="0.004329004329004329"></transition><transition target="s67" action="org.apache.commons.math.util.MathUtils.distanceInf(double[],double[])" proba="0.004329004329004329"></transition><transition target="s25" action="org.apache.commons.math.util.MathUtils.equals(float,float)" proba="0.004329004329004329"></transition><transition target="s69" action="org.apache.commons.math.util.MathUtils.mulAndCheck(long,long)" proba="0.008658008658008658"></transition><transition target="s28" action="org.apache.commons.math.util.MathUtils.pow(int,int)" proba="0.004329004329004329"></transition><transition target="s27" action="org.apache.commons.math.util.MathUtils.equals(double,double,int)" proba="0.06926406926406926"></transition></state><state id="s1"><transition target="sX" action="epsilon" proba="0.3125"></transition><transition target="s1" action="org.apache.commons.math.util.MathUtils.equals(double,double,double)" proba="0.6875"></transition></state><state id="s2"><transition target="sX" action="epsilon" proba="0.07142857142857142"></transition><transition target="s2" action="org.apache.commons.math.util.MathUtils.lcm(int,int)" proba="0.9285714285714286"></transition></state><state id="s3"><transition target="s3" action="org.apache.commons.math.util.MathUtils.checkOrder(double[])" proba="0.3888888888888889"></transition><transition target="s4" action="org.apache.commons.math.util.MathUtils.copyOf(double[])" proba="0.05555555555555555"></transition><transition target="s52" action="org.apache.commons.math.util.MathUtils.reduce(double,double,double)" proba="0.05555555555555555"></transition><transition target="sX" action="epsilon" proba="0.5"></transition></state><state id="s4"><transition target="s4" action="org.apache.commons.math.util.MathUtils.copyOf(double[])" proba="0.3333333333333333"></transition><transition target="sX" action="epsilon" proba="0.6666666666666666"></transition></state><state id="s5"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s6"><transition target="s6" action="org.apache.commons.math.util.MathUtils.compareTo(double,double,double)" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.5"></transition></state><state id="s7"><transition target="s7" action="org.apache.commons.math.util.MathUtils.gcd(int,int)" proba="0.7407407407407407"></transition><transition target="sX" action="epsilon" proba="0.1111111111111111"></transition><transition target="s48" action="org.apache.commons.math.util.MathUtils.gcd(long,long)" proba="0.037037037037037035"></transition><transition target="s50" action="org.apache.commons.math.util.MathUtils.mulAndCheck(int,int)" proba="0.1111111111111111"></transition></state><state id="s8"><transition target="sX" action="epsilon" proba="0.2"></transition><transition target="s8" action="org.apache.commons.math.util.MathUtils.equalsIncludingNaN(double,double,double)" proba="0.8"></transition></state><state id="s9"><transition target="sX" action="epsilon" proba="0.631578947368421"></transition><transition target="s9" action="org.apache.commons.math.util.MathUtils.checkNotNull(java.lang.Object)" proba="0.3684210526315789"></transition></state><state id="s80"><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition><transition target="s80" action="org.apache.commons.math.util.MathUtils.sign(byte)" proba="0.6666666666666666"></transition></state><state id="s82"><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition><transition target="s82" action="org.apache.commons.math.util.MathUtils.indicator(short)" proba="0.6666666666666666"></transition></state><state id="s81"><transition target="sX" action="epsilon" proba="0.043478260869565216"></transition><transition target="s81" action="org.apache.commons.math.util.MathUtils.equalsIncludingNaN(double,double,int)" proba="0.9565217391304348"></transition></state><state id="s40"><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition><transition target="s40" action="org.apache.commons.math.util.MathUtils.indicator(byte)" proba="0.6666666666666666"></transition></state><state id="s42"><transition target="s43" action="org.apache.commons.math.util.MathUtils.binomialCoefficientLog(int,int)" proba="0.7777777777777778"></transition><transition target="sX" action="epsilon" proba="0.2222222222222222"></transition></state><state id="s41"><transition target="s42" action="org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(int,int)" proba="0.5"></transition><transition target="s41" action="org.apache.commons.math.util.MathUtils.binomialCoefficient(int,int)" proba="0.42857142857142855"></transition><transition target="sX" action="epsilon" proba="0.07142857142857142"></transition></state><state id="s44"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s43"><transition target="s41" action="org.apache.commons.math.util.MathUtils.binomialCoefficient(int,int)" proba="0.5"></transition><transition target="s43" action="org.apache.commons.math.util.MathUtils.binomialCoefficientLog(int,int)" proba="0.2"></transition><transition target="sX" action="epsilon" proba="0.3"></transition></state><state id="s46"><transition target="s20" action="org.apache.commons.math.util.MathUtils.factorialLog(int)" proba="0.75"></transition><transition target="sX" action="epsilon" proba="0.25"></transition></state><state id="s45"><transition target="s46" action="org.apache.commons.math.util.MathUtils.factorialDouble(int)" proba="1.0"></transition></state><state id="s48"><transition target="sX" action="epsilon" proba="0.09090909090909091"></transition><transition target="s48" action="org.apache.commons.math.util.MathUtils.gcd(long,long)" proba="0.9090909090909091"></transition></state><state id="s47"><transition target="sX" action="epsilon" proba="0.25"></transition><transition target="s56" action="org.apache.commons.math.util.MathUtils.subAndCheck(int,int)" proba="0.25"></transition><transition target="s47" action="org.apache.commons.math.util.MathUtils.addAndCheck(int,int)" proba="0.5"></transition></state><state id="s49"><transition target="sX" action="epsilon" proba="0.5"></transition><transition target="s49" action="org.apache.commons.math.util.MathUtils.equals(double,double)" proba="0.5"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s51"><transition target="sX" action="epsilon" proba="0.14285714285714285"></transition><transition target="s51" action="org.apache.commons.math.util.MathUtils.log(double,double)" proba="0.8571428571428571"></transition></state><state id="s50"><transition target="s7" action="org.apache.commons.math.util.MathUtils.gcd(int,int)" proba="0.1111111111111111"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition><transition target="s47" action="org.apache.commons.math.util.MathUtils.addAndCheck(int,int)" proba="0.1111111111111111"></transition><transition target="s50" action="org.apache.commons.math.util.MathUtils.mulAndCheck(int,int)" proba="0.4444444444444444"></transition></state><state id="s53"><transition target="s53" action="org.apache.commons.math.util.MathUtils.indicator(float)" proba="0.6666666666666666"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition></state><state id="s52"><transition target="s52" action="org.apache.commons.math.util.MathUtils.reduce(double,double,double)" proba="0.8095238095238095"></transition><transition target="s44" action="org.apache.commons.math.util.MathUtils.sortInPlace(double[],double[][])" proba="0.047619047619047616"></transition><transition target="sX" action="epsilon" proba="0.14285714285714285"></transition></state><state id="s11"><transition target="s11" action="org.apache.commons.math.util.MathUtils.hash(double)" proba="0.7142857142857143"></transition><transition target="s35" action="org.apache.commons.math.util.MathUtils.hash(double[])" proba="0.02857142857142857"></transition><transition target="sX" action="epsilon" proba="0.2571428571428571"></transition></state><state id="s55"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s10"><transition target="s52" action="org.apache.commons.math.util.MathUtils.reduce(double,double,double)" proba="0.09090909090909091"></transition><transition target="sX" action="epsilon" proba="0.9090909090909091"></transition></state><state id="s54"><transition target="s54" action="org.apache.commons.math.util.MathUtils.checkFinite(double[])" proba="0.6666666666666666"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition></state><state id="s13"><transition target="sX" action="epsilon" proba="0.875"></transition><transition target="s12" action="org.apache.commons.math.util.MathUtils.cosh(double)" proba="0.125"></transition></state><state id="s57"><transition target="sX" action="epsilon" proba="0.5"></transition><transition target="s27" action="org.apache.commons.math.util.MathUtils.equals(double,double,int)" proba="0.5"></transition></state><state id="s12"><transition target="s13" action="org.apache.commons.math.util.MathUtils.sinh(double)" proba="0.625"></transition><transition target="sX" action="epsilon" proba="0.375"></transition></state><state id="s56"><transition target="s56" action="org.apache.commons.math.util.MathUtils.subAndCheck(int,int)" proba="0.5714285714285714"></transition><transition target="sX" action="epsilon" proba="0.2857142857142857"></transition><transition target="s50" action="org.apache.commons.math.util.MathUtils.mulAndCheck(int,int)" proba="0.14285714285714285"></transition></state><state id="s15"><transition target="sX" action="epsilon" proba="0.8"></transition><transition target="s15" action="org.apache.commons.math.util.MathUtils.copyOf(int[],int)" proba="0.2"></transition></state><state id="s59"><transition target="sX" action="epsilon" proba="0.25"></transition><transition target="s59" action="org.apache.commons.math.util.MathUtils.normalizeArray(double[],double)" proba="0.75"></transition></state><state id="s14"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s58"><transition target="s27" action="org.apache.commons.math.util.MathUtils.equals(double,double,int)" proba="1.0"></transition></state><state id="s17"><transition target="sX" action="epsilon" proba="0.125"></transition><transition target="s17" action="org.apache.commons.math.util.MathUtils.compareTo(double,double,int)" proba="0.8333333333333334"></transition><transition target="s27" action="org.apache.commons.math.util.MathUtils.equals(double,double,int)" proba="0.041666666666666664"></transition></state><state id="s16"><transition target="sX" action="epsilon" proba="0.5"></transition><transition target="s16" action="org.apache.commons.math.util.MathUtils.sign(int)" proba="0.5"></transition></state><state id="s19"><transition target="sX" action="epsilon" proba="0.2857142857142857"></transition><transition target="s19" action="org.apache.commons.math.util.MathUtils.subAndCheck(long,long)" proba="0.7142857142857143"></transition></state><state id="s18"><transition target="s54" action="org.apache.commons.math.util.MathUtils.checkFinite(double[])" proba="0.25"></transition><transition target="sX" action="epsilon" proba="0.25"></transition><transition target="s18" action="org.apache.commons.math.util.MathUtils.checkFinite(double)" proba="0.5"></transition></state><state id="s60"><transition target="sX" action="epsilon" proba="0.25"></transition><transition target="s60" action="org.apache.commons.math.util.MathUtils.sign(float)" proba="0.75"></transition></state><state id="s62"><transition target="s63" action="org.apache.commons.math.util.MathUtils.round(float,int,int)" proba="0.07142857142857142"></transition><transition target="sX" action="epsilon" proba="0.07142857142857142"></transition><transition target="s62" action="org.apache.commons.math.util.MathUtils.round(float,int)" proba="0.8571428571428571"></transition></state><state id="s61"><transition target="sX" action="epsilon" proba="0.3"></transition><transition target="s61" action="org.apache.commons.math.util.MathUtils.addAndCheck(long,long)" proba="0.7"></transition></state><state id="s20"><transition target="s20" action="org.apache.commons.math.util.MathUtils.factorialLog(int)" proba="0.2"></transition><transition target="sX" action="epsilon" proba="0.4"></transition><transition target="s45" action="org.apache.commons.math.util.MathUtils.factorial(int)" proba="0.4"></transition></state><state id="s64"><transition target="s64" action="org.apache.commons.math.util.MathUtils.indicator(double)" proba="0.6"></transition><transition target="sX" action="epsilon" proba="0.4"></transition></state><state id="s63"><transition target="s63" action="org.apache.commons.math.util.MathUtils.round(float,int,int)" proba="0.9814814814814815"></transition><transition target="s62" action="org.apache.commons.math.util.MathUtils.round(float,int)" proba="0.018518518518518517"></transition></state><state id="s22"><transition target="s22" action="org.apache.commons.math.util.MathUtils.linearCombination(double,double,double,double,double,double)" proba="0.3333333333333333"></transition><transition target="s23" action="org.apache.commons.math.util.MathUtils.linearCombination(double[],double[])" proba="0.3333333333333333"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition></state><state id="s66"><transition target="s66" action="org.apache.commons.math.util.MathUtils.checkOrder(double[],org.apache.commons.math.util.MathUtils$OrderDirection,boolean)" proba="0.875"></transition><transition target="sX" action="epsilon" proba="0.125"></transition></state><state id="s21"><transition target="s21" action="org.apache.commons.math.util.MathUtils.pow(java.math.BigInteger,java.math.BigInteger)" proba="0.625"></transition><transition target="s32" action="org.apache.commons.math.util.MathUtils.pow(java.math.BigInteger,int)" proba="0.125"></transition><transition target="sX" action="epsilon" proba="0.25"></transition></state><state id="s65"><transition target="s65" action="org.apache.commons.math.util.MathUtils.indicator(int)" proba="0.6666666666666666"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition></state><state id="s24"><transition target="s24" action="org.apache.commons.math.util.MathUtils.sign(double)" proba="0.75"></transition><transition target="sX" action="epsilon" proba="0.25"></transition></state><state id="s68"><transition target="s27" action="org.apache.commons.math.util.MathUtils.equals(double,double,int)" proba="1.0"></transition></state><state id="s67"><transition target="s27" action="org.apache.commons.math.util.MathUtils.equals(double,double,int)" proba="1.0"></transition></state><state id="s23"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s26"><transition target="sX" action="epsilon" proba="0.07692307692307693"></transition><transition target="s26" action="org.apache.commons.math.util.MathUtils.equals(float,float,int)" proba="0.7692307692307693"></transition><transition target="s25" action="org.apache.commons.math.util.MathUtils.equals(float,float)" proba="0.07692307692307693"></transition><transition target="s27" action="org.apache.commons.math.util.MathUtils.equals(double,double,int)" proba="0.07692307692307693"></transition></state><state id="s25"><transition target="s26" action="org.apache.commons.math.util.MathUtils.equals(float,float,int)" proba="1.0"></transition></state><state id="s69"><transition target="sX" action="epsilon" proba="0.18181818181818182"></transition><transition target="s69" action="org.apache.commons.math.util.MathUtils.mulAndCheck(long,long)" proba="0.8181818181818182"></transition></state><state id="s28"><transition target="s28" action="org.apache.commons.math.util.MathUtils.pow(int,int)" proba="0.6666666666666666"></transition><transition target="s29" action="org.apache.commons.math.util.MathUtils.pow(int,long)" proba="0.3333333333333333"></transition></state><state id="s27"><transition target="sX" action="epsilon" proba="0.3442622950819672"></transition><transition target="s26" action="org.apache.commons.math.util.MathUtils.equals(float,float,int)" proba="0.01639344262295082"></transition><transition target="s27" action="org.apache.commons.math.util.MathUtils.equals(double,double,int)" proba="0.639344262295082"></transition></state><state id="s29"><transition target="s30" action="org.apache.commons.math.util.MathUtils.pow(long,int)" proba="0.3333333333333333"></transition><transition target="s29" action="org.apache.commons.math.util.MathUtils.pow(int,long)" proba="0.6666666666666666"></transition></state></states></ts>