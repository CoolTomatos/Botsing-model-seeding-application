<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="java.lang.Double.longBitsToDouble(long)" proba="0.15151515151515152"></transition><transition target="sX" action="epsilon" proba="0.8181818181818182"></transition><transition target="s1" action="java.lang.Double.isNaN(double)" proba="0.030303030303030304"></transition></state><state id="s4"><transition target="s4" action="java.lang.Double.valueOf(double)" proba="0.5454545454545454"></transition><transition target="s5" action="java.lang.Double.isInfinite(double)" proba="0.003367003367003367"></transition><transition target="s7" action="java.lang.Double.hashCode()" proba="0.010101010101010102"></transition><transition target="sX" action="epsilon" proba="0.42424242424242425"></transition><transition target="s9" action="java.lang.Double.doubleValue()" proba="0.010101010101010102"></transition><transition target="s1" action="java.lang.Double.isNaN(double)" proba="0.006734006734006734"></transition></state><state id="s5"><transition target="s4" action="java.lang.Double.valueOf(double)" proba="0.05555555555555555"></transition><transition target="s5" action="java.lang.Double.isInfinite(double)" proba="0.3194444444444444"></transition><transition target="sX" action="epsilon" proba="0.4722222222222222"></transition><transition target="s1" action="java.lang.Double.isNaN(double)" proba="0.09722222222222222"></transition><transition target="s2" action="java.lang.Double.doubleToLongBits(double)" proba="0.05555555555555555"></transition></state><state id="s6"><transition target="s6" action="java.lang.Double.compare(double,double)" proba="0.25"></transition><transition target="sX" action="epsilon" proba="0.75"></transition></state><state id="s7"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="s10" action="java.lang.Double.valueOf(java.lang.String)" proba="0.1"></transition><transition target="sX" action="epsilon" proba="0.6"></transition><transition target="s8" action="java.lang.Double.parseDouble(java.lang.String)" proba="0.3"></transition></state><state id="s9"><transition target="s4" action="java.lang.Double.valueOf(double)" proba="0.05555555555555555"></transition><transition target="s11" action="java.lang.Double.floatValue()" proba="0.1111111111111111"></transition><transition target="sX" action="epsilon" proba="0.7222222222222222"></transition><transition target="s9" action="java.lang.Double.doubleValue()" proba="0.1111111111111111"></transition></state><state id="s11"><transition target="s11" action="java.lang.Double.floatValue()" proba="0.3333333333333333"></transition><transition target="s13" action="java.lang.Double.append(java.lang.String)" proba="0.3333333333333333"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition></state><state id="s10"><transition target="sX" action="epsilon" proba="0.4"></transition><transition target="s9" action="java.lang.Double.doubleValue()" proba="0.6"></transition></state><state id="s13"><transition target="s13" action="java.lang.Double.append(java.lang.String)" proba="0.6363636363636364"></transition><transition target="s15" action="java.lang.Double.toString()" proba="0.09090909090909091"></transition><transition target="s14" action="java.lang.Double.append(java.lang.Object)" proba="0.2727272727272727"></transition></state><state id="s12"><transition target="s5" action="java.lang.Double.isInfinite(double)" proba="0.3333333333333333"></transition><transition target="sX" action="epsilon" proba="0.6666666666666666"></transition></state><state id="s15"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s14"><transition target="s13" action="java.lang.Double.append(java.lang.String)" proba="1.0"></transition></state><state id="s17"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s16"><transition target="s17" action="java.lang.Double.isNaN()" proba="1.0"></transition></state><state id="s19"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s18"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s0"><transition target="s3" action="java.lang.Double.longBitsToDouble(long)" proba="0.008241758241758242"></transition><transition target="s4" action="java.lang.Double.valueOf(double)" proba="0.3434065934065934"></transition><transition target="s5" action="java.lang.Double.isInfinite(double)" proba="0.09065934065934066"></transition><transition target="s6" action="java.lang.Double.compare(double,double)" proba="0.024725274725274724"></transition><transition target="s8" action="java.lang.Double.parseDouble(java.lang.String)" proba="0.019230769230769232"></transition><transition target="s9" action="java.lang.Double.doubleValue()" proba="0.027472527472527472"></transition><transition target="s10" action="java.lang.Double.valueOf(java.lang.String)" proba="0.01098901098901099"></transition><transition target="s12" action="java.lang.Double.toString(double)" proba="0.008241758241758242"></transition><transition target="s16" action="java.lang.Double.isInfinite()" proba="0.0027472527472527475"></transition><transition target="s19" action="java.lang.Double.&lt;init&gt;(double)" proba="0.0027472527472527475"></transition><transition target="s18" action="java.lang.Double.doubleToRawLongBits(double)" proba="0.005494505494505495"></transition><transition target="s1" action="java.lang.Double.isNaN(double)" proba="0.35714285714285715"></transition><transition target="s2" action="java.lang.Double.doubleToLongBits(double)" proba="0.0989010989010989"></transition></state><state id="s1"><transition target="s4" action="java.lang.Double.valueOf(double)" proba="0.018050541516245487"></transition><transition target="s5" action="java.lang.Double.isInfinite(double)" proba="0.04693140794223827"></transition><transition target="sX" action="epsilon" proba="0.4404332129963899"></transition><transition target="s1" action="java.lang.Double.isNaN(double)" proba="0.49097472924187724"></transition><transition target="s2" action="java.lang.Double.doubleToLongBits(double)" proba="0.0036101083032490976"></transition></state><state id="s2"><transition target="s3" action="java.lang.Double.longBitsToDouble(long)" proba="0.49019607843137253"></transition><transition target="s5" action="java.lang.Double.isInfinite(double)" proba="0.0196078431372549"></transition><transition target="sX" action="epsilon" proba="0.27450980392156865"></transition><transition target="s1" action="java.lang.Double.isNaN(double)" proba="0.0196078431372549"></transition><transition target="s2" action="java.lang.Double.doubleToLongBits(double)" proba="0.19607843137254902"></transition></state></states></ts>