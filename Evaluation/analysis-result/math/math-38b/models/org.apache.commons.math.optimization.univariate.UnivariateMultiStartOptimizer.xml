<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s4" action="org.apache.commons.math.optimization.univariate.UnivariateMultiStartOptimizer.getEvaluations()" proba="0.6666666666666666"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition></state><state id="s4"><transition target="s4" action="org.apache.commons.math.optimization.univariate.UnivariateMultiStartOptimizer.getEvaluations()" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.5"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s0"><transition target="s1" action="org.apache.commons.math.optimization.univariate.UnivariateMultiStartOptimizer.&lt;init&gt;(org.apache.commons.math.optimization.univariate.BaseUnivariateOptimizer,int,org.apache.commons.math.random.RandomGenerator)" proba="1.0"></transition></state><state id="s1"><transition target="s2" action="org.apache.commons.math.optimization.univariate.UnivariateMultiStartOptimizer.optimize(int,org.apache.commons.math.analysis.UnivariateFunction,org.apache.commons.math.optimization.GoalType,double,double)" proba="1.0"></transition></state><state id="s2"><transition target="s3" action="org.apache.commons.math.optimization.univariate.UnivariateMultiStartOptimizer.getOptima()" proba="1.0"></transition></state></states></ts>