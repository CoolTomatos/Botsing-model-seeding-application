<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s4" action="org.apache.commons.math.transform.FastFourierTransformer.scaleArray(double[],double)" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.5"></transition></state><state id="s4"><transition target="sX" action="epsilon" proba="0.9090909090909091"></transition><transition target="s8" action="org.apache.commons.math.transform.FastFourierTransformer.createUnitary()" proba="0.09090909090909091"></transition></state><state id="s5"><transition target="s4" action="org.apache.commons.math.transform.FastFourierTransformer.scaleArray(double[],double)" proba="0.16666666666666666"></transition><transition target="sX" action="epsilon" proba="0.6666666666666666"></transition><transition target="s14" action="org.apache.commons.math.transform.FastFourierTransformer.scaleArray(org.apache.commons.math.complex.Complex[],double)" proba="0.16666666666666666"></transition></state><state id="s6"><transition target="sX" action="epsilon" proba="0.6666666666666666"></transition><transition target="s9" action="org.apache.commons.math.transform.FastFourierTransformer.inverseTransform(org.apache.commons.math.complex.Complex[])" proba="0.3333333333333333"></transition></state><state id="s7"><transition target="s7" action="org.apache.commons.math.transform.FastFourierTransformer.transform(org.apache.commons.math.analysis.UnivariateFunction,double,double,int)" proba="0.5"></transition><transition target="s13" action="org.apache.commons.math.transform.FastFourierTransformer.inverseTransform(org.apache.commons.math.analysis.UnivariateFunction,double,double,int)" proba="0.25"></transition><transition target="sX" action="epsilon" proba="0.25"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s9"><transition target="s10" action="org.apache.commons.math.transform.FastFourierTransformer.transform(org.apache.commons.math.complex.Complex[])" proba="1.0"></transition></state><state id="s11"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s10"><transition target="s11" action="org.apache.commons.math.transform.FastFourierTransformer.inverseTransform(double[])" proba="1.0"></transition></state><state id="s13"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s12"><transition target="s5" action="org.apache.commons.math.transform.FastFourierTransformer.create()" proba="1.0"></transition></state><state id="s14"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s0"><transition target="s3" action="org.apache.commons.math.transform.FastFourierTransformer.sample(org.apache.commons.math.analysis.UnivariateFunction,double,double,int)" proba="0.20689655172413793"></transition><transition target="s4" action="org.apache.commons.math.transform.FastFourierTransformer.scaleArray(double[],double)" proba="0.2413793103448276"></transition><transition target="s5" action="org.apache.commons.math.transform.FastFourierTransformer.create()" proba="0.13793103448275862"></transition><transition target="s6" action="org.apache.commons.math.transform.FastFourierTransformer.transform(double[])" proba="0.10344827586206896"></transition><transition target="s7" action="org.apache.commons.math.transform.FastFourierTransformer.transform(org.apache.commons.math.analysis.UnivariateFunction,double,double,int)" proba="0.06896551724137931"></transition><transition target="s12" action="org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(double[])" proba="0.034482758620689655"></transition><transition target="s8" action="org.apache.commons.math.transform.FastFourierTransformer.createUnitary()" proba="0.034482758620689655"></transition><transition target="s1" action="org.apache.commons.math.transform.FastFourierTransformer.isPowerOf2(long)" proba="0.10344827586206896"></transition><transition target="s2" action="org.apache.commons.math.transform.FastFourierTransformer.mdfft(java.lang.Object,boolean)" proba="0.06896551724137931"></transition></state><state id="s1"><transition target="s5" action="org.apache.commons.math.transform.FastFourierTransformer.create()" proba="0.3333333333333333"></transition><transition target="sX" action="epsilon" proba="0.6666666666666666"></transition></state><state id="s2"><transition target="sX" action="epsilon" proba="0.5"></transition><transition target="s2" action="org.apache.commons.math.transform.FastFourierTransformer.mdfft(java.lang.Object,boolean)" proba="0.5"></transition></state></states></ts>