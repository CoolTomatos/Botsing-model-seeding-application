<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="org.apache.commons.math.geometry.euclidean.threed.Rotation.applyInverseTo(org.apache.commons.math.geometry.euclidean.threed.Vector3D)" proba="0.375"></transition><transition target="s4" action="org.apache.commons.math.geometry.euclidean.threed.Rotation.applyTo(org.apache.commons.math.geometry.euclidean.threed.Vector3D)" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.125"></transition></state><state id="s4"><transition target="s3" action="org.apache.commons.math.geometry.euclidean.threed.Rotation.applyInverseTo(org.apache.commons.math.geometry.euclidean.threed.Vector3D)" proba="0.08695652173913043"></transition><transition target="s4" action="org.apache.commons.math.geometry.euclidean.threed.Rotation.applyTo(org.apache.commons.math.geometry.euclidean.threed.Vector3D)" proba="0.45652173913043476"></transition><transition target="s5" action="org.apache.commons.math.geometry.euclidean.threed.Rotation.getAxis()" proba="0.021739130434782608"></transition><transition target="s6" action="org.apache.commons.math.geometry.euclidean.threed.Rotation.getAngle()" proba="0.06521739130434782"></transition><transition target="s21" action="org.apache.commons.math.geometry.euclidean.threed.Rotation.applyTo(double[],double[])" proba="0.021739130434782608"></transition><transition target="sX" action="epsilon" proba="0.2391304347826087"></transition><transition target="s8" action="org.apache.commons.math.geometry.euclidean.threed.Rotation.&lt;init&gt;(org.apache.commons.math.geometry.euclidean.threed.Vector3D,org.apache.commons.math.geometry.euclidean.threed.Vector3D,org.apache.commons.math.geometry.euclidean.threed.Vector3D,org.apache.commons.math.geometry.euclidean.threed.Vector3D)" proba="0.021739130434782608"></transition><transition target="s9" action="org.apache.commons.math.geometry.euclidean.threed.Rotation.&lt;init&gt;(double,double,double,double,boolean)" proba="0.021739130434782608"></transition><transition target="s17" action="org.apache.commons.math.geometry.euclidean.threed.Rotation.&lt;init&gt;(double[][],double)" proba="0.043478260869565216"></transition><transition target="s1" action="org.apache.commons.math.geometry.euclidean.threed.Rotation.&lt;init&gt;(org.apache.commons.math.geometry.euclidean.threed.Vector3D,double)" proba="0.021739130434782608"></transition></state><state id="s5"><transition target="s6" action="org.apache.commons.math.geometry.euclidean.threed.Rotation.getAngle()" proba="0.5714285714285714"></transition><transition target="sX" action="epsilon" proba="0.42857142857142855"></transition></state><state id="s6"><transition target="s5" action="org.apache.commons.math.geometry.euclidean.threed.Rotation.getAxis()" proba="0.2"></transition><transition target="sX" action="epsilon" proba="0.2"></transition><transition target="s8" action="org.apache.commons.math.geometry.euclidean.threed.Rotation.&lt;init&gt;(org.apache.commons.math.geometry.euclidean.threed.Vector3D,org.apache.commons.math.geometry.euclidean.threed.Vector3D,org.apache.commons.math.geometry.euclidean.threed.Vector3D,org.apache.commons.math.geometry.euclidean.threed.Vector3D)" proba="0.1"></transition><transition target="s9" action="org.apache.commons.math.geometry.euclidean.threed.Rotation.&lt;init&gt;(double,double,double,double,boolean)" proba="0.2"></transition><transition target="s17" action="org.apache.commons.math.geometry.euclidean.threed.Rotation.&lt;init&gt;(double[][],double)" proba="0.1"></transition><transition target="s1" action="org.apache.commons.math.geometry.euclidean.threed.Rotation.&lt;init&gt;(org.apache.commons.math.geometry.euclidean.threed.Vector3D,double)" proba="0.2"></transition></state><state id="s7"><transition target="s4" action="org.apache.commons.math.geometry.euclidean.threed.Rotation.applyTo(org.apache.commons.math.geometry.euclidean.threed.Vector3D)" proba="0.3333333333333333"></transition><transition target="s6" action="org.apache.commons.math.geometry.euclidean.threed.Rotation.getAngle()" proba="0.6666666666666666"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="s4" action="org.apache.commons.math.geometry.euclidean.threed.Rotation.applyTo(org.apache.commons.math.geometry.euclidean.threed.Vector3D)" proba="0.2"></transition><transition target="s5" action="org.apache.commons.math.geometry.euclidean.threed.Rotation.getAxis()" proba="0.2"></transition><transition target="s8" action="org.apache.commons.math.geometry.euclidean.threed.Rotation.&lt;init&gt;(org.apache.commons.math.geometry.euclidean.threed.Vector3D,org.apache.commons.math.geometry.euclidean.threed.Vector3D,org.apache.commons.math.geometry.euclidean.threed.Vector3D,org.apache.commons.math.geometry.euclidean.threed.Vector3D)" proba="0.2"></transition><transition target="sX" action="epsilon" proba="0.2"></transition><transition target="s12" action="org.apache.commons.math.geometry.euclidean.threed.Rotation.getQ0()" proba="0.2"></transition></state><state id="s9"><transition target="s4" action="org.apache.commons.math.geometry.euclidean.threed.Rotation.applyTo(org.apache.commons.math.geometry.euclidean.threed.Vector3D)" proba="0.6"></transition><transition target="s12" action="org.apache.commons.math.geometry.euclidean.threed.Rotation.getQ0()" proba="0.2"></transition><transition target="s16" action="org.apache.commons.math.geometry.euclidean.threed.Rotation.revert()" proba="0.2"></transition></state><state id="s20"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s11"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s22"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s21"><transition target="s22" action="org.apache.commons.math.geometry.euclidean.threed.Rotation.applyInverseTo(double[],double[])" proba="1.0"></transition></state><state id="s10"><transition target="s11" action="org.apache.commons.math.geometry.euclidean.threed.Rotation.getAngles(org.apache.commons.math.geometry.euclidean.threed.RotationOrder)" proba="1.0"></transition></state><state id="s13"><transition target="s14" action="org.apache.commons.math.geometry.euclidean.threed.Rotation.getQ2()" proba="1.0"></transition></state><state id="s12"><transition target="s13" action="org.apache.commons.math.geometry.euclidean.threed.Rotation.getQ1()" proba="1.0"></transition></state><state id="s15"><transition target="s4" action="org.apache.commons.math.geometry.euclidean.threed.Rotation.applyTo(org.apache.commons.math.geometry.euclidean.threed.Vector3D)" proba="0.3333333333333333"></transition><transition target="sX" action="epsilon" proba="0.6666666666666666"></transition></state><state id="s14"><transition target="s15" action="org.apache.commons.math.geometry.euclidean.threed.Rotation.getQ3()" proba="1.0"></transition></state><state id="s17"><transition target="s4" action="org.apache.commons.math.geometry.euclidean.threed.Rotation.applyTo(org.apache.commons.math.geometry.euclidean.threed.Vector3D)" proba="0.25"></transition><transition target="s6" action="org.apache.commons.math.geometry.euclidean.threed.Rotation.getAngle()" proba="0.25"></transition><transition target="sX" action="epsilon" proba="0.25"></transition><transition target="s18" action="org.apache.commons.math.geometry.euclidean.threed.Rotation.getMatrix()" proba="0.25"></transition></state><state id="s16"><transition target="s7" action="org.apache.commons.math.geometry.euclidean.threed.Rotation.applyTo(org.apache.commons.math.geometry.euclidean.threed.Rotation)" proba="1.0"></transition></state><state id="s19"><transition target="s4" action="org.apache.commons.math.geometry.euclidean.threed.Rotation.applyTo(org.apache.commons.math.geometry.euclidean.threed.Vector3D)" proba="1.0"></transition></state><state id="s18"><transition target="s4" action="org.apache.commons.math.geometry.euclidean.threed.Rotation.applyTo(org.apache.commons.math.geometry.euclidean.threed.Vector3D)" proba="1.0"></transition></state><state id="s0"><transition target="s20" action="org.apache.commons.math.geometry.euclidean.threed.Rotation.distance(org.apache.commons.math.geometry.euclidean.threed.Rotation,org.apache.commons.math.geometry.euclidean.threed.Rotation)" proba="0.037037037037037035"></transition><transition target="s4" action="org.apache.commons.math.geometry.euclidean.threed.Rotation.applyTo(org.apache.commons.math.geometry.euclidean.threed.Vector3D)" proba="0.18518518518518517"></transition><transition target="s5" action="org.apache.commons.math.geometry.euclidean.threed.Rotation.getAxis()" proba="0.037037037037037035"></transition><transition target="s10" action="org.apache.commons.math.geometry.euclidean.threed.Rotation.&lt;init&gt;(org.apache.commons.math.geometry.euclidean.threed.RotationOrder,double,double,double)" proba="0.14814814814814814"></transition><transition target="s7" action="org.apache.commons.math.geometry.euclidean.threed.Rotation.applyTo(org.apache.commons.math.geometry.euclidean.threed.Rotation)" proba="0.037037037037037035"></transition><transition target="s8" action="org.apache.commons.math.geometry.euclidean.threed.Rotation.&lt;init&gt;(org.apache.commons.math.geometry.euclidean.threed.Vector3D,org.apache.commons.math.geometry.euclidean.threed.Vector3D,org.apache.commons.math.geometry.euclidean.threed.Vector3D,org.apache.commons.math.geometry.euclidean.threed.Vector3D)" proba="0.07407407407407407"></transition><transition target="s9" action="org.apache.commons.math.geometry.euclidean.threed.Rotation.&lt;init&gt;(double,double,double,double,boolean)" proba="0.07407407407407407"></transition><transition target="s17" action="org.apache.commons.math.geometry.euclidean.threed.Rotation.&lt;init&gt;(double[][],double)" proba="0.037037037037037035"></transition><transition target="s19" action="org.apache.commons.math.geometry.euclidean.threed.Rotation.&lt;init&gt;(org.apache.commons.math.geometry.euclidean.threed.Vector3D,org.apache.commons.math.geometry.euclidean.threed.Vector3D)" proba="0.037037037037037035"></transition><transition target="s1" action="org.apache.commons.math.geometry.euclidean.threed.Rotation.&lt;init&gt;(org.apache.commons.math.geometry.euclidean.threed.Vector3D,double)" proba="0.3333333333333333"></transition></state><state id="s1"><transition target="s4" action="org.apache.commons.math.geometry.euclidean.threed.Rotation.applyTo(org.apache.commons.math.geometry.euclidean.threed.Vector3D)" proba="0.5833333333333334"></transition><transition target="s5" action="org.apache.commons.math.geometry.euclidean.threed.Rotation.getAxis()" proba="0.16666666666666666"></transition><transition target="s7" action="org.apache.commons.math.geometry.euclidean.threed.Rotation.applyTo(org.apache.commons.math.geometry.euclidean.threed.Rotation)" proba="0.08333333333333333"></transition><transition target="s12" action="org.apache.commons.math.geometry.euclidean.threed.Rotation.getQ0()" proba="0.08333333333333333"></transition><transition target="s2" action="org.apache.commons.math.geometry.euclidean.threed.Rotation.applyInverseTo(org.apache.commons.math.geometry.euclidean.threed.Rotation)" proba="0.08333333333333333"></transition></state><state id="s2"><transition target="s3" action="org.apache.commons.math.geometry.euclidean.threed.Rotation.applyInverseTo(org.apache.commons.math.geometry.euclidean.threed.Vector3D)" proba="1.0"></transition></state></states></ts>