<?xml version="1.0"?><ts><start>s0</start><states><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s11"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s10"><transition target="s21" action="java.math.BigInteger.testBit(int)" proba="0.1"></transition><transition target="sX" action="epsilon" proba="0.5"></transition><transition target="s17" action="java.math.BigInteger.negate()" proba="0.4"></transition></state><state id="s13"><transition target="s13" action="java.math.BigInteger.pow(int)" proba="0.4"></transition><transition target="sX" action="epsilon" proba="0.6"></transition></state><state id="s12"><transition target="s5" action="java.math.BigInteger.multiply(java.math.BigInteger)" proba="0.2"></transition><transition target="sX" action="epsilon" proba="0.6"></transition><transition target="s18" action="java.math.BigInteger.subtract(java.math.BigInteger)" proba="0.2"></transition></state><state id="s15"><transition target="sX" action="epsilon" proba="0.8"></transition><transition target="s2" action="java.math.BigInteger.divide(java.math.BigInteger)" proba="0.2"></transition></state><state id="s14"><transition target="s15" action="java.math.BigInteger.intValue()" proba="1.0"></transition></state><state id="s17"><transition target="s5" action="java.math.BigInteger.multiply(java.math.BigInteger)" proba="0.14285714285714285"></transition><transition target="sX" action="epsilon" proba="0.8571428571428571"></transition></state><state id="s16"><transition target="s10" action="java.math.BigInteger.compareTo(java.math.BigInteger)" proba="1.0"></transition></state><state id="s19"><transition target="sX" action="epsilon" proba="0.5"></transition><transition target="s19" action="java.math.BigInteger.flipBit(int)" proba="0.5"></transition></state><state id="s18"><transition target="s5" action="java.math.BigInteger.multiply(java.math.BigInteger)" proba="0.25"></transition><transition target="sX" action="epsilon" proba="0.75"></transition></state><state id="s0"><transition target="s3" action="java.math.BigInteger.equals(java.lang.Object)" proba="0.12941176470588237"></transition><transition target="s4" action="java.math.BigInteger.&lt;init&gt;(java.lang.String)" proba="0.023529411764705882"></transition><transition target="s5" action="java.math.BigInteger.multiply(java.math.BigInteger)" proba="0.1411764705882353"></transition><transition target="s6" action="java.math.BigInteger.valueOf(long)" proba="0.2235294117647059"></transition><transition target="s7" action="java.math.BigInteger.floatValue()" proba="0.023529411764705882"></transition><transition target="s8" action="java.math.BigInteger.longValue()" proba="0.023529411764705882"></transition><transition target="s9" action="java.math.BigInteger.toString()" proba="0.011764705882352941"></transition><transition target="s20" action="java.math.BigInteger.gcd(java.math.BigInteger)" proba="0.023529411764705882"></transition><transition target="s11" action="java.math.BigInteger.hashCode()" proba="0.023529411764705882"></transition><transition target="s10" action="java.math.BigInteger.compareTo(java.math.BigInteger)" proba="0.09411764705882353"></transition><transition target="s13" action="java.math.BigInteger.pow(int)" proba="0.03529411764705882"></transition><transition target="s12" action="java.math.BigInteger.add(java.math.BigInteger)" proba="0.03529411764705882"></transition><transition target="s23" action="java.math.BigInteger.bitLength()" proba="0.011764705882352941"></transition><transition target="s15" action="java.math.BigInteger.intValue()" proba="0.023529411764705882"></transition><transition target="s14" action="java.math.BigInteger.mod(java.math.BigInteger)" proba="0.011764705882352941"></transition><transition target="s17" action="java.math.BigInteger.negate()" proba="0.011764705882352941"></transition><transition target="s19" action="java.math.BigInteger.flipBit(int)" proba="0.011764705882352941"></transition><transition target="s18" action="java.math.BigInteger.subtract(java.math.BigInteger)" proba="0.023529411764705882"></transition><transition target="s1" action="java.math.BigInteger.doubleValue()" proba="0.047058823529411764"></transition><transition target="s2" action="java.math.BigInteger.divide(java.math.BigInteger)" proba="0.07058823529411765"></transition></state><state id="s1"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s2"><transition target="s5" action="java.math.BigInteger.multiply(java.math.BigInteger)" proba="0.1111111111111111"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition><transition target="s8" action="java.math.BigInteger.longValue()" proba="0.1111111111111111"></transition><transition target="s15" action="java.math.BigInteger.intValue()" proba="0.1111111111111111"></transition><transition target="s17" action="java.math.BigInteger.negate()" proba="0.2222222222222222"></transition><transition target="s16" action="java.math.BigInteger.remainder(java.math.BigInteger)" proba="0.1111111111111111"></transition></state><state id="s3"><transition target="s3" action="java.math.BigInteger.equals(java.lang.Object)" proba="0.08333333333333333"></transition><transition target="s5" action="java.math.BigInteger.multiply(java.math.BigInteger)" proba="0.16666666666666666"></transition><transition target="s10" action="java.math.BigInteger.compareTo(java.math.BigInteger)" proba="0.08333333333333333"></transition><transition target="sX" action="epsilon" proba="0.6666666666666666"></transition></state><state id="s4"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s5"><transition target="s5" action="java.math.BigInteger.multiply(java.math.BigInteger)" proba="0.1"></transition><transition target="sX" action="epsilon" proba="0.7"></transition><transition target="s12" action="java.math.BigInteger.add(java.math.BigInteger)" proba="0.1"></transition><transition target="s18" action="java.math.BigInteger.subtract(java.math.BigInteger)" proba="0.05"></transition><transition target="s1" action="java.math.BigInteger.doubleValue()" proba="0.05"></transition></state><state id="s6"><transition target="s6" action="java.math.BigInteger.valueOf(long)" proba="0.525"></transition><transition target="sX" action="epsilon" proba="0.475"></transition></state><state id="s7"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s9"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s20"><transition target="s2" action="java.math.BigInteger.divide(java.math.BigInteger)" proba="1.0"></transition></state><state id="s22"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s21"><transition target="s22" action="java.math.BigInteger.shiftRight(int)" proba="1.0"></transition></state><state id="s23"><transition target="s15" action="java.math.BigInteger.intValue()" proba="1.0"></transition></state></states></ts>