<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s4" action="org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer.getCovariances()" proba="0.125"></transition><transition target="s5" action="org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer.guessParametersErrors()" proba="0.0625"></transition><transition target="sX" action="epsilon" proba="0.6875"></transition><transition target="s2" action="org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer.optimize(org.apache.commons.math.analysis.DifferentiableMultivariateVectorialFunction,double[],double[],double[])" proba="0.125"></transition></state><state id="s4"><transition target="s5" action="org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer.guessParametersErrors()" proba="0.6666666666666666"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition></state><state id="s5"><transition target="sX" action="epsilon" proba="0.6666666666666666"></transition><transition target="s2" action="org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer.optimize(org.apache.commons.math.analysis.DifferentiableMultivariateVectorialFunction,double[],double[],double[])" proba="0.3333333333333333"></transition></state><state id="s6"><transition target="s7" action="org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer.setCostRelativeTolerance(double)" proba="1.0"></transition></state><state id="s7"><transition target="s8" action="org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer.setParRelativeTolerance(double)" proba="1.0"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="s9" action="org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer.setOrthoTolerance(double)" proba="1.0"></transition></state><state id="s9"><transition target="s2" action="org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer.optimize(org.apache.commons.math.analysis.DifferentiableMultivariateVectorialFunction,double[],double[],double[])" proba="1.0"></transition></state><state id="s11"><transition target="s12" action="org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer.getJacobianEvaluations()" proba="1.0"></transition></state><state id="s10"><transition target="s2" action="org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer.optimize(org.apache.commons.math.analysis.DifferentiableMultivariateVectorialFunction,double[],double[],double[])" proba="1.0"></transition></state><state id="s13"><transition target="s6" action="org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer.setMaxIterations(int)" proba="1.0"></transition></state><state id="s12"><transition target="s3" action="org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer.getRMS()" proba="1.0"></transition></state><state id="s0"><transition target="s1" action="org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer.&lt;init&gt;()" proba="1.0"></transition></state><state id="s1"><transition target="s6" action="org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer.setMaxIterations(int)" proba="0.0625"></transition><transition target="s10" action="org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer.setConvergenceChecker(org.apache.commons.math.optimization.VectorialConvergenceChecker)" proba="0.0625"></transition><transition target="s13" action="org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer.setInitialStepBoundFactor(double)" proba="0.0625"></transition><transition target="s2" action="org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer.optimize(org.apache.commons.math.analysis.DifferentiableMultivariateVectorialFunction,double[],double[],double[])" proba="0.8125"></transition></state><state id="s2"><transition target="s3" action="org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer.getRMS()" proba="0.7"></transition><transition target="s4" action="org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer.getCovariances()" proba="0.05"></transition><transition target="s11" action="org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer.getEvaluations()" proba="0.1"></transition><transition target="sX" action="epsilon" proba="0.1"></transition><transition target="s2" action="org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer.optimize(org.apache.commons.math.analysis.DifferentiableMultivariateVectorialFunction,double[],double[],double[])" proba="0.05"></transition></state></states></ts>