<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s4"><transition target="s4" action="org.apache.commons.math.genetics.RandomKey.inducedPermutation(java.util.List,java.util.List)" proba="0.6666666666666666"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition></state><state id="s5"><transition target="s5" action="org.apache.commons.math.genetics.RandomKey.comparatorPermutation(java.util.List,java.util.Comparator)" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.5"></transition></state><state id="s6"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s0"><transition target="s3" action="org.apache.commons.math.genetics.RandomKey.randomPermutation(int)" proba="0.42857142857142855"></transition><transition target="s4" action="org.apache.commons.math.genetics.RandomKey.inducedPermutation(java.util.List,java.util.List)" proba="0.14285714285714285"></transition><transition target="s5" action="org.apache.commons.math.genetics.RandomKey.comparatorPermutation(java.util.List,java.util.Comparator)" proba="0.14285714285714285"></transition><transition target="s6" action="org.apache.commons.math.genetics.RandomKey.identityPermutation(int)" proba="0.14285714285714285"></transition><transition target="s1" action="org.apache.commons.math.genetics.RandomKey.getRepresentation()" proba="0.14285714285714285"></transition></state><state id="s1"><transition target="s2" action="org.apache.commons.math.genetics.RandomKey.newFixedLengthChromosome(java.util.List)" proba="1.0"></transition></state><state id="s2"><transition target="sX" action="epsilon" proba="1.0"></transition></state></states></ts>