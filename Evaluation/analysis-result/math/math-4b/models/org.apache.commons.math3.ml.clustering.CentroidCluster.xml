<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s4"><transition target="s1" action="org.apache.commons.math3.ml.clustering.CentroidCluster.getCenter()" proba="0.6666666666666666"></transition><transition target="s2" action="org.apache.commons.math3.ml.clustering.CentroidCluster.getPoints()" proba="0.3333333333333333"></transition></state><state id="s5"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s6"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s7"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition><transition target="s2" action="org.apache.commons.math3.ml.clustering.CentroidCluster.getPoints()" proba="0.6666666666666666"></transition></state><state id="s0"><transition target="s3" action="org.apache.commons.math3.ml.clustering.CentroidCluster.addPoint(org.apache.commons.math3.ml.clustering.Clusterable)" proba="0.09090909090909091"></transition><transition target="s1" action="org.apache.commons.math3.ml.clustering.CentroidCluster.getCenter()" proba="0.6363636363636364"></transition><transition target="s2" action="org.apache.commons.math3.ml.clustering.CentroidCluster.getPoints()" proba="0.2727272727272727"></transition></state><state id="s1"><transition target="s6" action="org.apache.commons.math3.ml.clustering.CentroidCluster.equals(java.lang.Object)" proba="0.1"></transition><transition target="s7" action="org.apache.commons.math3.ml.clustering.CentroidCluster.getPoint()" proba="0.1"></transition><transition target="sX" action="epsilon" proba="0.4"></transition><transition target="s2" action="org.apache.commons.math3.ml.clustering.CentroidCluster.getPoints()" proba="0.4"></transition></state><state id="s2"><transition target="s4" action="org.apache.commons.math3.ml.clustering.CentroidCluster.isEmpty()" proba="0.3"></transition><transition target="s5" action="org.apache.commons.math3.ml.clustering.CentroidCluster.iterator()" proba="0.2"></transition><transition target="sX" action="epsilon" proba="0.1"></transition><transition target="s8" action="org.apache.commons.math3.ml.clustering.CentroidCluster.size()" proba="0.3"></transition><transition target="s1" action="org.apache.commons.math3.ml.clustering.CentroidCluster.getCenter()" proba="0.1"></transition></state></states></ts>