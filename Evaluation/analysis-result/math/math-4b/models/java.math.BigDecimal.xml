<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s4"><transition target="s5" action="java.math.BigDecimal.&lt;init&gt;(int,java.math.MathContext)" proba="0.16666666666666666"></transition><transition target="sX" action="epsilon" proba="0.5"></transition><transition target="s14" action="java.math.BigDecimal.negate(java.math.MathContext)" proba="0.16666666666666666"></transition><transition target="s2" action="java.math.BigDecimal.multiply(java.math.BigDecimal,java.math.MathContext)" proba="0.16666666666666666"></transition></state><state id="s5"><transition target="s6" action="java.math.BigDecimal.pow(int,java.math.MathContext)" proba="0.1"></transition><transition target="sX" action="epsilon" proba="0.7"></transition><transition target="s2" action="java.math.BigDecimal.multiply(java.math.BigDecimal,java.math.MathContext)" proba="0.2"></transition></state><state id="s6"><transition target="sX" action="epsilon" proba="0.6666666666666666"></transition><transition target="s14" action="java.math.BigDecimal.negate(java.math.MathContext)" proba="0.3333333333333333"></transition></state><state id="s7"><transition target="sX" action="epsilon" proba="0.5"></transition><transition target="s1" action="java.math.BigDecimal.subtract(java.math.BigDecimal,java.math.MathContext)" proba="0.5"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="s6" action="java.math.BigDecimal.pow(int,java.math.MathContext)" proba="0.3333333333333333"></transition><transition target="sX" action="epsilon" proba="0.6666666666666666"></transition></state><state id="s9"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s11"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s10"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s13"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s12"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s15"><transition target="s2" action="java.math.BigDecimal.multiply(java.math.BigDecimal,java.math.MathContext)" proba="1.0"></transition></state><state id="s14"><transition target="sX" action="epsilon" proba="0.5"></transition><transition target="s2" action="java.math.BigDecimal.multiply(java.math.BigDecimal,java.math.MathContext)" proba="0.5"></transition></state><state id="s17"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s16"><transition target="s2" action="java.math.BigDecimal.multiply(java.math.BigDecimal,java.math.MathContext)" proba="1.0"></transition></state><state id="s19"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s18"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s0"><transition target="s3" action="java.math.BigDecimal.&lt;init&gt;(java.lang.String)" proba="0.08823529411764706"></transition><transition target="s4" action="java.math.BigDecimal.divide(java.math.BigDecimal,java.math.MathContext)" proba="0.11764705882352941"></transition><transition target="s5" action="java.math.BigDecimal.&lt;init&gt;(int,java.math.MathContext)" proba="0.14705882352941177"></transition><transition target="s7" action="java.math.BigDecimal.compareTo(java.math.BigDecimal)" proba="0.029411764705882353"></transition><transition target="s8" action="java.math.BigDecimal.multiply(java.math.BigDecimal)" proba="0.08823529411764706"></transition><transition target="s9" action="java.math.BigDecimal.divide(java.math.BigDecimal,int,java.math.RoundingMode)" proba="0.058823529411764705"></transition><transition target="s11" action="java.math.BigDecimal.subtract(java.math.BigDecimal)" proba="0.029411764705882353"></transition><transition target="s13" action="java.math.BigDecimal.doubleValue()" proba="0.029411764705882353"></transition><transition target="s12" action="java.math.BigDecimal.negate()" proba="0.029411764705882353"></transition><transition target="s15" action="java.math.BigDecimal.ulp()" proba="0.029411764705882353"></transition><transition target="s17" action="java.math.BigDecimal.hashCode()" proba="0.029411764705882353"></transition><transition target="s19" action="java.math.BigDecimal.add(java.math.BigDecimal)" proba="0.029411764705882353"></transition><transition target="s18" action="java.math.BigDecimal.equals(java.lang.Object)" proba="0.029411764705882353"></transition><transition target="s1" action="java.math.BigDecimal.subtract(java.math.BigDecimal,java.math.MathContext)" proba="0.058823529411764705"></transition><transition target="s2" action="java.math.BigDecimal.multiply(java.math.BigDecimal,java.math.MathContext)" proba="0.20588235294117646"></transition></state><state id="s1"><transition target="s5" action="java.math.BigDecimal.&lt;init&gt;(int,java.math.MathContext)" proba="0.3333333333333333"></transition><transition target="s7" action="java.math.BigDecimal.compareTo(java.math.BigDecimal)" proba="0.16666666666666666"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition><transition target="s1" action="java.math.BigDecimal.subtract(java.math.BigDecimal,java.math.MathContext)" proba="0.16666666666666666"></transition></state><state id="s2"><transition target="s4" action="java.math.BigDecimal.divide(java.math.BigDecimal,java.math.MathContext)" proba="0.125"></transition><transition target="s5" action="java.math.BigDecimal.&lt;init&gt;(int,java.math.MathContext)" proba="0.125"></transition><transition target="s10" action="java.math.BigDecimal.signum()" proba="0.125"></transition><transition target="s6" action="java.math.BigDecimal.pow(int,java.math.MathContext)" proba="0.0625"></transition><transition target="sX" action="epsilon" proba="0.1875"></transition><transition target="s16" action="java.math.BigDecimal.add(java.math.BigDecimal,java.math.MathContext)" proba="0.125"></transition><transition target="s1" action="java.math.BigDecimal.subtract(java.math.BigDecimal,java.math.MathContext)" proba="0.125"></transition><transition target="s2" action="java.math.BigDecimal.multiply(java.math.BigDecimal,java.math.MathContext)" proba="0.125"></transition></state></states></ts>