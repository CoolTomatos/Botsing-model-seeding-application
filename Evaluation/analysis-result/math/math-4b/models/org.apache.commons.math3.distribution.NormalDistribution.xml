<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="org.apache.commons.math3.distribution.NormalDistribution.sample()" proba="0.25"></transition><transition target="sX" action="epsilon" proba="0.75"></transition></state><state id="s4"><transition target="s3" action="org.apache.commons.math3.distribution.NormalDistribution.sample()" proba="0.3076923076923077"></transition><transition target="s5" action="org.apache.commons.math3.distribution.NormalDistribution.cumulativeProbability(double)" proba="0.23076923076923078"></transition><transition target="s6" action="org.apache.commons.math3.distribution.NormalDistribution.density(double)" proba="0.15384615384615385"></transition><transition target="s8" action="org.apache.commons.math3.distribution.NormalDistribution.inverseCumulativeProbability(double)" proba="0.07692307692307693"></transition><transition target="s9" action="org.apache.commons.math3.distribution.NormalDistribution.getNumericalMean()" proba="0.23076923076923078"></transition></state><state id="s5"><transition target="s5" action="org.apache.commons.math3.distribution.NormalDistribution.cumulativeProbability(double)" proba="0.5555555555555556"></transition><transition target="sX" action="epsilon" proba="0.4444444444444444"></transition></state><state id="s6"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s10"><transition target="s4" action="org.apache.commons.math3.distribution.NormalDistribution.&lt;init&gt;(double,double)" proba="0.6666666666666666"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition></state><state id="s7"><transition target="sX" action="epsilon" proba="0.5"></transition><transition target="s1" action="org.apache.commons.math3.distribution.NormalDistribution.getStandardDeviation()" proba="0.5"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="s8" action="org.apache.commons.math3.distribution.NormalDistribution.inverseCumulativeProbability(double)" proba="0.75"></transition><transition target="sX" action="epsilon" proba="0.25"></transition></state><state id="s9"><transition target="s10" action="org.apache.commons.math3.distribution.NormalDistribution.getNumericalVariance()" proba="1.0"></transition></state><state id="s0"><transition target="s3" action="org.apache.commons.math3.distribution.NormalDistribution.sample()" proba="0.05263157894736842"></transition><transition target="s4" action="org.apache.commons.math3.distribution.NormalDistribution.&lt;init&gt;(double,double)" proba="0.5789473684210527"></transition><transition target="s5" action="org.apache.commons.math3.distribution.NormalDistribution.cumulativeProbability(double)" proba="0.05263157894736842"></transition><transition target="s7" action="org.apache.commons.math3.distribution.NormalDistribution.getMean()" proba="0.10526315789473684"></transition><transition target="s1" action="org.apache.commons.math3.distribution.NormalDistribution.getStandardDeviation()" proba="0.05263157894736842"></transition><transition target="s2" action="org.apache.commons.math3.distribution.NormalDistribution.&lt;init&gt;(org.apache.commons.math3.random.RandomGenerator,double,double,double)" proba="0.15789473684210525"></transition></state><state id="s1"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s2"><transition target="s3" action="org.apache.commons.math3.distribution.NormalDistribution.sample()" proba="0.3333333333333333"></transition><transition target="sX" action="epsilon" proba="0.6666666666666666"></transition></state></states></ts>