<?xml version="1.0"?><ts><start>s0</start><states><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s11"><transition target="s12" action="org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.newYSampleData(double[])" proba="1.0"></transition></state><state id="s10"><transition target="s7" action="org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.toArray()" proba="0.16666666666666666"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition><transition target="s9" action="org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.copy()" proba="0.3333333333333333"></transition><transition target="s2" action="org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.setNoIntercept(boolean)" proba="0.16666666666666666"></transition></state><state id="s13"><transition target="s21" action="org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.estimateResiduals()" proba="0.375"></transition><transition target="s14" action="org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.estimateRegressionParametersStandardErrors()" proba="0.625"></transition></state><state id="s12"><transition target="s6" action="org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.calculateBeta()" proba="0.3333333333333333"></transition><transition target="s8" action="org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.getX()" proba="0.6666666666666666"></transition></state><state id="s15"><transition target="s23" action="org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.calculateAdjustedRSquared()" proba="0.5"></transition><transition target="s16" action="org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.estimateErrorVariance()" proba="0.5"></transition></state><state id="s14"><transition target="s22" action="org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.estimateRegressionStandardError()" proba="0.375"></transition><transition target="s21" action="org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.estimateResiduals()" proba="0.125"></transition><transition target="s15" action="org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.calculateRSquared()" proba="0.5"></transition></state><state id="s17"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s16"><transition target="s17" action="org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.calculateResidualSumOfSquares()" proba="1.0"></transition></state><state id="s19"><transition target="s7" action="org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.toArray()" proba="1.0"></transition></state><state id="s18"><transition target="sX" action="epsilon" proba="0.5"></transition><transition target="s19" action="org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.calculateResiduals()" proba="0.5"></transition></state><state id="s0"><transition target="s10" action="org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.getY()" proba="0.06666666666666667"></transition><transition target="s1" action="org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.&lt;init&gt;()" proba="0.9333333333333333"></transition></state><state id="s1"><transition target="s3" action="org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.newSampleData(double[],double[][])" proba="0.2"></transition><transition target="s5" action="org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.newSampleData(double[],int,int)" proba="0.6"></transition><transition target="s2" action="org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.setNoIntercept(boolean)" proba="0.2"></transition></state><state id="s2"><transition target="s3" action="org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.newSampleData(double[],double[][])" proba="0.6"></transition><transition target="s5" action="org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.newSampleData(double[],int,int)" proba="0.4"></transition></state><state id="s3"><transition target="s4" action="org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.calculateHat()" proba="0.3333333333333333"></transition><transition target="sX" action="epsilon" proba="0.16666666666666666"></transition><transition target="s8" action="org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.getX()" proba="0.3333333333333333"></transition><transition target="s18" action="org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.calculateYVariance()" proba="0.16666666666666666"></transition></state><state id="s4"><transition target="s21" action="org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.estimateResiduals()" proba="0.3333333333333333"></transition><transition target="sX" action="epsilon" proba="0.6666666666666666"></transition></state><state id="s5"><transition target="s4" action="org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.calculateHat()" proba="0.09090909090909091"></transition><transition target="s6" action="org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.calculateBeta()" proba="0.18181818181818182"></transition><transition target="s13" action="org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.estimateRegressionParameters()" proba="0.7272727272727273"></transition></state><state id="s6"><transition target="s7" action="org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.toArray()" proba="0.3333333333333333"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition><transition target="s9" action="org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.copy()" proba="0.3333333333333333"></transition></state><state id="s7"><transition target="s20" action="org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.calculateErrorVariance()" proba="0.25"></transition><transition target="sX" action="epsilon" proba="0.25"></transition><transition target="s8" action="org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.getX()" proba="0.25"></transition><transition target="s18" action="org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.calculateYVariance()" proba="0.25"></transition></state><state id="s8"><transition target="s10" action="org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.getY()" proba="0.3333333333333333"></transition><transition target="s9" action="org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.copy()" proba="0.5"></transition><transition target="s19" action="org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.calculateResiduals()" proba="0.16666666666666666"></transition></state><state id="s9"><transition target="s11" action="org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.newXSampleData(double[][])" proba="0.3333333333333333"></transition><transition target="s10" action="org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.getY()" proba="0.3333333333333333"></transition><transition target="s8" action="org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.getX()" proba="0.16666666666666666"></transition><transition target="s12" action="org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.newYSampleData(double[])" proba="0.16666666666666666"></transition></state><state id="s20"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s22"><transition target="s15" action="org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.calculateRSquared()" proba="1.0"></transition></state><state id="s21"><transition target="s22" action="org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.estimateRegressionStandardError()" proba="0.2"></transition><transition target="s10" action="org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.getY()" proba="0.2"></transition><transition target="s14" action="org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.estimateRegressionParametersStandardErrors()" proba="0.6"></transition></state><state id="s23"><transition target="sX" action="epsilon" proba="0.5"></transition><transition target="s1" action="org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.&lt;init&gt;()" proba="0.25"></transition><transition target="s2" action="org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.setNoIntercept(boolean)" proba="0.25"></transition></state></states></ts>