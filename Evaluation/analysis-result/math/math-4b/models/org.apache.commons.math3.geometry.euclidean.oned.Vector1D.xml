<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s2" action="org.apache.commons.math3.geometry.euclidean.oned.Vector1D.getHyperplane()" proba="1.0"></transition></state><state id="s4"><transition target="s5" action="org.apache.commons.math3.geometry.euclidean.oned.Vector1D.getX()" proba="1.0"></transition></state><state id="s5"><transition target="s3" action="org.apache.commons.math3.geometry.euclidean.oned.Vector1D.side(org.apache.commons.math3.geometry.partitioning.Hyperplane&lt;org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D&gt;)" proba="0.01646090534979424"></transition><transition target="s5" action="org.apache.commons.math3.geometry.euclidean.oned.Vector1D.getX()" proba="0.4691358024691358"></transition><transition target="sX" action="epsilon" proba="0.51440329218107"></transition></state><state id="s6"><transition target="s7" action="org.apache.commons.math3.geometry.euclidean.oned.Vector1D.wholeHyperplane()" proba="1.0"></transition></state><state id="s7"><transition target="sX" action="epsilon" proba="0.5"></transition><transition target="s2" action="org.apache.commons.math3.geometry.euclidean.oned.Vector1D.getHyperplane()" proba="0.5"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="s5" action="org.apache.commons.math3.geometry.euclidean.oned.Vector1D.getX()" proba="0.6153846153846154"></transition><transition target="sX" action="epsilon" proba="0.38461538461538464"></transition></state><state id="s9"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s11"><transition target="s12" action="org.apache.commons.math3.geometry.euclidean.oned.Vector1D.getTree(boolean)" proba="1.0"></transition></state><state id="s10"><transition target="s11" action="org.apache.commons.math3.geometry.euclidean.oned.Vector1D.asList()" proba="1.0"></transition></state><state id="s13"><transition target="s13" action="org.apache.commons.math3.geometry.euclidean.oned.Vector1D.getCut()" proba="0.5"></transition><transition target="s2" action="org.apache.commons.math3.geometry.euclidean.oned.Vector1D.getHyperplane()" proba="0.5"></transition></state><state id="s12"><transition target="s13" action="org.apache.commons.math3.geometry.euclidean.oned.Vector1D.getCut()" proba="1.0"></transition></state><state id="s14"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s0"><transition target="s5" action="org.apache.commons.math3.geometry.euclidean.oned.Vector1D.getX()" proba="0.02304147465437788"></transition><transition target="s6" action="org.apache.commons.math3.geometry.euclidean.oned.Vector1D.&lt;init&gt;(org.apache.commons.math3.geometry.euclidean.oned.Vector1D,boolean)" proba="0.055299539170506916"></transition><transition target="s10" action="org.apache.commons.math3.geometry.euclidean.oned.Vector1D.&lt;init&gt;(double,double)" proba="0.018433179723502304"></transition><transition target="s8" action="org.apache.commons.math3.geometry.euclidean.oned.Vector1D.&lt;init&gt;(double)" proba="0.8387096774193549"></transition><transition target="s9" action="org.apache.commons.math3.geometry.euclidean.oned.Vector1D.&lt;init&gt;(org.apache.commons.math3.geometry.partitioning.SubHyperplane&lt;S&gt;,org.apache.commons.math3.geometry.partitioning.BSPTree&lt;S&gt;,org.apache.commons.math3.geometry.partitioning.BSPTree&lt;S&gt;,java.lang.Object)" proba="0.018433179723502304"></transition><transition target="s14" action="org.apache.commons.math3.geometry.euclidean.oned.Vector1D.&lt;init&gt;(java.lang.Object)" proba="0.03686635944700461"></transition><transition target="s1" action="org.apache.commons.math3.geometry.euclidean.oned.Vector1D.&lt;init&gt;(org.apache.commons.math3.geometry.partitioning.Hyperplane&lt;org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D&gt;,org.apache.commons.math3.geometry.partitioning.Region&lt;org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D&gt;)" proba="0.009216589861751152"></transition></state><state id="s1"><transition target="s2" action="org.apache.commons.math3.geometry.euclidean.oned.Vector1D.getHyperplane()" proba="1.0"></transition></state><state id="s2"><transition target="s3" action="org.apache.commons.math3.geometry.euclidean.oned.Vector1D.side(org.apache.commons.math3.geometry.partitioning.Hyperplane&lt;org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D&gt;)" proba="0.2"></transition><transition target="s4" action="org.apache.commons.math3.geometry.euclidean.oned.Vector1D.getLocation()" proba="0.6"></transition><transition target="sX" action="epsilon" proba="0.2"></transition></state></states></ts>