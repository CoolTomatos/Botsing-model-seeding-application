<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="java.lang.Double.doubleValue()" proba="0.16666666666666666"></transition><transition target="s4" action="java.lang.Double.floatValue()" proba="0.08333333333333333"></transition><transition target="sX" action="epsilon" proba="0.625"></transition><transition target="s1" action="java.lang.Double.valueOf(double)" proba="0.125"></transition></state><state id="s4"><transition target="s4" action="java.lang.Double.floatValue()" proba="0.3333333333333333"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition><transition target="s12" action="java.lang.Double.append(java.lang.String)" proba="0.3333333333333333"></transition></state><state id="s5"><transition target="s5" action="java.lang.Double.doubleToRawLongBits(double)" proba="0.11764705882352941"></transition><transition target="s6" action="java.lang.Double.longBitsToDouble(long)" proba="0.35294117647058826"></transition><transition target="s10" action="java.lang.Double.isInfinite(double)" proba="0.058823529411764705"></transition><transition target="sX" action="epsilon" proba="0.47058823529411764"></transition></state><state id="s6"><transition target="s6" action="java.lang.Double.longBitsToDouble(long)" proba="0.14705882352941177"></transition><transition target="sX" action="epsilon" proba="0.8235294117647058"></transition><transition target="s2" action="java.lang.Double.isNaN(double)" proba="0.029411764705882353"></transition></state><state id="s7"><transition target="sX" action="epsilon" proba="0.875"></transition><transition target="s1" action="java.lang.Double.valueOf(double)" proba="0.125"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="s6" action="java.lang.Double.longBitsToDouble(long)" proba="0.40816326530612246"></transition><transition target="s8" action="java.lang.Double.doubleToLongBits(double)" proba="0.24489795918367346"></transition><transition target="sX" action="epsilon" proba="0.32653061224489793"></transition><transition target="s2" action="java.lang.Double.isNaN(double)" proba="0.02040816326530612"></transition></state><state id="s9"><transition target="sX" action="epsilon" proba="0.75"></transition><transition target="s9" action="java.lang.Double.compare(double,double)" proba="0.25"></transition></state><state id="s20"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s11"><transition target="s11" action="java.lang.Double.parseDouble(java.lang.String)" proba="0.56"></transition><transition target="sX" action="epsilon" proba="0.28"></transition><transition target="s15" action="java.lang.Double.valueOf(java.lang.String)" proba="0.04"></transition><transition target="s2" action="java.lang.Double.isNaN(double)" proba="0.12"></transition></state><state id="s10"><transition target="s5" action="java.lang.Double.doubleToRawLongBits(double)" proba="0.020134228187919462"></transition><transition target="s10" action="java.lang.Double.isInfinite(double)" proba="0.3691275167785235"></transition><transition target="sX" action="epsilon" proba="0.40939597315436244"></transition><transition target="s8" action="java.lang.Double.doubleToLongBits(double)" proba="0.006711409395973154"></transition><transition target="s1" action="java.lang.Double.valueOf(double)" proba="0.04697986577181208"></transition><transition target="s2" action="java.lang.Double.isNaN(double)" proba="0.1476510067114094"></transition></state><state id="s13"><transition target="s12" action="java.lang.Double.append(java.lang.String)" proba="1.0"></transition></state><state id="s12"><transition target="s13" action="java.lang.Double.append(java.lang.Object)" proba="0.2727272727272727"></transition><transition target="s12" action="java.lang.Double.append(java.lang.String)" proba="0.6363636363636364"></transition><transition target="s14" action="java.lang.Double.toString()" proba="0.09090909090909091"></transition></state><state id="s15"><transition target="s3" action="java.lang.Double.doubleValue()" proba="0.6"></transition><transition target="sX" action="epsilon" proba="0.4"></transition></state><state id="s14"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s17"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s16"><transition target="s10" action="java.lang.Double.isInfinite(double)" proba="0.1111111111111111"></transition><transition target="sX" action="epsilon" proba="0.8888888888888888"></transition></state><state id="s19"><transition target="s20" action="java.lang.Double.isNaN()" proba="1.0"></transition></state><state id="s18"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s0"><transition target="s3" action="java.lang.Double.doubleValue()" proba="0.020134228187919462"></transition><transition target="s5" action="java.lang.Double.doubleToRawLongBits(double)" proba="0.020134228187919462"></transition><transition target="s6" action="java.lang.Double.longBitsToDouble(long)" proba="0.0050335570469798654"></transition><transition target="s8" action="java.lang.Double.doubleToLongBits(double)" proba="0.0587248322147651"></transition><transition target="s9" action="java.lang.Double.compare(double,double)" proba="0.030201342281879196"></transition><transition target="s11" action="java.lang.Double.parseDouble(java.lang.String)" proba="0.018456375838926176"></transition><transition target="s10" action="java.lang.Double.isInfinite(double)" proba="0.09563758389261745"></transition><transition target="s15" action="java.lang.Double.valueOf(java.lang.String)" proba="0.006711409395973154"></transition><transition target="s17" action="java.lang.Double.&lt;init&gt;(double)" proba="0.0016778523489932886"></transition><transition target="s16" action="java.lang.Double.toString(double)" proba="0.015100671140939598"></transition><transition target="s19" action="java.lang.Double.isInfinite()" proba="0.0016778523489932886"></transition><transition target="s18" action="java.lang.Double.compareTo(java.lang.Double)" proba="0.0016778523489932886"></transition><transition target="s1" action="java.lang.Double.valueOf(double)" proba="0.4664429530201342"></transition><transition target="s2" action="java.lang.Double.isNaN(double)" proba="0.25838926174496646"></transition></state><state id="s1"><transition target="s3" action="java.lang.Double.doubleValue()" proba="0.008680555555555556"></transition><transition target="s10" action="java.lang.Double.isInfinite(double)" proba="0.012152777777777778"></transition><transition target="s7" action="java.lang.Double.hashCode()" proba="0.013888888888888888"></transition><transition target="sX" action="epsilon" proba="0.46875"></transition><transition target="s1" action="java.lang.Double.valueOf(double)" proba="0.4895833333333333"></transition><transition target="s2" action="java.lang.Double.isNaN(double)" proba="0.006944444444444444"></transition></state><state id="s2"><transition target="s10" action="java.lang.Double.isInfinite(double)" proba="0.08022922636103152"></transition><transition target="sX" action="epsilon" proba="0.4326647564469914"></transition><transition target="s8" action="java.lang.Double.doubleToLongBits(double)" proba="0.0028653295128939827"></transition><transition target="s1" action="java.lang.Double.valueOf(double)" proba="0.014326647564469915"></transition><transition target="s2" action="java.lang.Double.isNaN(double)" proba="0.4699140401146132"></transition></state></states></ts>