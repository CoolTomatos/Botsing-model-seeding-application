<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s2" action="org.apache.commons.math3.userguide.ClusterAlgorithmComparison.normalize(java.util.List,double,double,double,double)" proba="1.0"></transition></state><state id="s4"><transition target="s2" action="org.apache.commons.math3.userguide.ClusterAlgorithmComparison.normalize(java.util.List,double,double,double,double)" proba="1.0"></transition></state><state id="s5"><transition target="s2" action="org.apache.commons.math3.userguide.ClusterAlgorithmComparison.normalize(java.util.List,double,double,double,double)" proba="1.0"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s0"><transition target="s1" action="org.apache.commons.math3.userguide.ClusterAlgorithmComparison.makeCircles(int,boolean,double,double,org.apache.commons.math3.random.RandomGenerator)" proba="1.0"></transition></state><state id="s1"><transition target="s2" action="org.apache.commons.math3.userguide.ClusterAlgorithmComparison.normalize(java.util.List,double,double,double,double)" proba="1.0"></transition></state><state id="s2"><transition target="s3" action="org.apache.commons.math3.userguide.ClusterAlgorithmComparison.makeMoons(int,boolean,double,org.apache.commons.math3.random.RandomGenerator)" proba="0.25"></transition><transition target="s4" action="org.apache.commons.math3.userguide.ClusterAlgorithmComparison.makeBlobs(int,int,double,double,double,boolean,org.apache.commons.math3.random.RandomGenerator)" proba="0.25"></transition><transition target="s5" action="org.apache.commons.math3.userguide.ClusterAlgorithmComparison.makeRandom(int)" proba="0.25"></transition><transition target="sX" action="epsilon" proba="0.25"></transition></state></states></ts>