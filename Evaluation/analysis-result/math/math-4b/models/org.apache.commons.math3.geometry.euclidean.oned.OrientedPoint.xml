<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.getHyperplane()" proba="0.01818181818181818"></transition><transition target="s6" action="org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.side(org.apache.commons.math3.geometry.partitioning.Hyperplane&lt;org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D&gt;)" proba="0.03636363636363636"></transition><transition target="s7" action="org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.getLocation()" proba="0.14545454545454545"></transition><transition target="sX" action="epsilon" proba="0.4909090909090909"></transition><transition target="s17" action="org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.split(org.apache.commons.math3.geometry.partitioning.Hyperplane&lt;org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D&gt;)" proba="0.01818181818181818"></transition><transition target="s2" action="org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.getOffset(org.apache.commons.math3.geometry.Vector&lt;org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D&gt;)" proba="0.2909090909090909"></transition></state><state id="s4"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s5"><transition target="s3" action="org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.getHyperplane()" proba="1.0"></transition></state><state id="s6"><transition target="s3" action="org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.getHyperplane()" proba="1.0"></transition></state><state id="s7"><transition target="s3" action="org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.getHyperplane()" proba="0.1"></transition><transition target="s11" action="org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.isDirect()" proba="0.5"></transition><transition target="s6" action="org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.side(org.apache.commons.math3.geometry.partitioning.Hyperplane&lt;org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D&gt;)" proba="0.2"></transition><transition target="sX" action="epsilon" proba="0.1"></transition><transition target="s12" action="org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.getX()" proba="0.1"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="s9" action="org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.wholeHyperplane()" proba="1.0"></transition></state><state id="s9"><transition target="s3" action="org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.getHyperplane()" proba="0.21875"></transition><transition target="sX" action="epsilon" proba="0.78125"></transition></state><state id="s11"><transition target="s11" action="org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.isDirect()" proba="0.42857142857142855"></transition><transition target="sX" action="epsilon" proba="0.47619047619047616"></transition><transition target="s18" action="org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.getPlus()" proba="0.09523809523809523"></transition></state><state id="s10"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s13"><transition target="s14" action="org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.asList()" proba="1.0"></transition></state><state id="s12"><transition target="s11" action="org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.isDirect()" proba="1.0"></transition></state><state id="s15"><transition target="s16" action="org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.getCut()" proba="1.0"></transition></state><state id="s14"><transition target="s15" action="org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.getTree(boolean)" proba="1.0"></transition></state><state id="s17"><transition target="s3" action="org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.getHyperplane()" proba="1.0"></transition></state><state id="s16"><transition target="s3" action="org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.getHyperplane()" proba="0.5"></transition><transition target="s16" action="org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.getCut()" proba="0.5"></transition></state><state id="s19"><transition target="s16" action="org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.getCut()" proba="1.0"></transition></state><state id="s18"><transition target="s19" action="org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.getMinus()" proba="1.0"></transition></state><state id="s0"><transition target="s4" action="org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.&lt;init&gt;(java.lang.Object)" proba="0.12173913043478261"></transition><transition target="s5" action="org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.&lt;init&gt;(org.apache.commons.math3.geometry.partitioning.Hyperplane&lt;org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D&gt;,org.apache.commons.math3.geometry.partitioning.Region&lt;org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D&gt;)" proba="0.017391304347826087"></transition><transition target="s10" action="org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.&lt;init&gt;(org.apache.commons.math3.geometry.partitioning.SubHyperplane&lt;S&gt;,org.apache.commons.math3.geometry.partitioning.BSPTree&lt;S&gt;,org.apache.commons.math3.geometry.partitioning.BSPTree&lt;S&gt;,java.lang.Object)" proba="0.06956521739130435"></transition><transition target="s7" action="org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.getLocation()" proba="0.017391304347826087"></transition><transition target="s13" action="org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.&lt;init&gt;(double,double)" proba="0.02608695652173913"></transition><transition target="s8" action="org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.&lt;init&gt;(org.apache.commons.math3.geometry.euclidean.oned.Vector1D,boolean)" proba="0.2782608695652174"></transition><transition target="s1" action="org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.&lt;init&gt;(double)" proba="0.46956521739130436"></transition></state><state id="s1"><transition target="sX" action="epsilon" proba="0.5925925925925926"></transition><transition target="s2" action="org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.getOffset(org.apache.commons.math3.geometry.Vector&lt;org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D&gt;)" proba="0.4074074074074074"></transition></state><state id="s2"><transition target="s3" action="org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.getHyperplane()" proba="0.9210526315789473"></transition><transition target="sX" action="epsilon" proba="0.07894736842105263"></transition></state></states></ts>