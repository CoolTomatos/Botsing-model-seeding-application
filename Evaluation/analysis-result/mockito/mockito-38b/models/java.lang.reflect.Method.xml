<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="java.lang.reflect.Method.getModifiers()" proba="0.2"></transition><transition target="s13" action="java.lang.reflect.Method.new_instance(org.mockito.asm.Type)" proba="0.2"></transition><transition target="sX" action="epsilon" proba="0.6"></transition></state><state id="s4"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s5"><transition target="sX" action="epsilon" proba="0.5"></transition><transition target="s2" action="java.lang.reflect.Method.getReturnType()" proba="0.5"></transition></state><state id="s6"><transition target="sX" action="epsilon" proba="0.5"></transition><transition target="s1" action="java.lang.reflect.Method.getParameterTypes()" proba="0.5"></transition></state><state id="s7"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="s11" action="java.lang.reflect.Method.hashCode()" proba="0.06666666666666667"></transition><transition target="sX" action="epsilon" proba="0.4"></transition><transition target="s12" action="java.lang.reflect.Method.equals(java.lang.Object)" proba="0.26666666666666666"></transition><transition target="s9" action="java.lang.reflect.Method.getExceptionTypes()" proba="0.06666666666666667"></transition><transition target="s1" action="java.lang.reflect.Method.getParameterTypes()" proba="0.2"></transition></state><state id="s9"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s20"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s11"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s10"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s13"><transition target="s14" action="java.lang.reflect.Method.dup()" proba="1.0"></transition></state><state id="s12"><transition target="sX" action="epsilon" proba="0.75"></transition><transition target="s8" action="java.lang.reflect.Method.getName()" proba="0.125"></transition><transition target="s1" action="java.lang.reflect.Method.getParameterTypes()" proba="0.125"></transition></state><state id="s15"><transition target="s16" action="java.lang.reflect.Method.putfield(java.lang.String)" proba="1.0"></transition></state><state id="s14"><transition target="s15" action="java.lang.reflect.Method.invoke_constructor(org.mockito.asm.Type,org.mockito.cglib.core.Signature)" proba="1.0"></transition></state><state id="s17"><transition target="s18" action="java.lang.reflect.Method.end_method()" proba="1.0"></transition></state><state id="s16"><transition target="s17" action="java.lang.reflect.Method.return_value()" proba="1.0"></transition></state><state id="s19"><transition target="s8" action="java.lang.reflect.Method.getName()" proba="1.0"></transition></state><state id="s18"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s0"><transition target="s3" action="java.lang.reflect.Method.getModifiers()" proba="0.08823529411764706"></transition><transition target="s20" action="java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object[])" proba="0.08823529411764706"></transition><transition target="s10" action="java.lang.reflect.Method.isBridge()" proba="0.029411764705882353"></transition><transition target="s7" action="java.lang.reflect.Method.isVarArgs()" proba="0.029411764705882353"></transition><transition target="s8" action="java.lang.reflect.Method.getName()" proba="0.20588235294117646"></transition><transition target="s12" action="java.lang.reflect.Method.equals(java.lang.Object)" proba="0.08823529411764706"></transition><transition target="s19" action="java.lang.reflect.Method.getDeclaringClass()" proba="0.058823529411764705"></transition><transition target="s1" action="java.lang.reflect.Method.getParameterTypes()" proba="0.08823529411764706"></transition><transition target="s2" action="java.lang.reflect.Method.getReturnType()" proba="0.3235294117647059"></transition></state><state id="s1"><transition target="s8" action="java.lang.reflect.Method.getName()" proba="0.2"></transition><transition target="sX" action="epsilon" proba="0.3"></transition><transition target="s1" action="java.lang.reflect.Method.getParameterTypes()" proba="0.1"></transition><transition target="s2" action="java.lang.reflect.Method.getReturnType()" proba="0.4"></transition></state><state id="s2"><transition target="s3" action="java.lang.reflect.Method.getModifiers()" proba="0.05555555555555555"></transition><transition target="s4" action="java.lang.reflect.Method.getSimpleName()" proba="0.05555555555555555"></transition><transition target="s5" action="java.lang.reflect.Method.isPrimitive()" proba="0.1111111111111111"></transition><transition target="s6" action="java.lang.reflect.Method.isAssignableFrom(java.lang.Class)" proba="0.1111111111111111"></transition><transition target="sX" action="epsilon" proba="0.2777777777777778"></transition><transition target="s8" action="java.lang.reflect.Method.getName()" proba="0.16666666666666666"></transition><transition target="s12" action="java.lang.reflect.Method.equals(java.lang.Object)" proba="0.05555555555555555"></transition><transition target="s1" action="java.lang.reflect.Method.getParameterTypes()" proba="0.05555555555555555"></transition><transition target="s2" action="java.lang.reflect.Method.getReturnType()" proba="0.1111111111111111"></transition></state></states></ts>