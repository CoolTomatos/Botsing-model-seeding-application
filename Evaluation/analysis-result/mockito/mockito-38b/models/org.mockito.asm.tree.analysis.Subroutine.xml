<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s4" action="org.mockito.asm.tree.analysis.Subroutine.push(org.mockito.asm.tree.analysis.Value)" proba="1.0"></transition></state><state id="s4"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s5"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s6"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s0"><transition target="s5" action="org.mockito.asm.tree.analysis.Subroutine.copy()" proba="0.42857142857142855"></transition><transition target="s6" action="org.mockito.asm.tree.analysis.Subroutine.merge(org.mockito.asm.tree.analysis.Subroutine)" proba="0.2857142857142857"></transition><transition target="s1" action="org.mockito.asm.tree.analysis.Subroutine.&lt;init&gt;(org.mockito.asm.tree.LabelNode,int,org.mockito.asm.tree.JumpInsnNode)" proba="0.2857142857142857"></transition></state><state id="s1"><transition target="sX" action="epsilon" proba="0.5"></transition><transition target="s2" action="org.mockito.asm.tree.analysis.Subroutine.init(org.mockito.asm.tree.analysis.Frame)" proba="0.5"></transition></state><state id="s2"><transition target="s3" action="org.mockito.asm.tree.analysis.Subroutine.clearStack()" proba="1.0"></transition></state></states></ts>