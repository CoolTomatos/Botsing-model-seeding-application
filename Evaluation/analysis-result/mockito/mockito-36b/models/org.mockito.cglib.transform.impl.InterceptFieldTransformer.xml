<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s1" action="org.mockito.cglib.transform.impl.InterceptFieldTransformer.access$000(org.mockito.cglib.transform.impl.InterceptFieldTransformer)" proba="1.0"></transition></state><state id="s4"><transition target="s5" action="org.mockito.cglib.transform.impl.InterceptFieldTransformer.access$200(java.lang.String,java.lang.String)" proba="1.0"></transition></state><state id="s5"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s0"><transition target="s1" action="org.mockito.cglib.transform.impl.InterceptFieldTransformer.access$000(org.mockito.cglib.transform.impl.InterceptFieldTransformer)" proba="1.0"></transition></state><state id="s1"><transition target="s4" action="org.mockito.cglib.transform.impl.InterceptFieldTransformer.acceptWrite(org.mockito.asm.Type,java.lang.String)" proba="0.5"></transition><transition target="s2" action="org.mockito.cglib.transform.impl.InterceptFieldTransformer.acceptRead(org.mockito.asm.Type,java.lang.String)" proba="0.5"></transition></state><state id="s2"><transition target="s3" action="org.mockito.cglib.transform.impl.InterceptFieldTransformer.access$100(java.lang.String,java.lang.String)" proba="1.0"></transition></state></states></ts>