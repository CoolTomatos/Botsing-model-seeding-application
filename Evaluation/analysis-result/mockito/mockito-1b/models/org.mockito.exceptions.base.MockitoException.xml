<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s4" action="org.mockito.exceptions.base.MockitoException.&lt;init&gt;(java.lang.String,java.lang.Throwable)" proba="1.0"></transition></state><state id="s4"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s5"><transition target="s5" action="org.mockito.exceptions.base.MockitoException.getCause()" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.5"></transition></state><state id="s6"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s0"><transition target="s3" action="org.mockito.exceptions.base.MockitoException.fromString(java.lang.String)" proba="0.1"></transition><transition target="s5" action="org.mockito.exceptions.base.MockitoException.getCause()" proba="0.1"></transition><transition target="s6" action="org.mockito.exceptions.base.MockitoException.getUnfilteredStackTrace()" proba="0.05"></transition><transition target="s1" action="org.mockito.exceptions.base.MockitoException.getMessage()" proba="0.55"></transition><transition target="s2" action="org.mockito.exceptions.base.MockitoException.&lt;init&gt;(java.lang.String)" proba="0.2"></transition></state><state id="s1"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s2"><transition target="sX" action="epsilon" proba="1.0"></transition></state></states></ts>