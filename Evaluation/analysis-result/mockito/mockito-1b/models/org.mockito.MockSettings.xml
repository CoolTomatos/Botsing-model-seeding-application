<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s4" action="org.mockito.MockSettings.spiedInstance(java.lang.Object)" proba="1.0"></transition></state><state id="s4"><transition target="s2" action="org.mockito.MockSettings.useConstructor()" proba="1.0"></transition></state><state id="s5"><transition target="s6" action="org.mockito.MockSettings.name(java.lang.String)" proba="1.0"></transition></state><state id="s6"><transition target="s6" action="org.mockito.MockSettings.name(java.lang.String)" proba="0.5"></transition><transition target="s7" action="org.mockito.MockSettings.serializable()" proba="0.5"></transition></state><state id="s7"><transition target="s8" action="org.mockito.MockSettings.defaultAnswer(org.mockito.stubbing.Answer)" proba="1.0"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s0"><transition target="s5" action="org.mockito.MockSettings.extraInterfaces(java.lang.Class[])" proba="0.3333333333333333"></transition><transition target="s1" action="org.mockito.MockSettings.serializable(org.mockito.mock.SerializableMode)" proba="0.3333333333333333"></transition><transition target="s2" action="org.mockito.MockSettings.useConstructor()" proba="0.3333333333333333"></transition></state><state id="s1"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s2"><transition target="s3" action="org.mockito.MockSettings.outerInstance(java.lang.Object)" proba="0.3333333333333333"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition><transition target="s2" action="org.mockito.MockSettings.useConstructor()" proba="0.3333333333333333"></transition></state></states></ts>