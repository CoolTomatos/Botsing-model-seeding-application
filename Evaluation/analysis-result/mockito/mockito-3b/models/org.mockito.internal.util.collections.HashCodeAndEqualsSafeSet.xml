<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s4" action="org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.add(java.lang.Object)" proba="0.6666666666666666"></transition><transition target="s6" action="org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.containsAll(java.util.Collection)" proba="0.3333333333333333"></transition></state><state id="s4"><transition target="s5" action="org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.removeAll(java.util.Collection)" proba="0.25"></transition><transition target="s10" action="org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.retainAll(java.util.Collection)" proba="0.25"></transition><transition target="s7" action="org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.contains(java.lang.Object)" proba="0.25"></transition><transition target="s8" action="org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.remove(java.lang.Object)" proba="0.25"></transition></state><state id="s5"><transition target="s6" action="org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.containsAll(java.util.Collection)" proba="1.0"></transition></state><state id="s6"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s7"><transition target="s7" action="org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.contains(java.lang.Object)" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.5"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="s9" action="org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.isEmpty()" proba="1.0"></transition></state><state id="s9"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s11"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s10"><transition target="s6" action="org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.containsAll(java.util.Collection)" proba="1.0"></transition></state><state id="s13"><transition target="s12" action="org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.iterator()" proba="1.0"></transition></state><state id="s12"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s15"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s14"><transition target="s15" action="org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.toArray(java.lang.Object[])" proba="1.0"></transition></state><state id="s0"><transition target="s11" action="org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.of(java.lang.Iterable)" proba="0.06666666666666667"></transition><transition target="s13" action="org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.access$000(org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet)" proba="0.06666666666666667"></transition><transition target="s12" action="org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.iterator()" proba="0.06666666666666667"></transition><transition target="s14" action="org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.toArray()" proba="0.06666666666666667"></transition><transition target="s1" action="org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.of(java.lang.Object[])" proba="0.4"></transition><transition target="s2" action="org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.&lt;init&gt;()" proba="0.3333333333333333"></transition></state><state id="s1"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s2"><transition target="s3" action="org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.addAll(java.util.Collection)" proba="0.6"></transition><transition target="s4" action="org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.add(java.lang.Object)" proba="0.4"></transition></state></states></ts>