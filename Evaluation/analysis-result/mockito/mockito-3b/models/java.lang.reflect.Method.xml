<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="java.lang.reflect.Method.getName()" proba="0.08333333333333333"></transition><transition target="s6" action="java.lang.reflect.Method.getParameterTypes()" proba="0.3333333333333333"></transition><transition target="sX" action="epsilon" proba="0.25"></transition><transition target="s8" action="java.lang.reflect.Method.contains(java.lang.CharSequence)" proba="0.08333333333333333"></transition><transition target="s16" action="java.lang.reflect.Method.equals(java.lang.Object)" proba="0.25"></transition></state><state id="s4"><transition target="sX" action="epsilon" proba="0.6666666666666666"></transition><transition target="s15" action="java.lang.reflect.Method.getModifiers()" proba="0.3333333333333333"></transition></state><state id="s5"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s6"><transition target="s6" action="java.lang.reflect.Method.getParameterTypes()" proba="0.18181818181818182"></transition><transition target="sX" action="epsilon" proba="0.6363636363636364"></transition><transition target="s9" action="java.lang.reflect.Method.getDeclaringClass()" proba="0.09090909090909091"></transition><transition target="s1" action="java.lang.reflect.Method.getReturnType()" proba="0.09090909090909091"></transition></state><state id="s7"><transition target="s3" action="java.lang.reflect.Method.getName()" proba="1.0"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s9"><transition target="s3" action="java.lang.reflect.Method.getName()" proba="0.6"></transition><transition target="s10" action="java.lang.reflect.Method.isInterface()" proba="0.2"></transition><transition target="sX" action="epsilon" proba="0.2"></transition></state><state id="s20"><transition target="s21" action="java.lang.reflect.Method.toGenericString()" proba="0.5"></transition><transition target="s19" action="java.lang.reflect.Method.getGenericReturnType()" proba="0.5"></transition></state><state id="s11"><transition target="sX" action="epsilon" proba="0.5"></transition><transition target="s18" action="java.lang.reflect.Method.getCause()" proba="0.5"></transition></state><state id="s10"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s21"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s13"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s12"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s15"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s14"><transition target="s4" action="java.lang.reflect.Method.isVarArgs()" proba="0.25"></transition><transition target="sX" action="epsilon" proba="0.75"></transition></state><state id="s17"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s16"><transition target="s6" action="java.lang.reflect.Method.getParameterTypes()" proba="0.6"></transition><transition target="sX" action="epsilon" proba="0.2"></transition><transition target="s16" action="java.lang.reflect.Method.equals(java.lang.Object)" proba="0.2"></transition></state><state id="s19"><transition target="s20" action="java.lang.reflect.Method.getTypeParameters()" proba="1.0"></transition></state><state id="s18"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s0"><transition target="s3" action="java.lang.reflect.Method.getName()" proba="0.19444444444444445"></transition><transition target="s4" action="java.lang.reflect.Method.isVarArgs()" proba="0.05555555555555555"></transition><transition target="s6" action="java.lang.reflect.Method.getParameterTypes()" proba="0.05555555555555555"></transition><transition target="s7" action="java.lang.reflect.Method.isBridge()" proba="0.027777777777777776"></transition><transition target="s9" action="java.lang.reflect.Method.getDeclaringClass()" proba="0.1111111111111111"></transition><transition target="s11" action="java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object[])" proba="0.027777777777777776"></transition><transition target="s13" action="java.lang.reflect.Method.hashCode()" proba="0.027777777777777776"></transition><transition target="s15" action="java.lang.reflect.Method.getModifiers()" proba="0.05555555555555555"></transition><transition target="s14" action="java.lang.reflect.Method.getExceptionTypes()" proba="0.08333333333333333"></transition><transition target="s17" action="java.lang.reflect.Method.isAnnotationPresent(java.lang.Class)" proba="0.027777777777777776"></transition><transition target="s16" action="java.lang.reflect.Method.equals(java.lang.Object)" proba="0.027777777777777776"></transition><transition target="s19" action="java.lang.reflect.Method.getGenericReturnType()" proba="0.027777777777777776"></transition><transition target="s1" action="java.lang.reflect.Method.getReturnType()" proba="0.2777777777777778"></transition></state><state id="s1"><transition target="s5" action="java.lang.reflect.Method.getSimpleName()" proba="0.23076923076923078"></transition><transition target="s11" action="java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object[])" proba="0.07692307692307693"></transition><transition target="sX" action="epsilon" proba="0.3076923076923077"></transition><transition target="s12" action="java.lang.reflect.Method.isAssignableFrom(java.lang.Class)" proba="0.07692307692307693"></transition><transition target="s14" action="java.lang.reflect.Method.getExceptionTypes()" proba="0.07692307692307693"></transition><transition target="s1" action="java.lang.reflect.Method.getReturnType()" proba="0.07692307692307693"></transition><transition target="s2" action="java.lang.reflect.Method.isPrimitive()" proba="0.15384615384615385"></transition></state><state id="s2"><transition target="sX" action="epsilon" proba="0.5"></transition><transition target="s1" action="java.lang.reflect.Method.getReturnType()" proba="0.5"></transition></state></states></ts>