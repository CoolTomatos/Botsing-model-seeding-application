<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s4" action="org.mockitoutil.ExtraMatchers.contains(org.hamcrest.Matcher[])" proba="1.0"></transition></state><state id="s4"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s5"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s6"><transition target="s7" action="org.mockitoutil.ExtraMatchers.contains(org.hamcrest.Matcher&lt;T&gt;[])" proba="1.0"></transition></state><state id="s7"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s0"><transition target="s3" action="org.mockitoutil.ExtraMatchers.clazz(java.lang.Class)" proba="0.10344827586206896"></transition><transition target="s5" action="org.mockitoutil.ExtraMatchers.hasOnlyThoseClassesInStackTrace(java.lang.String[])" proba="0.06896551724137931"></transition><transition target="s6" action="org.mockitoutil.ExtraMatchers.clazz(java.lang.Class&lt;?&gt;)" proba="0.10344827586206896"></transition><transition target="s1" action="org.mockitoutil.ExtraMatchers.hasOnlyThoseClasses(java.lang.String[])" proba="0.4827586206896552"></transition><transition target="s2" action="org.mockitoutil.ExtraMatchers.hasExactlyInOrder(java.lang.Object[])" proba="0.2413793103448276"></transition></state><state id="s1"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s2"><transition target="sX" action="epsilon" proba="0.7777777777777778"></transition><transition target="s2" action="org.mockitoutil.ExtraMatchers.hasExactlyInOrder(java.lang.Object[])" proba="0.2222222222222222"></transition></state></states></ts>