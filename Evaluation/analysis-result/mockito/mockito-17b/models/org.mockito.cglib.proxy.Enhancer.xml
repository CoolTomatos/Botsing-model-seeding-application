<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s4" action="org.mockito.cglib.proxy.Enhancer.setSuperclass(java.lang.Class)" proba="1.0"></transition></state><state id="s4"><transition target="s5" action="org.mockito.cglib.proxy.Enhancer.setInterfaces(java.lang.Class[])" proba="1.0"></transition></state><state id="s5"><transition target="s6" action="org.mockito.cglib.proxy.Enhancer.setCallbackTypes(java.lang.Class[])" proba="1.0"></transition></state><state id="s6"><transition target="s7" action="org.mockito.cglib.proxy.Enhancer.setCallbackFilter(org.mockito.cglib.proxy.CallbackFilter)" proba="1.0"></transition></state><state id="s7"><transition target="s8" action="org.mockito.cglib.proxy.Enhancer.setUseFactory(boolean)" proba="1.0"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="s9" action="org.mockito.cglib.proxy.Enhancer.createClass()" proba="1.0"></transition></state><state id="s9"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s11"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s10"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s13"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s12"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s15"><transition target="s11" action="org.mockito.cglib.proxy.Enhancer.access$000(int)" proba="1.0"></transition></state><state id="s14"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s17"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s16"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s18"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s0"><transition target="s3" action="org.mockito.cglib.proxy.Enhancer.&lt;init&gt;()" proba="0.08333333333333333"></transition><transition target="s11" action="org.mockito.cglib.proxy.Enhancer.access$000(int)" proba="0.08333333333333333"></transition><transition target="s10" action="org.mockito.cglib.proxy.Enhancer.access$200()" proba="0.08333333333333333"></transition><transition target="s13" action="org.mockito.cglib.proxy.Enhancer.getClassLoader()" proba="0.08333333333333333"></transition><transition target="s12" action="org.mockito.cglib.proxy.Enhancer.getMethods(java.lang.Class,java.lang.Class[],java.util.List)" proba="0.08333333333333333"></transition><transition target="s15" action="org.mockito.cglib.proxy.Enhancer.access$100(org.mockito.cglib.proxy.Enhancer)" proba="0.08333333333333333"></transition><transition target="s14" action="org.mockito.cglib.proxy.Enhancer.isEnhanced(java.lang.Class)" proba="0.08333333333333333"></transition><transition target="s17" action="org.mockito.cglib.proxy.Enhancer.create(java.lang.Class,org.mockito.cglib.proxy.Callback)" proba="0.08333333333333333"></transition><transition target="s16" action="org.mockito.cglib.proxy.Enhancer.access$400(org.mockito.cglib.proxy.Enhancer,org.mockito.cglib.core.Signature,int)" proba="0.08333333333333333"></transition><transition target="s18" action="org.mockito.cglib.proxy.Enhancer.access$300(org.mockito.cglib.proxy.Enhancer,org.mockito.cglib.core.CodeEmitter,int)" proba="0.08333333333333333"></transition><transition target="s1" action="org.mockito.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class,org.mockito.cglib.proxy.Callback[])" proba="0.08333333333333333"></transition><transition target="s2" action="org.mockito.cglib.proxy.Enhancer.access$500(org.mockito.cglib.proxy.Enhancer)" proba="0.08333333333333333"></transition></state><state id="s1"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s2"><transition target="sX" action="epsilon" proba="1.0"></transition></state></states></ts>