<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="org.mockitousage.IMethods.varargs(java.lang.String[])" proba="0.1111111111111111"></transition><transition target="sX" action="epsilon" proba="0.8888888888888888"></transition></state><state id="s4"><transition target="s4" action="org.mockitousage.IMethods.simpleMethod()" proba="0.6363636363636364"></transition><transition target="sX" action="epsilon" proba="0.36363636363636365"></transition></state><state id="s5"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s6"><transition target="s6" action="org.mockitousage.IMethods.simpleMethod(int)" proba="0.25"></transition><transition target="sX" action="epsilon" proba="0.75"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s0"><transition target="s3" action="org.mockitousage.IMethods.varargs(java.lang.String[])" proba="0.3333333333333333"></transition><transition target="s4" action="org.mockitousage.IMethods.simpleMethod()" proba="0.16666666666666666"></transition><transition target="s5" action="org.mockitousage.IMethods.oneArg(boolean)" proba="0.041666666666666664"></transition><transition target="s6" action="org.mockitousage.IMethods.simpleMethod(int)" proba="0.125"></transition><transition target="s1" action="org.mockitousage.IMethods.intReturningMethod()" proba="0.08333333333333333"></transition><transition target="s2" action="org.mockitousage.IMethods.mixedVarargs(java.lang.Object,java.lang.String[])" proba="0.25"></transition></state><state id="s1"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s2"><transition target="sX" action="epsilon" proba="1.0"></transition></state></states></ts>