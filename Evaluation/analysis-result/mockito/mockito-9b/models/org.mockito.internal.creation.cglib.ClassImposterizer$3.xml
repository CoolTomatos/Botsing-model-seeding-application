<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s4" action="org.mockito.internal.creation.cglib.ClassImposterizer$3.setSuperclass(java.lang.Class)" proba="1.0"></transition></state><state id="s4"><transition target="s5" action="org.mockito.internal.creation.cglib.ClassImposterizer$3.setInterfaces(java.lang.Class[])" proba="1.0"></transition></state><state id="s5"><transition target="s4" action="org.mockito.internal.creation.cglib.ClassImposterizer$3.setSuperclass(java.lang.Class)" proba="0.5"></transition><transition target="s6" action="org.mockito.internal.creation.cglib.ClassImposterizer$3.setCallbackTypes(java.lang.Class[])" proba="0.5"></transition></state><state id="s6"><transition target="s7" action="org.mockito.internal.creation.cglib.ClassImposterizer$3.setCallbackFilter(org.mockito.cglib.proxy.CallbackFilter)" proba="1.0"></transition></state><state id="s10"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s7"><transition target="s8" action="org.mockito.internal.creation.cglib.ClassImposterizer$3.setNamingPolicy(org.mockito.cglib.core.NamingPolicy)" proba="1.0"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="s8" action="org.mockito.internal.creation.cglib.ClassImposterizer$3.setNamingPolicy(org.mockito.cglib.core.NamingPolicy)" proba="0.5"></transition><transition target="s9" action="org.mockito.internal.creation.cglib.ClassImposterizer$3.setSerialVersionUID(java.lang.Long)" proba="0.5"></transition></state><state id="s9"><transition target="s10" action="org.mockito.internal.creation.cglib.ClassImposterizer$3.createClass()" proba="1.0"></transition></state><state id="s0"><transition target="s1" action="org.mockito.internal.creation.cglib.ClassImposterizer$3.&lt;init&gt;(org.mockito.internal.creation.cglib.ClassImposterizer)" proba="1.0"></transition></state><state id="s1"><transition target="s2" action="org.mockito.internal.creation.cglib.ClassImposterizer$3.setClassLoader(java.lang.ClassLoader)" proba="1.0"></transition></state><state id="s2"><transition target="s3" action="org.mockito.internal.creation.cglib.ClassImposterizer$3.setUseFactory(boolean)" proba="1.0"></transition></state></states></ts>