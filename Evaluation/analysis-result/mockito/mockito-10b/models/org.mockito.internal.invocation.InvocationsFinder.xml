<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="org.mockito.internal.invocation.InvocationsFinder.findAllMatchingUnverifiedChunks(java.util.List,org.mockito.internal.invocation.InvocationMatcher,org.mockito.internal.verification.api.InOrderContext)" proba="0.4"></transition><transition target="s4" action="org.mockito.internal.invocation.InvocationsFinder.findPreviousVerifiedInOrder(java.util.List,org.mockito.internal.verification.api.InOrderContext)" proba="0.2"></transition><transition target="sX" action="epsilon" proba="0.2"></transition><transition target="s2" action="org.mockito.internal.invocation.InvocationsFinder.getLastLocation(java.util.List)" proba="0.2"></transition></state><state id="s4"><transition target="s4" action="org.mockito.internal.invocation.InvocationsFinder.findPreviousVerifiedInOrder(java.util.List,org.mockito.internal.verification.api.InOrderContext)" proba="0.3333333333333333"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition><transition target="s1" action="org.mockito.internal.invocation.InvocationsFinder.findInvocations(java.util.List,org.mockito.internal.invocation.InvocationMatcher)" proba="0.3333333333333333"></transition></state><state id="s5"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s6"><transition target="sX" action="epsilon" proba="0.75"></transition><transition target="s2" action="org.mockito.internal.invocation.InvocationsFinder.getLastLocation(java.util.List)" proba="0.25"></transition></state><state id="s7"><transition target="s7" action="org.mockito.internal.invocation.InvocationsFinder.findFirstUnverified(java.util.List)" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.5"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="s1" action="org.mockito.internal.invocation.InvocationsFinder.findInvocations(java.util.List,org.mockito.internal.invocation.InvocationMatcher)" proba="1.0"></transition></state><state id="s9"><transition target="sX" action="epsilon" proba="0.5"></transition><transition target="s9" action="org.mockito.internal.invocation.InvocationsFinder.findFirstUnverified(java.util.List,java.lang.Object)" proba="0.5"></transition></state><state id="s11"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s10"><transition target="s10" action="org.mockito.internal.invocation.InvocationsFinder.findFirstUnverifiedInOrder(org.mockito.internal.verification.api.InOrderContext,java.util.List)" proba="0.6"></transition><transition target="sX" action="epsilon" proba="0.4"></transition></state><state id="s0"><transition target="s3" action="org.mockito.internal.invocation.InvocationsFinder.findAllMatchingUnverifiedChunks(java.util.List,org.mockito.internal.invocation.InvocationMatcher,org.mockito.internal.verification.api.InOrderContext)" proba="0.13636363636363635"></transition><transition target="s4" action="org.mockito.internal.invocation.InvocationsFinder.findPreviousVerifiedInOrder(java.util.List,org.mockito.internal.verification.api.InOrderContext)" proba="0.045454545454545456"></transition><transition target="s5" action="org.mockito.internal.invocation.InvocationsFinder.findSimilarInvocation(java.util.List,org.mockito.internal.invocation.InvocationMatcher)" proba="0.09090909090909091"></transition><transition target="s11" action="org.mockito.internal.invocation.InvocationsFinder.findFirstMatchingUnverifiedInvocation(java.util.List,org.mockito.internal.invocation.InvocationMatcher,org.mockito.internal.verification.api.InOrderContext)" proba="0.045454545454545456"></transition><transition target="s6" action="org.mockito.internal.invocation.InvocationsFinder.findMatchingChunk(java.util.List,org.mockito.internal.invocation.InvocationMatcher,int,org.mockito.internal.verification.api.InOrderContext)" proba="0.18181818181818182"></transition><transition target="s10" action="org.mockito.internal.invocation.InvocationsFinder.findFirstUnverifiedInOrder(org.mockito.internal.verification.api.InOrderContext,java.util.List)" proba="0.09090909090909091"></transition><transition target="s7" action="org.mockito.internal.invocation.InvocationsFinder.findFirstUnverified(java.util.List)" proba="0.045454545454545456"></transition><transition target="s8" action="org.mockito.internal.invocation.InvocationsFinder.&lt;init&gt;()" proba="0.045454545454545456"></transition><transition target="s9" action="org.mockito.internal.invocation.InvocationsFinder.findFirstUnverified(java.util.List,java.lang.Object)" proba="0.045454545454545456"></transition><transition target="s1" action="org.mockito.internal.invocation.InvocationsFinder.findInvocations(java.util.List,org.mockito.internal.invocation.InvocationMatcher)" proba="0.22727272727272727"></transition><transition target="s2" action="org.mockito.internal.invocation.InvocationsFinder.getLastLocation(java.util.List)" proba="0.045454545454545456"></transition></state><state id="s1"><transition target="s5" action="org.mockito.internal.invocation.InvocationsFinder.findSimilarInvocation(java.util.List,org.mockito.internal.invocation.InvocationMatcher)" proba="0.25"></transition><transition target="s7" action="org.mockito.internal.invocation.InvocationsFinder.findFirstUnverified(java.util.List)" proba="0.125"></transition><transition target="sX" action="epsilon" proba="0.25"></transition><transition target="s1" action="org.mockito.internal.invocation.InvocationsFinder.findInvocations(java.util.List,org.mockito.internal.invocation.InvocationMatcher)" proba="0.125"></transition><transition target="s2" action="org.mockito.internal.invocation.InvocationsFinder.getLastLocation(java.util.List)" proba="0.25"></transition></state><state id="s2"><transition target="sX" action="epsilon" proba="0.8333333333333334"></transition><transition target="s2" action="org.mockito.internal.invocation.InvocationsFinder.getLastLocation(java.util.List)" proba="0.16666666666666666"></transition></state></states></ts>